{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toumi\\\\Desktop\\\\projet pfe\\\\prpfe\\\\frontend\\\\src\\\\views\\\\admin\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [embedToken, setEmbedToken] = useState(null);\n  useEffect(() => {\n    const fetchEmbedToken = async () => {\n      const jwtToken = localStorage.getItem('jwt_token'); // Récupère ton JWT token\n\n      // Requête pour obtenir le Embed Token via ton backend\n      const response = await fetch('TON_BACKEND_URL/getEmbedToken', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          jwtToken\n        }) // Envoie le JWT token au backend\n      });\n      const data = await response.json();\n      setEmbedToken(data.embedToken); // Stocke l'Embed Token\n    };\n    fetchEmbedToken();\n  }, []);\n  if (!embedToken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mon Dashboard Power BI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"Power BI Report\",\n      width: \"100%\",\n      height: \"600px\",\n      src: `https://app.powerbi.com/reportEmbed?reportId=TON_REPORT_ID&groupId=TON_WORKSPACE_ID&embedToken=${embedToken}`,\n      allowFullScreen: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"JWxDNxJ4KQq8YiygYbca8QOWLTE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","embedToken","setEmbedToken","fetchEmbedToken","jwtToken","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","title","width","height","src","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/Toumi/Desktop/projet pfe/prpfe/frontend/src/views/admin/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Dashboard = () => {\r\n  const [embedToken, setEmbedToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEmbedToken = async () => {\r\n      const jwtToken = localStorage.getItem('jwt_token'); // Récupère ton JWT token\r\n\r\n      // Requête pour obtenir le Embed Token via ton backend\r\n      const response = await fetch('TON_BACKEND_URL/getEmbedToken', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ jwtToken }), // Envoie le JWT token au backend\r\n      });\r\n\r\n      const data = await response.json();\r\n      setEmbedToken(data.embedToken); // Stocke l'Embed Token\r\n    };\r\n\r\n    fetchEmbedToken();\r\n  }, []);\r\n\r\n  if (!embedToken) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Mon Dashboard Power BI</h2>\r\n      <iframe\r\n        title=\"Power BI Report\"\r\n        width=\"100%\"\r\n        height=\"600px\"\r\n        src={`https://app.powerbi.com/reportEmbed?reportId=TON_REPORT_ID&groupId=TON_WORKSPACE_ID&embedToken=${embedToken}`}\r\n       \r\n        allowFullScreen=\"true\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;;MAEpD;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET;QAAS,CAAC,CAAC,CAAE;MACtC,CAAC,CAAC;MAEF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCb,aAAa,CAACY,IAAI,CAACb,UAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAEDE,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,UAAU,EAAE;IACf,oBAAOH,OAAA;MAAAkB,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BtB,OAAA;MACEuB,KAAK,EAAC,iBAAiB;MACvBC,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,OAAO;MACdC,GAAG,EAAE,kGAAkGvB,UAAU,EAAG;MAEpHwB,eAAe,EAAC;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACpB,EAAA,CAxCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}