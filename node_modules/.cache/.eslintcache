[{"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\index.js":"1","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Auth.js":"2","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Landing.js":"3","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Index.js":"4","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Profile.js":"5","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Test.js":"6","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\Register.js":"7","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\Login.js":"8","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\FooterAdmin.js":"9","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\AuthNavbar.js":"10","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\AdminNavbar.js":"11","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\FooterSmall.js":"12","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\Footer.js":"13","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Headers\\HeaderStats.js":"14","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Sidebar\\Sidebar.js":"15","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\IndexNavbar.js":"16","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\forget.js":"17","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardLineChart.js":"18","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Ticket\\NewTicket.js":"19","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardPageVisits.js":"20","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardSocialTraffic.js":"21","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardSettings.js":"22","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardStats.js":"23","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardBarChart.js":"24","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardTable.js":"25","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardProfile.js":"26","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Maps\\MapExample.js":"27","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\IndexDropdown.js":"28","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\PagesDropdown.js":"29","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\UserDropdown.js":"30","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\NotificationDropdown.js":"31","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Calender\\Calenderr.js":"32","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\TableDropdown.js":"33","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\TicketTable.js":"34","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\services\\ApiUser.js":"35","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Login.js":"36","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Register.js":"37","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Ticket.js":"38","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\Footerr.js":"39","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\MyTickets.js":"40","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Technicien\\TechnicienTable.js":"41","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Technicien.js":"42","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Ticket.js":"43","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Settings.js":"44","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Calender.js":"45","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Sidebar\\Sidebartechnicien.js":"46","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Admin.js":"47","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Dashboard.js":"48","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Maps.js":"49","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Tables.js":"50","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Settings.js":"51","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Ticket.js":"52","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\CardTech.js":"53","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Calender.js":"54","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Utilisateur.js":"55","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Sidebar\\Sidebarutilisateur.js":"56","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\utilisateur\\Settings.js":"57","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Headers\\Headeruser.js":"58","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\homepagevisiteur.js":"59","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\VisiteurNavbar.js":"60","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\utilisateur\\MyTickets.js":"61","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Commentaire.js":"62","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Dashboard.js":"63","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Commentaire.js":"64"},{"size":1860,"mtime":1745869496839,"results":"65","hashOfConfig":"66"},{"size":1166,"mtime":1744886413298,"results":"67","hashOfConfig":"66"},{"size":27259,"mtime":1744886413299,"results":"68","hashOfConfig":"66"},{"size":4018,"mtime":1745922772763,"results":"69","hashOfConfig":"66"},{"size":6986,"mtime":1744886413300,"results":"70","hashOfConfig":"66"},{"size":25027,"mtime":1746025454657,"results":"71","hashOfConfig":"66"},{"size":5036,"mtime":1744886413305,"results":"72","hashOfConfig":"66"},{"size":4657,"mtime":1744886413304,"results":"73","hashOfConfig":"66"},{"size":2503,"mtime":1744886413292,"results":"74","hashOfConfig":"66"},{"size":5395,"mtime":1744886413295,"results":"75","hashOfConfig":"66"},{"size":1735,"mtime":1745799021854,"results":"76","hashOfConfig":"66"},{"size":2612,"mtime":1744886413293,"results":"77","hashOfConfig":"66"},{"size":5016,"mtime":1744886413292,"results":"78","hashOfConfig":"66"},{"size":2469,"mtime":1744886413293,"results":"79","hashOfConfig":"66"},{"size":8113,"mtime":1745956508744,"results":"80","hashOfConfig":"66"},{"size":6822,"mtime":1745866967982,"results":"81","hashOfConfig":"66"},{"size":2404,"mtime":1744886413305,"results":"82","hashOfConfig":"66"},{"size":3776,"mtime":1744886413287,"results":"83","hashOfConfig":"66"},{"size":909,"mtime":1745519721731,"results":"84","hashOfConfig":"66"},{"size":6405,"mtime":1744886413288,"results":"85","hashOfConfig":"66"},{"size":7748,"mtime":1744886413289,"results":"86","hashOfConfig":"66"},{"size":13024,"mtime":1745866409165,"results":"87","hashOfConfig":"66"},{"size":2574,"mtime":1744886413289,"results":"88","hashOfConfig":"66"},{"size":3562,"mtime":1744886413287,"results":"89","hashOfConfig":"66"},{"size":24050,"mtime":1745780744648,"results":"90","hashOfConfig":"66"},{"size":3747,"mtime":1744886413288,"results":"91","hashOfConfig":"66"},{"size":2413,"mtime":1744886413294,"results":"92","hashOfConfig":"66"},{"size":3805,"mtime":1744886413290,"results":"93","hashOfConfig":"66"},{"size":4046,"mtime":1744886413291,"results":"94","hashOfConfig":"66"},{"size":2803,"mtime":1744886413291,"results":"95","hashOfConfig":"66"},{"size":2481,"mtime":1744886413290,"results":"96","hashOfConfig":"66"},{"size":2683,"mtime":1745940513985,"results":"97","hashOfConfig":"66"},{"size":2022,"mtime":1726085470000,"results":"98","hashOfConfig":"66"},{"size":25027,"mtime":1746043394431,"results":"99","hashOfConfig":"66"},{"size":171,"mtime":1744886413298,"results":"100","hashOfConfig":"66"},{"size":7270,"mtime":1745935409057,"results":"101","hashOfConfig":"66"},{"size":7639,"mtime":1745420444170,"results":"102","hashOfConfig":"66"},{"size":8609,"mtime":1746043157577,"results":"103","hashOfConfig":"66"},{"size":1815,"mtime":1744886413293,"results":"104","hashOfConfig":"66"},{"size":13080,"mtime":1746043128579,"results":"105","hashOfConfig":"66"},{"size":25827,"mtime":1746005210309,"results":"106","hashOfConfig":"66"},{"size":1420,"mtime":1745957093515,"results":"107","hashOfConfig":"66"},{"size":342,"mtime":1745512548284,"results":"108","hashOfConfig":"66"},{"size":472,"mtime":1745794179308,"results":"109","hashOfConfig":"66"},{"size":348,"mtime":1745940529478,"results":"110","hashOfConfig":"66"},{"size":4796,"mtime":1745957004713,"results":"111","hashOfConfig":"66"},{"size":1694,"mtime":1745956654163,"results":"112","hashOfConfig":"66"},{"size":911,"mtime":1744886413303,"results":"113","hashOfConfig":"66"},{"size":444,"mtime":1744886413303,"results":"114","hashOfConfig":"66"},{"size":441,"mtime":1745581890819,"results":"115","hashOfConfig":"66"},{"size":473,"mtime":1745781743353,"results":"116","hashOfConfig":"66"},{"size":342,"mtime":1745512548284,"results":"117","hashOfConfig":"66"},{"size":234,"mtime":1745677175576,"results":"118","hashOfConfig":"66"},{"size":228,"mtime":1744886413302,"results":"119","hashOfConfig":"66"},{"size":981,"mtime":1745800689636,"results":"120","hashOfConfig":"66"},{"size":3255,"mtime":1745938483487,"results":"121","hashOfConfig":"66"},{"size":471,"mtime":1745794201070,"results":"122","hashOfConfig":"66"},{"size":313,"mtime":1745917569808,"results":"123","hashOfConfig":"66"},{"size":4093,"mtime":1745798546830,"results":"124","hashOfConfig":"66"},{"size":2975,"mtime":1745798262476,"results":"125","hashOfConfig":"66"},{"size":10528,"mtime":1746035273640,"results":"126","hashOfConfig":"66"},{"size":10512,"mtime":1746009526284,"results":"127","hashOfConfig":"66"},{"size":911,"mtime":1744886413303,"results":"128","hashOfConfig":"66"},{"size":8326,"mtime":1745970309614,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"xh86ji",{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"132"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"132"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"132"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"132"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"132"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"132"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"132"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"132"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"132"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"132"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"132"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"132"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"132"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"132"},"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\index.js",[],["282","283"],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Auth.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Landing.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Index.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Profile.js",["284","285","286","287"],"import React from \"react\";\r\n\r\nimport Navbar from \"components/Navbars/AuthNavbar.js\";\r\nimport Footer from \"components/Footers/Footer.js\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nexport default function Profile() {\r\n  return (\r\n    <>\r\n      <Navbar transparent />\r\n      <main className=\"profile-page\">\r\n        <main className=\"profile-page\">\r\n          <section className=\"relative block h-500-px\">\r\n            <div\r\n              className=\"absolute top-0 w-full h-full bg-center bg-cover\"\r\n              style={{\r\n                backgroundImage:\r\n                  \"url('https://images.unsplash.com/photo-1499336315816-097655dcfbda?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2710&q=80')\",\r\n              }}\r\n            >\r\n              <span\r\n                id=\"blackOverlay\"\r\n                className=\"w-full h-full absolute opacity-50 bg-black\"\r\n              ></span>\r\n            </div>\r\n\r\n            <div\r\n              className=\"top-auto bottom-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden h-70-px\"\r\n              style={{ transform: \"translateZ(0)\" }}\r\n            >\r\n              <svg\r\n                className=\"absolute bottom-0 overflow-hidden\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                preserveAspectRatio=\"none\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 2560 100\"\r\n                x=\"0\"\r\n                y=\"0\"\r\n              >\r\n                <polygon\r\n                  className=\"text-blueGray-200 fill-current\"\r\n                  points=\"2560 0 2560 100 0 100\"\r\n                ></polygon>\r\n              </svg>\r\n            </div>\r\n          </section>\r\n          <section className=\"relative py-16 bg-blueGray-200\">\r\n            <div className=\"container mx-auto px-4\">\r\n              <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-xl rounded-lg -mt-64\">\r\n                <div className=\"px-6\">\r\n                  <div className=\"flex flex-wrap justify-center\">\r\n                    <div className=\"w-full lg:w-3/12 px-4 lg:order-2 flex justify-center\">\r\n                      <div className=\"relative\">\r\n                        <img\r\n                          alt=\"...\"\r\n                          src={require(\"assets/img/team-2-800x800.jpg\").default}\r\n                          className=\"shadow-xl rounded-full h-auto align-middle border-none absolute -m-16 -ml-20 lg:-ml-16 max-w-150-px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-4/12 px-4 lg:order-3 lg:text-right lg:self-center\">\r\n                      <div className=\"py-6 px-3 mt-32 sm:mt-0\">\r\n                        <button\r\n                          className=\"bg-lightBlue-500 active:bg-lightBlue-600 uppercase text-white font-bold hover:shadow-md shadow text-xs px-4 py-2 rounded outline-none focus:outline-none sm:mr-2 mb-1 ease-linear transition-all duration-150\"\r\n                          type=\"button\"\r\n                        >\r\n                          Connect\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-4/12 px-4 lg:order-1\">\r\n                      <div className=\"flex justify-center py-4 lg:pt-4 pt-8\">\r\n                        <div className=\"mr-4 p-3 text-center\">\r\n                          <span className=\"text-xl font-bold block uppercase tracking-wide text-blueGray-600\">\r\n                            22\r\n                          </span>\r\n                          <span className=\"text-sm text-blueGray-400\">\r\n                            Friends\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"mr-4 p-3 text-center\">\r\n                          <span className=\"text-xl font-bold block uppercase tracking-wide text-blueGray-600\">\r\n                            10\r\n                          </span>\r\n                          <span className=\"text-sm text-blueGray-400\">\r\n                            Photos\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"lg:mr-4 p-3 text-center\">\r\n                          <span className=\"text-xl font-bold block uppercase tracking-wide text-blueGray-600\">\r\n                            89\r\n                          </span>\r\n                          <span className=\"text-sm text-blueGray-400\">\r\n                            Comments\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-center mt-12\">\r\n                    <h3 className=\"text-4xl font-semibold leading-normal mb-2 text-blueGray-700 mb-2\">\r\n                      Jenna Stones\r\n                    </h3>\r\n                    <div className=\"text-sm leading-normal mt-0 mb-2 text-blueGray-400 font-bold uppercase\">\r\n                      <i className=\"fas fa-map-marker-alt mr-2 text-lg text-blueGray-400\"></i>{\" \"}\r\n                      Los Angeles, California\r\n                    </div>\r\n                    <div className=\"mb-2 text-blueGray-600 mt-10\">\r\n                      <i className=\"fas fa-briefcase mr-2 text-lg text-blueGray-400\"></i>\r\n                      Solution Manager - Creative Tim Officer\r\n                    </div>\r\n                    <div className=\"mb-2 text-blueGray-600\">\r\n                      <i className=\"fas fa-university mr-2 text-lg text-blueGray-400\"></i>\r\n                      University of Computer Science\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mt-10 py-10 border-t border-blueGray-200 text-center\">\r\n                    <div className=\"flex flex-wrap justify-center\">\r\n                      <div className=\"w-full lg:w-9/12 px-4\">\r\n                        <p className=\"mb-4 text-lg leading-relaxed text-blueGray-700\">\r\n                          An artist of considerable range, Jenna the name taken\r\n                          by Melbourne-raised, Brooklyn-based Nick Murphy\r\n                          writes, performs and records all of his own music,\r\n                          giving it a warm, intimate feel with a solid groove\r\n                          structure. An artist of considerable range.\r\n                        </p>\r\n                        <a\r\n                          href=\"#pablo\"\r\n                          className=\"font-normal text-lightBlue-500\"\r\n                          onClick={(e) => e.preventDefault()}\r\n                        >\r\n                          Show more\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n\r\n        <Footer />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Test.js",["288"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FaFilter, FaEdit, FaTrash, FaEye } from \"react-icons/fa\";\r\nimport { X } from \"lucide-react\";\r\n\r\nexport default function TicketTable({ color }) {\r\n  const [items, setItems] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filterType, setFilterType] = useState(\"\");\r\n  const [filterId, setFilterId] = useState(\"\");\r\n\r\n  // États création\r\n  const [modalOuvert, setModalOuvert] = useState(false);\r\n  const [newTicket, setNewTicket] = useState({\r\n    subject: \"\",\r\n    type: \"\",\r\n    urgency: \"\",\r\n    description: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // États édition\r\n  const [editModalOuvert, setEditModalOuvert] = useState(false);\r\n  const [editingTicket, setEditingTicket] = useState(null);\r\n  const [editErrors, setEditErrors] = useState({});\r\n\r\n  // États suppression\r\n  const [deleteModalOuvert, setDeleteModalOuvert] = useState(false);\r\n  const [ticketToDelete, setTicketToDelete] = useState(null);\r\n\r\n  // États détails\r\n  const [detailsModalOpen, setDetailsModalOpen] = useState(false);\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTickets = async () => {\r\n      try {\r\n        const { data } = await axios.get('/alltickets');\r\n        const formatted = data.map(t => {\r\n          // Corrigez le format de date ici\r\n          const [day, month, year] = t.date.split('/');\r\n          const isoDate = `${year}-${month}-${day}`;\r\n  \r\n          return {\r\n            id: t._id,\r\n            surnom: t.createur?.surnom || 'Anonyme',\r\n            email: t.createur?.email || 'N/A',\r\n            urgency: t.urgence,\r\n            description: t.description,\r\n            status: t.statut.charAt(0).toUpperCase() + t.statut.slice(1),\r\n            date: new Date(isoDate).toLocaleDateString('fr-FR', {\r\n              day: '2-digit',\r\n              month: '2-digit',\r\n              year: 'numeric'\r\n            }),\r\n            subject: t.sujet,\r\n            type: t.type,\r\n            statut: t.statut\r\n          };\r\n        });\r\n        setItems(formatted);\r\n      } catch (error) {\r\n        console.error(\"Erreur chargement:\", error.response?.data);\r\n      }\r\n    };\r\n    fetchTickets();\r\n  }, [modalOuvert, editModalOuvert, deleteModalOuvert]);\r\n\r\n  const handleChange = (e) => {\r\n    setNewTicket({ ...newTicket, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    setEditingTicket({ ...editingTicket, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateForm = (ticket, isEdit = false) => {\r\n    const errors = {};\r\n    \r\n    // Validation du sujet\r\n    if (!ticket.subject?.trim()) {\r\n      errors.subject = \"Le sujet est requis.\";\r\n    }\r\n  \r\n    // Validation du type\r\n    if (!ticket.type) {\r\n      errors.type = \"Le type est requis.\";\r\n    }\r\n  \r\n    // Validation de l'urgence (uniquement à la création)\r\n    if (!isEdit && !ticket.urgency) {\r\n      errors.urgency = \"L'urgence est requise.\";\r\n    }\r\n  \r\n    // Validation de la description\r\n    if (!ticket.description?.trim()) {\r\n      errors.description = \"La description est requise.\";\r\n    }\r\n  \r\n    // Validation du statut (uniquement en édition)\r\n    if (isEdit && !ticket.statut) {\r\n      errors.statut = \"Le statut est requis.\";\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\n  const handleCreateSubmit = async () => {\r\n    const errors = validateForm(newTicket);\r\n    if (Object.keys(errors).length > 0) return setErrors(errors);\r\n\r\n    try {\r\n      const response = await axios.post('/addticket', {\r\n        sujet: newTicket.subject,\r\n        type: newTicket.type,\r\n        urgence: newTicket.urgency,\r\n        description: newTicket.description\r\n      });\r\n\r\n      setItems(prev => [...prev, {\r\n        id: response.data._id,\r\n        subject: response.data.sujet,\r\n        type: response.data.type,\r\n        urgency: response.data.urgence,\r\n        description: response.data.description,\r\n        status: 'Ouvert',\r\n        date: new Date(response.data.date).toLocaleDateString('fr-FR')\r\n      }]);\r\n      \r\n      setModalOuvert(false);\r\n      setNewTicket({ subject: \"\", type: \"\", urgency: \"\", description: \"\" });\r\n\r\n    } catch (error) {\r\n      console.error('Erreur création:', error.response?.data);\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async () => {\r\n    // Valider le formulaire avec le mode édition\r\n    const errors = validateForm(editingTicket, true);\r\n    if (Object.keys(errors).length > 0) return setEditErrors(errors);\r\n  \r\n    try {\r\n      // Préparer les données pour le backend\r\n      const updateData = {\r\n        sujet: editingTicket.subject,\r\n        type: editingTicket.type,\r\n        urgence: editingTicket.urgency,\r\n        description: editingTicket.description,\r\n        statut: editingTicket.statut // Conserver la casse originale du backend\r\n      };\r\n  \r\n      // Envoyer la requête de mise à jour\r\n      await axios.put(`/updateticket/${editingTicket.id}`, updateData);\r\n  \r\n      // Fermer la modal et rafraîchir les données\r\n      setEditModalOuvert(false);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Erreur de mise à jour:\", error.response?.data);\r\n      // Gestion des erreurs serveur\r\n      if (error.response?.data?.errors) {\r\n        setEditErrors(error.response.data.errors);\r\n      }\r\n    }\r\n  };\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await axios.delete(`/deleteticket/${ticketToDelete}`);\r\n      setItems(prev => prev.filter(item => item.id !== ticketToDelete));\r\n      setDeleteModalOuvert(false);\r\n    } catch (error) {\r\n      console.error(\"Erreur de suppression:\", error.response?.data);\r\n    }\r\n  };\r\n\r\n  const filteredItems = items.filter(item => {\r\n   \r\n    const matchesId = filterId ? item.id.toString().includes(filterId) : true;\r\n    const matchesSearch = searchQuery\r\n    ? item.surnom.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      item.email.toLowerCase().includes(searchQuery.toLowerCase())\r\n    : true;\r\n    const matchesUrgency = filterType ? item.urgency === filterType : true;\r\n\r\n    return matchesId && matchesSearch && matchesUrgency;\r\n  });\r\n\r\n  const badgeStyle = (status) => ({\r\n    padding: \"0.25rem 0.5rem\",\r\n    borderRadius: \"9999px\",\r\n    fontSize: \"0.75rem\",\r\n    fontWeight: \"500\",\r\n    backgroundColor:\r\n      status === \"Ouvert\" ? \"#fee2e2\" :\r\n      status === \"En cours\" ? \"#ffedd5\" : \"#dcfce7\",\r\n    color:\r\n      status === \"Ouvert\" ? \"#dc2626\" :\r\n      status === \"En cours\" ? \"#ea580c\" : \"#16a34a\",\r\n  });\r\n\r\n  return (\r\n    <div className={`relative mx-auto max-w-screen-xl flex flex-col min-w-0 rounded-lg shadow-lg mb-10 ${\r\n      color === \"light\" ? \"bg-white\" : \"bg-slate-800 text-white\"\r\n    }`}>\r\n      \r\n      <style jsx>{`\r\n        .gp-action-icon {\r\n          padding: 0.45rem;\r\n          border-radius: 0.375rem;\r\n          transition: all 0.2s ease;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n        .gp-view {\r\n          background-color: #dbeafe;\r\n          color: #2563eb;\r\n        }\r\n        .gp-view:hover {\r\n          background-color: #bfdbfe;\r\n        }\r\n        .gp-edit {\r\n          background-color: #e0f2fe;\r\n          color: #0284c7;\r\n        }\r\n        .gp-edit:hover {\r\n          background-color: #bae6fd;\r\n        }\r\n        .gp-delete {\r\n          background-color: #fee2e2;\r\n          color: #dc2626;\r\n        }\r\n        .gp-delete:hover {\r\n          background-color: #fecaca;\r\n        }\r\n        .gp-add-button {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 0.5rem;\r\n          background-color: #0ea5e9;\r\n          color: white;\r\n          padding: 0.55rem 2.5rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 500;\r\n          transition: all 0.2s ease;\r\n        }\r\n        .gp-add-button:hover {\r\n          background-color: #0284c7;\r\n        }\r\n        .gp-modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100vw;\r\n          height: 100vh;\r\n          background-color: rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 50;\r\n        }\r\n        .gp-modal-container {\r\n          background-color: white;\r\n          border-radius: 0.75rem;\r\n          padding: 2rem;\r\n          width: 90%;\r\n          max-width: 500px;\r\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n        }\r\n        .gp-modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 1rem;\r\n        }\r\n        .gp-form-group {\r\n          margin-bottom: 1.5rem;\r\n        }\r\n        .gp-form-input {\r\n          width: 100%;\r\n          padding: 0.5rem;\r\n          border: 1px solid #ccc;\r\n          border-radius: 0.375rem;\r\n        }\r\n        .gp-disabled-input {\r\n          background-color: #f3f4f6;\r\n          cursor: not-allowed;\r\n        }\r\n        .gp-readonly-text {\r\n          padding: 0.5rem;\r\n          background-color: #f3f4f6;\r\n          border-radius: 0.375rem;\r\n          display: block;\r\n        }\r\n        .gp-btn {\r\n          padding: 0.5rem 1.25rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n        .gp-btn-save {\r\n          background-color: #0ea5e9;\r\n          color: white;\r\n        }\r\n        .gp-btn-save:hover {\r\n          background-color: #0284c7;\r\n        }\r\n        .gp-btn-cancel {\r\n          background-color: #f3f4f6;\r\n          color: #374151;\r\n        }\r\n        .gp-btn-cancel:hover {\r\n          background-color: #e5e7eb;\r\n        }\r\n        .gp-btn-danger {\r\n          background-color: #dc2626;\r\n          color: white;\r\n        }\r\n        .gp-btn-danger:hover {\r\n          background-color: #b91c1c;\r\n        }\r\n        .gp-delete-modal-content {\r\n          text-align: center;\r\n          padding: 2rem;\r\n        }\r\n        .gp-delete-buttons {\r\n          display: flex;\r\n          justify-content: center;\r\n          gap: 1rem;\r\n          margin-top: 2rem;\r\n        }\r\n      `}</style>\r\n\r\n      <div className=\"px-6 pt-6 border-b-2 border-gray-300\">\r\n        <h1 className={`text-2xl font-bold text-center ${\r\n          color === \"light\" ? \"text-gray-800\" : \"text-white\"\r\n        }`}>\r\n          Liste des tickets\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"flex justify-between px-6 pt-6 pb-4 items-center gap-4\">\r\n        <input\r\n          type=\"text\"\r\n      \r\n          placeholder=\"🔍 Rechercher par surnom ou email...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          className=\"w-full sm:w-64 px-4 py-2 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n        />\r\n\r\n        <div className=\"flex gap-4 items-center\">\r\n          <FaFilter className=\"text-gray-700 text-xl mr-2\" />\r\n\r\n          <select\r\n            value={filterType}\r\n            onChange={(e) => setFilterType(e.target.value)}\r\n            className=\"w-50 sm:w-64 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n          >\r\n            <option value=\"\">Filtrer par urgence</option>\r\n            <option value=\"Urgent\">Urgent</option>\r\n            <option value=\"Normal\">Normal</option>\r\n          </select>\r\n\r\n          <button \r\n            className=\"gp-add-button\" \r\n            onClick={() => setModalOuvert(true)}\r\n          >\r\n            <span>+</span>\r\n            <span>Créer</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto px-6 pt-4 pb-14\">\r\n        <table className=\"w-full border-collapse\">\r\n{/* En-têtes du tableau */}\r\n<thead>\r\n  <tr className={`text-left ${color === \"light\" ? \"bg-gray-50 text-gray-500\" : \"bg-slate-700 text-slate-200\"}`}>\r\n    <th className=\"px-6 py-4 font-medium\">ID</th>\r\n    <th className=\"px-6 py-4 font-medium\">Surnom</th>\r\n    <th className=\"px-6 py-4 font-medium\">Email</th>\r\n    <th className=\"px-6 py-4 font-medium\">Urgence</th>\r\n    <th className=\"px-6 py-4 font-medium\">Statut</th>\r\n    <th className=\"px-6 py-4 font-medium\">Date</th>\r\n    <th className=\"px-6 py-4 font-medium\">Actions</th>\r\n  </tr>\r\n</thead>\r\n<tbody>\r\n  {filteredItems.map((item) => (\r\n    <tr key={item.id} className={`border-t ${color === \"light\" ? \"hover:bg-gray-50\" : \"hover:bg-slate-700\"} transition-colors`}>\r\n      <td className=\"px-6 py-4\">{item.id}</td>\r\n      <td className=\"px-6 py-4 font-medium\">{item.surnom}</td>\r\n      <td className=\"px-6 py-4\">{item.email}</td>\r\n      <td className=\"px-6 py-4 font-semibold text-red-600\">{item.urgency}</td>\r\n      <td className=\"px-6 py-4\">\r\n        <span style={badgeStyle(item.status)}>\r\n          {item.status}\r\n        </span>\r\n      </td>\r\n      <td className=\"px-6 py-4\">{item.date}</td>\r\n      \r\n      {/* Colonne Actions - Totalement intacte */}\r\n      <td className=\"px-6 py-4\">\r\n        <div className=\"flex\" style={{ gap: \"8px\" }}>\r\n          <button\r\n            onClick={() => {\r\n              setSelectedTicket(item);\r\n              setDetailsModalOpen(true);\r\n            }}\r\n            className=\"gp-action-icon gp-view\"\r\n            title=\"Voir les détails\"\r\n          >\r\n            <FaEye size={16} />\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setEditingTicket(item);\r\n              setEditModalOuvert(true);\r\n            }}\r\n            className=\"gp-action-icon gp-edit\"\r\n            title=\"Modifier\"\r\n          >\r\n            <FaEdit size={16} />\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setTicketToDelete(item.id);\r\n              setDeleteModalOuvert(true);\r\n            }}\r\n            className=\"gp-action-icon gp-delete\"\r\n            title=\"Supprimer\"\r\n          >\r\n            <FaTrash size={16} />\r\n          </button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  ))}\r\n</tbody>\r\n\r\n        </table>\r\n      </div>\r\n\r\n      {/* Modal Création */}\r\n      {modalOuvert && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Créer un ticket</h2>\r\n              <button onClick={() => setModalOuvert(false)}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Sujet</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"subject\"\r\n                  value={newTicket.subject}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.subject && <p className=\"text-red-500 text-sm\">{errors.subject}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Type</label>\r\n                <select\r\n                  name=\"type\"\r\n                  value={newTicket.type}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                >\r\n                  <option value=\"\">-- Sélectionner --</option>\r\n                  <option value=\"Informatique\">Informatique</option>\r\n                  <option value=\"Ressources humaines\">Ressources humaines</option>\r\n                  <option value=\"Comptabilité\">Comptabilité</option>\r\n                </select>\r\n                {errors.type && <p className=\"text-red-500 text-sm\">{errors.type}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Urgence</label>\r\n                <select\r\n                  name=\"urgency\"\r\n                  value={newTicket.urgency}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                >\r\n                  <option value=\"\">-- Sélectionner --</option>\r\n                  <option value=\"Urgent\">Urgent</option>\r\n                  <option value=\"Normal\">Normal</option>\r\n                </select>\r\n                {errors.urgency && <p className=\"text-red-500 text-sm\">{errors.urgency}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Description</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={newTicket.description}\r\n                  onChange={handleChange}\r\n                  rows={4}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.description && <p className=\"text-red-500 text-sm\">{errors.description}</p>}\r\n              </div>\r\n\r\n              <div className=\"flex justify-end mt-4\" style={{ gap: \"12px\" }}>\r\n                <button \r\n                  type=\"button\"\r\n                  onClick={() => setModalOuvert(false)} \r\n                  className=\"gp-btn gp-btn-cancel\"\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  onClick={handleCreateSubmit} \r\n                  className=\"gp-btn gp-btn-save\"\r\n                >\r\n                  Créer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal Détails */}\r\n      {detailsModalOpen && selectedTicket && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container p-6 bg-white rounded-2xl shadow-2xl max-w-md mx-auto\">\r\n  <div className=\"gp-modal-header flex justify-between items-center border-b pb-4 mb-4\">\r\n    <h2 className=\"text-2xl font-extrabold text-gray-800\">🧾 Détails du ticket</h2>\r\n    <button onClick={() => setDetailsModalOpen(false)} className=\"text-gray-500 hover:text-red-500 transition\">\r\n      <X size={28} />\r\n    </button>\r\n  </div>\r\n\r\n  <div className=\"space-y-4\">\r\n    {[\r\n      { label: ' ID', value: selectedTicket.id },\r\n      { label: ' Sujet', value: selectedTicket.subject },\r\n      { label: ' Type', value: selectedTicket.type },\r\n      { label: '🚨 Urgence', value: selectedTicket.urgency },\r\n      { label: ' Statut', value: selectedTicket.status },\r\n      { label: 'Date', value: selectedTicket.date },\r\n      { label: ' Description', value: selectedTicket.description, isMultiline: true },\r\n    ].map((item, index) => (\r\n      <div\r\n        key={index}\r\n        className=\"bg-gray-100 p-4 rounded-xl shadow-sm hover:shadow-md transition-all duration-300\"\r\n      >\r\n        <label className=\"block text-sm font-bold text-gray-600 mb-1\">{item.label}</label>\r\n        <p className={item.isMultiline ? 'whitespace-pre-wrap text-gray-700' : 'text-gray-700'}>\r\n          {item.value}\r\n        </p>\r\n      </div>\r\n    ))}\r\n  </div>\r\n</div>\r\n\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal Édition */}\r\n      {editModalOuvert && editingTicket && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Modifier le ticket</h2>\r\n              <button onClick={() => setEditModalOuvert(false)}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">ID</label>\r\n                <div className=\"gp-readonly-text\">{editingTicket.id}</div>\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Sujet</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"subject\"\r\n                  value={editingTicket.subject}\r\n                  onChange={handleEditChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {editErrors.subject && <p className=\"text-red-500 text-sm\">{editErrors.subject}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Type</label>\r\n                <select\r\n                  name=\"type\"\r\n                  value={editingTicket.type}\r\n                  onChange={handleEditChange}\r\n                  className=\"gp-form-input\"\r\n                >\r\n                  <option value=\"\">-- Sélectionner --</option>\r\n                  <option value=\"Informatique\">Informatique</option>\r\n                  <option value=\"Ressources humaines\">Ressources humaines</option>\r\n                  <option value=\"Comptabilité\">Comptabilité</option>\r\n                </select>\r\n                {editErrors.type && <p className=\"text-red-500 text-sm\">{editErrors.type}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Urgence</label>\r\n                <select\r\n                  name=\"urgency\"\r\n                  value={editingTicket.urgency}\r\n                  className=\"gp-form-input gp-disabled-input\"\r\n                  disabled\r\n                >\r\n                  <option value=\"Urgent\">Urgent</option>\r\n                  <option value=\"Normal\">Normal</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"gp-form-group\">\r\n  <label className=\"block font-semibold mb-1\">Statut</label>\r\n  <select\r\n    name=\"statut\"\r\n    value={editingTicket.statut}\r\n    onChange={handleEditChange}\r\n    className=\"gp-form-input\"\r\n  >\r\n    <option value=\"ouvert\">Ouvert</option>\r\n    <option value=\"en cours\">En cours</option>\r\n    <option value=\"fermé\">Fermé</option>\r\n  </select>\r\n</div>\r\n\r\n              \r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Description</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={editingTicket.description}\r\n                  onChange={handleEditChange}\r\n                  rows={4}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {editErrors.description && <p className=\"text-red-500 text-sm\">{editErrors.description}</p>}\r\n              </div>\r\n\r\n              <div className=\"flex justify-end mt-4\" style={{ gap: \"12px\" }}>\r\n                <button \r\n                  onClick={() => setEditModalOuvert(false)} \r\n                  className=\"gp-btn gp-btn-cancel\"\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  onClick={handleEditSubmit}\r\n                  className=\"gp-btn gp-btn-save\"\r\n                >\r\n                  Enregistrer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal Suppression */}\r\n      {deleteModalOuvert && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Confirmer la suppression</h2>\r\n              <button onClick={() => setDeleteModalOuvert(false)}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"gp-delete-modal-content\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-16 w-16 text-red-600 mx-auto mb-4\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\r\n                />\r\n              </svg>\r\n              \r\n              <p className=\"text-lg font-medium\">\r\n                Êtes-vous sûr de vouloir supprimer ce ticket ?\r\n              </p>\r\n\r\n              <div className=\"gp-delete-buttons\">\r\n                <button\r\n                  onClick={() => setDeleteModalOuvert(false)}\r\n                  className=\"gp-btn gp-btn-cancel\"\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button\r\n                  onClick={confirmDelete}\r\n                  className=\"gp-btn gp-btn-danger\"\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTicketTable.defaultProps = {\r\n  color: \"light\",\r\n};\r\n\r\nTicketTable.propTypes = {\r\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\r\n};","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\Register.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\Login.js",["289"],"import { useState } from \"react\";\r\nimport { FaGoogle } from \"react-icons/fa\";\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  \r\n\r\n  return (\r\n    <div style={{ \r\n      display: \"flex\", \r\n      height: \"100vh\", \r\n      alignItems: \"center\", \r\n      justifyContent: \"center\", \r\n      backgroundImage: \"url('https://img.freepik.com/premium-vector/abstract-geometric-white-gray-color-background-vector_665257-159.jpg?semt=ais_hybrid')\", \r\n      backgroundSize: \"cover\", \r\n      backgroundPosition: \"center\", \r\n      padding: \"16px\" \r\n    }}>\r\n      <div style={{ \r\n        display: \"grid\", \r\n        gridTemplateColumns: \"1fr 1fr\", \r\n        boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\", \r\n        borderRadius: \"12px\", \r\n        overflow: \"hidden\", \r\n        maxWidth: \"1000px\", \r\n        width: \"100%\", \r\n        position: \"relative\" \r\n      }}>\r\n        \r\n        <img \r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/Logo_STB.png\" \r\n          alt=\"STB Logo\" \r\n          style={{ \r\n            position: \"absolute\", \r\n            top: \"12px\", \r\n            left: \"12px\", \r\n            width: \"120px\", \r\n            height: \"auto\" \r\n          }} \r\n        />\r\n\r\n        <div style={{ padding: \"32px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", background: \"white\" }}>\r\n          <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", color: \"#1f2937\", textAlign: \"center\" }}>Log In</h2>\r\n          <div style={{ marginTop: \"16px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Email</label>\r\n            <input type=\"email\" placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)} style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #d1d5db\", borderRadius: \"6px\", marginTop: \"4px\" }} />\r\n          </div>\r\n          <div style={{ marginTop: \"12px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Password</label>\r\n            <input type=\"password\" placeholder=\"Enter your password\" value={password} onChange={(e) => setPassword(e.target.value)} style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #d1d5db\", borderRadius: \"6px\", marginTop: \"4px\" }} />\r\n          </div>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"12px\" }}>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <input type=\"checkbox\" id=\"remember\" />\r\n              <label htmlFor=\"remember\" style={{ marginLeft: \"6px\", fontSize: \"14px\", color: \"#4b5563\" }}>Remember me</label>\r\n            </div>\r\n            <a href=\"#\" style={{ fontSize: \"14px\", color: \"#3b82f6\", textDecoration: \"none\" }}>Forgot password?</a>\r\n          </div>\r\n          <button style={{ width: \"100%\", background: \"#3b82f6\", color: \"white\", padding: \"10px\", marginTop: \"16px\", borderRadius: \"6px\", fontWeight: \"bold\", cursor: \"pointer\" }}>LOG IN</button>\r\n          <div style={{ display: \"flex\", alignItems: \"center\", margin: \"16px 0\" }}>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n            <span style={{ margin: \"0 8px\", fontSize: \"14px\", color: \"#6b7280\" }}>OR</span>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n          </div>\r\n          <button style={{ width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"8px\", border: \"1px solid #d1d5db\", padding: \"10px\", borderRadius: \"6px\", fontWeight: \"bold\", cursor: \"pointer\", background: \"white\" }}>\r\n            <FaGoogle style={{ color: \"#3b82f6\" }} /> Continue with Google\r\n          </button>\r\n          <p style={{ fontSize: \"14px\", textAlign: \"center\", color: \"#6b7280\", marginTop: \"12px\" }}>\r\n            Don't have an account? <a href=\"Register\" style={{ color: \"#3b82f6\", textDecoration: \"none\" }}>Sign Up</a>\r\n         \r\n          </p>\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", backgroundImage: \"url('https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrxCZS8RUx52KhkLFeYR19uXX3GnbF9-sH75brySGs70DJ1EINGwkFnr6K5LqopCqGHTVK79x_gscCHE_cR1wmpIADhJXkTZIJhDz_VtYuxwekNibQUVl6VKNuq3uOlTsfnFW2F_ZVXsm2m7DU2IGJREbwsM16cR45D3-4iI5AwRArtjCnR713SvfIJpg/s1934/stb%20%20thebanker.jpg')\", backgroundSize: \"cover\", backgroundPosition: \"center\", color: \"white\", padding: \"32px\", textAlign: \"center\" }}>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\FooterAdmin.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\FooterSmall.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\Footer.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Headers\\HeaderStats.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\IndexNavbar.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\forget.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardLineChart.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Ticket\\NewTicket.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardPageVisits.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardSocialTraffic.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardSettings.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardStats.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardBarChart.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardTable.js",["290","291"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FaFilter, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { X } from \"lucide-react\";\r\n\r\nexport default function CardTable({ color }) {\r\n  const [items, setItems] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filterRole, setFilterRole] = useState(\"\");\r\n  const [filterId, setFilterId] = useState(\"\");\r\n\r\n  const [modalOuvert, setModalOuvert] = useState(false);\r\n  const [newUser, setNewUser] = useState({\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    email: \"\",\r\n    telephone: \"\",\r\n    role: \"\",\r\n    password: \"\",\r\n    specialite: \"\", // Ajouté\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [editModalOuvert, setEditModalOuvert] = useState(false);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n  const [editErrors, setEditErrors] = useState({});\r\n\r\n  const [deleteModalOuvert, setDeleteModalOuvert] = useState(false);\r\n  const [userIdToDelete, setUserIdToDelete] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch('/allusers');\r\n        const data = await response.json();\r\n        const formattedUsers = data.map(user => ({\r\n          id: user._id,\r\n          nom: user.nom,\r\n          prenom: user.prenom,\r\n          email: user.email,\r\n          telephone: user.tel,\r\n          role: user.role,\r\n          password: ''\r\n        }));\r\n        setItems(formattedUsers);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors du chargement des utilisateurs:\", error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    setEditingUser({ ...editingUser, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateForm = (user) => {\r\n    const errors = {};\r\n    // ... validations existantes\r\n    if (user.role === 'technicien' && !user.specialite.trim()) {\r\n      errors.specialite = \"La spécialité est requise pour un technicien.\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const validateEditForm = (user) => {\r\n    const errors = {};\r\n    if (!user.nom.trim()) errors.nom = \"Le nom est requis.\";\r\n    if (!user.prenom.trim()) errors.prenom = \"Le prénom est requis.\";\r\n    if (!user.email.trim()) errors.email = \"L'email est requis.\";\r\n    if (!user.telephone.trim()) errors.telephone = \"Le téléphone est requis.\";\r\n    if (!user.role) errors.role = \"Le rôle est requis.\";\r\n    return errors;\r\n  };\r\n\r\n  const handleCreateSubmit = async () => {\r\n    const errors = validateForm(newUser);\r\n    if (Object.keys(errors).length > 0) return setErrors(errors);\r\n\r\n    try {\r\n      const userData = {\r\n        nom: newUser.nom,\r\n        prenom: newUser.prenom,\r\n        email: newUser.email,\r\n        tel: newUser.telephone,\r\n        password: newUser.password,\r\n        role: newUser.role,\r\n        specialite: newUser.role === 'technicien' ? newUser.specialite : undefined,\r\n      };\r\n      \r\n\r\n      const response = await fetch('/adduser', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Erreur inconnue');\r\n      }\r\n\r\n      setItems([...items, {\r\n        id: data._id,\r\n        ...userData,\r\n        telephone: userData.tel,\r\n        specialite: userData.specialite\r\n      }]);\r\n      \r\n      setModalOuvert(false);\r\n      setNewUser({ nom: \"\", prenom: \"\", email: \"\", telephone: \"\", role: \"\", password: \"\" });\r\n      setErrors({});\r\n      \r\n    } catch (error) {\r\n      console.error(\"Erreur:\", error);\r\n      alert(`verifier bien les champs`);\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async () => {\r\n    const errors = validateEditForm(editingUser);\r\n    if (Object.keys(errors).length > 0) return setEditErrors(errors);\r\n\r\n    try {\r\n      const userData = {\r\n        nom: editingUser.nom,\r\n        prenom: editingUser.prenom,\r\n        email: editingUser.email,\r\n        tel: editingUser.telephone,\r\n        role: editingUser.role,\r\n        ...(editingUser.password && { password: editingUser.password })\r\n      };\r\n\r\n      const response = await fetch(`/updateuser/${editingUser.id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData)\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Échec de la mise à jour');\r\n      \r\n      const data = await response.json();\r\n      setItems(items.map(item => \r\n        item.id === editingUser.id ? { \r\n          ...item,\r\n          ...userData,\r\n          telephone: userData.tel\r\n        } : item\r\n      ));\r\n      setEditModalOuvert(false);\r\n    } catch (error) {\r\n      console.error(\"Erreur:\", error);\r\n      alert(\"Erreur lors de la mise à jour de l'utilisateur\");\r\n    }\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    \r\n    try {\r\n      const response = await fetch(`/deleteuser/${userIdToDelete}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Échec de la suppression');\r\n      \r\n      setItems(items.filter(item => item.id !== userIdToDelete));\r\n      setDeleteModalOuvert(false);\r\n    } catch (error) {\r\n      console.error(\"Erreur:\", error);\r\n      alert(\"Erreur lors de la suppression de l'utilisateur\");\r\n    }\r\n  };\r\n  const userToDelete = items.find(item => item.id === userIdToDelete);\r\n\r\n  const filteredItems = items.filter(item => {\r\n    const matchesId = filterId ? item.id.toString().includes(filterId) : true;\r\n    const matchesSearch = searchQuery\r\n      ? item.nom.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        item.prenom.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        item.email.toLowerCase().includes(searchQuery.toLowerCase())\r\n      : true;\r\n    const matchesRole = filterRole ? item.role === filterRole : true;\r\n\r\n    return matchesId && matchesSearch && matchesRole;\r\n  });\r\n\r\n  const roleStyle = (role) => ({\r\n    padding: \"0.25rem 0.5rem\",\r\n    borderRadius: \"9999px\",\r\n    fontSize: \"0.75rem\",\r\n    fontWeight: \"500\",\r\n    backgroundColor:\r\n      role === \"admin\" ? \"#dcfce7\" :\r\n      role === \"technicien\" ? \"#fee2e2\" : \"#f3f4f6\",\r\n    color:\r\n      role === \"admin\" ? \"#16a34a\" :\r\n      role === \"technicien\" ? \"#dc2626\" : \"#374151\",\r\n  });\r\n\r\n  return (\r\n    <div className={`relative mx-auto max-w-screen-xl flex flex-col min-w-0 rounded-lg shadow-lg mb-10 ${\r\n      color === \"light\" ? \"bg-white\" : \"bg-slate-800 text-white\"\r\n    }`}>\r\n      \r\n      <style jsx>{`\r\n        .gp-action-icon {\r\n          padding: 0.45rem;\r\n          border-radius: 0.375rem;\r\n          transition: all 0.2s ease;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n        .gp-edit {\r\n          background-color: #e0f2fe;\r\n          color: #0284c7;\r\n        }\r\n        .gp-edit:hover {\r\n          background-color: #bae6fd;\r\n        }\r\n        .gp-delete {\r\n          background-color: #fee2e2;\r\n          color: #dc2626;\r\n        }\r\n        .gp-delete:hover {\r\n          background-color: #fecaca;\r\n        }\r\n        .gp-add-button {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 0.5rem;\r\n          background-color: #0ea5e9;\r\n          color: white;\r\n          padding: 0.55rem 2.5rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 500;\r\n          transition: all 0.2s ease;\r\n        }\r\n        .gp-add-button:hover {\r\n          background-color: #0284c7;\r\n        }\r\n\r\n        .gp-modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100vw;\r\n          height: 100vh;\r\n          background-color: rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 50;\r\n        }\r\n        .gp-modal-container {\r\n          background-color: white;\r\n          border-radius: 0.75rem;\r\n          padding: 2rem;\r\n          width: 90%;\r\n          max-width: 500px;\r\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n        }\r\n        .gp-modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 1rem;\r\n        }\r\n\r\n        .gp-form-group {\r\n          margin-bottom: 1.5rem;\r\n        }\r\n        .gp-form-input {\r\n          width: 100%;\r\n          padding: 0.5rem;\r\n          border: 1px solid #ccc;\r\n          border-radius: 0.375rem;\r\n        }\r\n        .gp-disabled-input {\r\n          background-color: #f3f4f6;\r\n          cursor: not-allowed;\r\n        }\r\n        .gp-readonly-text {\r\n          padding: 0.5rem;\r\n          background-color: #f3f4f6;\r\n          border-radius: 0.375rem;\r\n          display: block;\r\n        }\r\n\r\n        .gp-btn {\r\n          padding: 0.5rem 1.25rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n        .gp-btn-save {\r\n          background-color: #0ea5e9;\r\n          color: white;\r\n        }\r\n        .gp-btn-save:hover {\r\n          background-color: #0284c7;\r\n        }\r\n        .gp-btn-cancel {\r\n          background-color: #f3f4f6;\r\n          color: #374151;\r\n        }\r\n        .gp-btn-cancel:hover {\r\n          background-color: #e5e7eb;\r\n        }\r\n        .gp-btn-danger {\r\n          background-color: #dc2626;\r\n          color: white;\r\n        }\r\n        .gp-btn-danger:hover {\r\n          background-color: #b91c1c;\r\n        }\r\n\r\n        .gp-delete-modal-content {\r\n          text-align: center;\r\n          padding: 2rem;\r\n        }\r\n        .gp-delete-buttons {\r\n          display: flex;\r\n          justify-content: center;\r\n          gap: 1rem;\r\n          margin-top: 2rem;\r\n        }\r\n      `}</style>\r\n\r\n      <div className=\"px-6 pt-6 border-b-2 border-gray-300\">\r\n        <h1 className={`text-2xl font-bold text-center ${\r\n          color === \"light\" ? \"text-gray-800\" : \"text-white\"\r\n        }`}>\r\n          Liste des utilisateurs\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"flex justify-between px-6 pt-6 pb-4 items-center gap-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"🔍 Rechercher par ID...\"\r\n          value={filterId}\r\n          onChange={(e) => setFilterId(e.target.value)}\r\n          className=\"w-full sm:w-64 px-4 py-2 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n        />\r\n\r\n        <div className=\"flex gap-4 items-center\">\r\n          <FaFilter className=\"text-gray-700 text-xl mr-2\" />\r\n\r\n          <select\r\n            value={filterRole}\r\n            onChange={(e) => setFilterRole(e.target.value)}\r\n            className=\"w-50 sm:w-64 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n          >\r\n            <option value=\"\">Tous les rôles</option>\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"utilisateur\">Utilisateur</option>\r\n            <option value=\"technicien\">Technicien</option>\r\n          </select>\r\n\r\n          <button \r\n            className=\"gp-add-button\" \r\n            onClick={() => setModalOuvert(true)}\r\n          >\r\n            <span>+</span>\r\n            <span>Ajouter </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto px-6 pt-4 pb-14\">\r\n        <table className=\"w-full border-collapse\">\r\n          <thead>\r\n            <tr className={`text-left ${\r\n              color === \"light\" ? \"bg-gray-50 text-gray-500\" : \"bg-slate-700 text-slate-200\"\r\n            }`}>\r\n              <th className=\"px-6 py-4 font-medium\">ID</th>\r\n              <th className=\"px-6 py-4 font-medium\">Nom</th>\r\n              <th className=\"px-6 py-4 font-medium\">Prénom</th>\r\n              <th className=\"px-6 py-4 font-medium\">Email</th>\r\n              <th className=\"px-6 py-4 font-medium\">Téléphone</th>\r\n              <th className=\"px-6 py-4 font-medium\">Rôle</th>\r\n              <th className=\"px-6 py-4 font-medium\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredItems.map((item) => (\r\n              <tr \r\n                key={item.id} \r\n                className={`border-t ${\r\n                  color === \"light\" ? \"hover:bg-gray-50\" : \"hover:bg-slate-700\"\r\n                } transition-colors`}\r\n              >\r\n                <td className=\"px-6 py-4\">{item.id}</td>\r\n                <td className=\"px-6 py-4\">{item.nom}</td>\r\n                <td className=\"px-6 py-4\">{item.prenom}</td>\r\n                <td className=\"px-6 py-4\">{item.email}</td>\r\n                <td className=\"px-6 py-4\">{item.telephone}</td>\r\n                <td className=\"px-6 py-4\">\r\n                  <span style={roleStyle(item.role)}>\r\n                    {item.role}\r\n                  </span>\r\n                </td>\r\n                <td className=\"px-6 py-4\">\r\n                  <div className=\"flex\">\r\n                    <button\r\n                      onClick={() => {\r\n                        setEditingUser(item);\r\n                        setEditModalOuvert(true);\r\n                      }}\r\n                      className=\"gp-action-icon gp-edit mr-2\"\r\n                      title=\"Modifier\"\r\n                    >\r\n                      <FaEdit size={16} />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setUserIdToDelete(item.id);\r\n                        setDeleteModalOuvert(true);\r\n                      }}\r\n                      className=\"gp-action-icon gp-delete\"\r\n                      title=\"Supprimer\"\r\n                    >\r\n                      <FaTrash size={16} />\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {modalOuvert && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Créer un utilisateur</h2>\r\n              <button onClick={() => setModalOuvert(false)}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Nom</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nom\"\r\n                  value={newUser.nom}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.nom && <p className=\"text-red-500 text-sm\">{errors.nom}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Prénom</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"prenom\"\r\n                  value={newUser.prenom}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.prenom && <p className=\"text-red-500 text-sm\">{errors.prenom}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={newUser.email}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Téléphone</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"telephone\"\r\n                  value={newUser.telephone}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.telephone && <p className=\"text-red-500 text-sm\">{errors.telephone}</p>}\r\n              </div>\r\n\r\n             \r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Rôle</label>\r\n                <select\r\n                  name=\"role\"\r\n                  value={newUser.role}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                >\r\n                  <option value=\"\">-- Sélectionner --</option>\r\n                  <option value=\"admin\">Admin</option>\r\n                  <option value=\"utilisateur\">Utilisateur</option>\r\n                  <option value=\"technicien\">Technicien</option>\r\n                </select>\r\n                {errors.role && <p className=\"text-red-500 text-sm\">{errors.role}</p>}\r\n              </div>\r\n              {newUser.role === 'technicien' && (\r\n  <div className=\"gp-form-group\">\r\n    <label className=\"block font-semibold mb-1\">Spécialité</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"specialite\"\r\n      value={newUser.specialite}\r\n      onChange={handleChange}\r\n      className=\"gp-form-input\"\r\n    />\r\n    {errors.specialite && <p className=\"text-red-500 text-sm\">{errors.specialite}</p>}\r\n  </div>\r\n)}\r\n           \r\n\r\n              <div className=\"flex justify-end mt-4\" style={{ gap: \"12px\" }}>\r\n                <button \r\n                  onClick={() => setModalOuvert(false)} \r\n                  className=\"gp-btn gp-btn-cancel\"\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  onClick={handleCreateSubmit} \r\n                  className=\"gp-btn gp-btn-save\"\r\n                >\r\n                  Ajouter\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {editModalOuvert && editingUser && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Modifier l'utilisateur</h2>\r\n              <button onClick={() => setEditModalOuvert(false)}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">ID</label>\r\n                <div className=\"gp-readonly-text\">{editingUser.id}</div>\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Nom</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nom\"\r\n                  value={editingUser.nom}\r\n                  onChange={handleEditChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {editErrors.nom && <p className=\"text-red-500 text-sm\">{editErrors.nom}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Prénom</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"prenom\"\r\n                  value={editingUser.prenom}\r\n                  onChange={handleEditChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {editErrors.prenom && <p className=\"text-red-500 text-sm\">{editErrors.prenom}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={editingUser.email}\r\n                  onChange={handleEditChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {editErrors.email && <p className=\"text-red-500 text-sm\">{editErrors.email}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Téléphone</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"telephone\"\r\n                  value={editingUser.telephone}\r\n                  onChange={handleEditChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {editErrors.telephone && <p className=\"text-red-500 text-sm\">{editErrors.telephone}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Mot de passe</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={editingUser.password || ''}\r\n                  onChange={handleEditChange}\r\n                  className=\"gp-form-input\"\r\n                  placeholder=\"Nouveau mot de passe\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Rôle</label>\r\n                <select\r\n                  name=\"role\"\r\n                  value={editingUser.role}\r\n                  onChange={handleEditChange}\r\n                  className=\"gp-form-input\"\r\n                >\r\n                  <option value=\"admin\">Admin</option>\r\n                  <option value=\"utilisateur\">Utilisateur</option>\r\n                  <option value=\"technicien\">Technicien</option>\r\n                </select>\r\n\r\n              </div>\r\n\r\n              <div className=\"flex justify-end mt-4\" style={{ gap: \"12px\" }}>\r\n                <button \r\n                  onClick={() => setEditModalOuvert(false)} \r\n                  className=\"gp-btn gp-btn-cancel\"\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  onClick={handleEditSubmit} \r\n                  className=\"gp-btn gp-btn-save\"\r\n                >\r\n                  Enregistrer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n{deleteModalOuvert && (\r\n  <div className=\"gp-modal-overlay\">\r\n    <div className=\"gp-modal-container\">\r\n      <div className=\"gp-modal-header\">\r\n        <h2 className=\"text-xl font-bold\">Confirmer la suppression</h2>\r\n        <button onClick={() => setDeleteModalOuvert(false)}>\r\n          <X size={24} />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"gp-delete-modal-content\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-16 w-16 text-red-600 mx-auto mb-4\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\r\n          />\r\n        </svg>\r\n        \r\n        <p className=\"text-lg font-medium\">\r\n          Êtes-vous sûr de vouloir supprimer l'utilisateur <strong> {userToDelete?.nom} {userToDelete?.prenom} </strong>?\r\n        </p>\r\n\r\n        <div className=\"gp-delete-buttons\">\r\n          <button\r\n            onClick={() => setDeleteModalOuvert(false)}\r\n            className=\"gp-btn gp-btn-cancel\"\r\n          >\r\n            Annuler\r\n          </button>\r\n          <button\r\n            onClick={confirmDelete}\r\n            className=\"gp-btn gp-btn-danger\"\r\n          >\r\n            Supprimer\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardTable.defaultProps = {\r\n  color: \"light\",\r\n};\r\n\r\nCardTable.propTypes = {\r\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\r\n};","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardProfile.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Maps\\MapExample.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\IndexDropdown.js",[],["292","293"],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\PagesDropdown.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\UserDropdown.js",[],["294","295"],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\NotificationDropdown.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Calender\\Calenderr.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\TableDropdown.js",[],["296","297"],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\TicketTable.js",["298"],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\services\\ApiUser.js",[],["299","300"],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Login.js",["301"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaGoogle } from \"react-icons/fa\";\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      // Étape 1 : Authentification\r\n      const loginResponse = await fetch('/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n        credentials: 'include',\r\n      });\r\n\r\n      const loginData = await loginResponse.json();\r\n\r\n      if (!loginResponse.ok) {\r\n        throw new Error(loginData.message || \"Échec de la connexion\");\r\n      }\r\n\r\n      // Récupération du token et des données utilisateur\r\n      const { token, user } = loginData;\r\n\r\n      // Sauvegarde dans le localStorage\r\n      localStorage.setItem('jwt_token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n\r\n      // Redirection selon le rôle\r\n      switch (user.role) {\r\n        case 'admin':\r\n          history.push('/admin/dashboard');\r\n          break;\r\n        case 'technicien':\r\n          history.push('/homepage');\r\n          break;\r\n        default:\r\n          history.push('/homepage');\r\n      }\r\n\r\n    } catch (error) {\r\n      setError(error.message);\r\n      alert(`Erreur : ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      display: \"flex\", \r\n      height: \"100vh\", \r\n      alignItems: \"center\", \r\n      justifyContent: \"center\", \r\n      backgroundImage: \"url('https://img.freepik.com/premium-vector/abstract-geometric-white-gray-color-background-vector_665257-159.jpg?semt=ais_hybrid')\", \r\n      backgroundSize: \"cover\", \r\n      backgroundPosition: \"center\", \r\n      padding: \"16px\" \r\n    }}>\r\n      <div style={{ \r\n        display: \"grid\", \r\n        gridTemplateColumns: \"1fr 1fr\", \r\n        boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\", \r\n        borderRadius: \"12px\", \r\n        overflow: \"hidden\", \r\n        maxWidth: \"1000px\", \r\n        width: \"100%\", \r\n        position: \"relative\" \r\n      }}>\r\n        \r\n        <img \r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/Logo_STB.png\" \r\n          alt=\"STB Logo\" \r\n          style={{ \r\n            position: \"absolute\", \r\n            top: \"12px\", \r\n            left: \"12px\", \r\n            width: \"120px\", \r\n            height: \"auto\" \r\n          }} \r\n        />\r\n\r\n        <form onSubmit={handleSubmit} style={{ \r\n          padding: \"32px\", \r\n          display: \"flex\", \r\n          flexDirection: \"column\", \r\n          justifyContent: \"center\", \r\n          background: \"white\" \r\n        }}>\r\n          <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", color: \"#1f2937\", textAlign: \"center\" }}>Log In</h2>\r\n          \r\n          {error && <div style={{ color: \"red\", marginBottom: \"12px\" }}>{error}</div>}\r\n\r\n          <div style={{ marginTop: \"16px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Email</label>\r\n            <input \r\n              type=\"email\" \r\n              placeholder=\"Enter your email\" \r\n              value={email} \r\n              onChange={(e) => setEmail(e.target.value)} \r\n              required\r\n              style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #d1d5db\", borderRadius: \"6px\", marginTop: \"4px\" }} \r\n            />\r\n          </div>\r\n          \r\n          <div style={{ marginTop: \"12px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Password</label>\r\n            <input \r\n              type=\"password\" \r\n              placeholder=\"Enter your password\" \r\n              value={password} \r\n              onChange={(e) => setPassword(e.target.value)} \r\n              required\r\n              style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #d1d5db\", borderRadius: \"6px\", marginTop: \"4px\" }} \r\n            />\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"12px\" }}>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <input type=\"checkbox\" id=\"remember\" />\r\n              <label htmlFor=\"remember\" style={{ marginLeft: \"6px\", fontSize: \"14px\", color: \"#4b5563\" }}>Remember me</label>\r\n            </div>\r\n            <a href=\"#\" style={{ fontSize: \"14px\", color: \"#3b82f6\", textDecoration: \"none\" }}>Forgot password?</a>\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\"\r\n            disabled={loading}\r\n            style={{ \r\n              width: \"100%\", \r\n              background: loading ? \"#9ca3af\" : \"#3b82f6\", \r\n              color: \"white\", \r\n              padding: \"10px\", \r\n              marginTop: \"16px\", \r\n              borderRadius: \"6px\", \r\n              fontWeight: \"bold\", \r\n              cursor: loading ? \"not-allowed\" : \"pointer\" \r\n            }}\r\n          >\r\n            {loading ? \"Chargement...\" : \"LOG IN\"}\r\n          </button>\r\n\r\n          <div style={{ display: \"flex\", alignItems: \"center\", margin: \"16px 0\" }}>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n            <span style={{ margin: \"0 8px\", fontSize: \"14px\", color: \"#6b7280\" }}>OR</span>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n          </div>\r\n\r\n          <button \r\n            type=\"button\"\r\n            style={{ \r\n              width: \"100%\", \r\n              display: \"flex\", \r\n              alignItems: \"center\", \r\n              justifyContent: \"center\", \r\n              gap: \"8px\", \r\n              border: \"1px solid #d1d5db\", \r\n              padding: \"10px\", \r\n              borderRadius: \"6px\", \r\n              fontWeight: \"bold\", \r\n              cursor: \"pointer\", \r\n              background: \"white\" \r\n            }}\r\n          >\r\n            <FaGoogle style={{ color: \"#3b82f6\" }} /> Continue with Google\r\n          </button>\r\n\r\n          <p style={{ fontSize: \"14px\", textAlign: \"center\", color: \"#6b7280\", marginTop: \"12px\" }}>\r\n            Don't have an account? <a href=\"Register\" style={{ color: \"#3b82f6\", textDecoration: \"none\" }}>Sign Up</a>\r\n          </p>\r\n        </form>\r\n\r\n        <div style={{ \r\n          display: \"flex\", \r\n          flexDirection: \"column\", \r\n          alignItems: \"center\", \r\n          justifyContent: \"center\", \r\n          backgroundImage: \"url('https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrxCZS8RUx52KhkLFeYR19uXX3GnbF9-sH75brySGs70DJ1EINGwkFnr6K5LqopCqGHTVK79x_gscCHE_cR1wmpIADhJXkTZIJhDz_VtYuxwekNibQUVl6VKNuq3uOlTsfnFW2F_ZVXsm2m7DU2IGJREbwsM16cR45D3-4iI5AwRArtjCnR713SvfIJpg/s1934/stb%20%20thebanker.jpg')\", \r\n          backgroundSize: \"cover\", \r\n          backgroundPosition: \"center\", \r\n          color: \"white\", \r\n          padding: \"32px\", \r\n          textAlign: \"center\" \r\n        }}>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Register.js",["302","303","304","305","306","307","308","309","310","311"],"import { useState } from \"react\";\r\nimport { FaGoogle } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\n\r\nexport default function Register() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      nom: firstName,\r\n      prenom: lastName,\r\n      email: email,\r\n      tel: phoneNumber,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"/adduser\", userData);\r\n      console.log(\"Utilisateur ajouté:\", response.data);\r\n      alert(\"Utilisateur ajouté avec succès!\");\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'ajout de l'utilisateur:\", error);\r\n      alert(\"Erreur lors de l'ajout de l'utilisateur!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundImage: \"url('https://img.freepik.com/premium-vector/abstract-geometric-white-gray-color-background-vector_665257-159.jpg?semt=ais_hybrid')\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        padding: \"16px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1fr 1fr\",\r\n          boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\r\n          borderRadius: \"12px\",\r\n          overflow: \"hidden\",\r\n          maxWidth: \"1000px\",\r\n          width: \"100%\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {/* Logo STB */}\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/Logo_STB.png\"\r\n          alt=\"STB Logo\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"12px\",\r\n            left: \"12px\",\r\n            width: \"120px\",\r\n            height: \"auto\",\r\n          }}\r\n        />\r\n\r\n        {/* Partie Gauche - Formulaire */}\r\n        <div\r\n          style={{\r\n            padding: \"32px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            background: \"white\",\r\n          }}\r\n        >\r\n          <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", color: \"#1f2937\", textAlign: \"center\" }}>\r\n            Sign Up\r\n          </h2>\r\n\r\n          <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: \"12px\", marginTop: \"16px\" }}>\r\n            <div>\r\n              <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Nom</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your first name\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"8px\",\r\n                  border: \"1px solid #d1d5db\",\r\n                  borderRadius: \"6px\",\r\n                  marginTop: \"4px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Prenom</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your last name\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"8px\",\r\n                  border: \"1px solid #d1d5db\",\r\n                  borderRadius: \"6px\",\r\n                  marginTop: \"4px\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ marginTop: \"12px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"8px\",\r\n                border: \"1px solid #d1d5db\",\r\n                borderRadius: \"6px\",\r\n                marginTop: \"4px\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: \"12px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Num tel</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your phone number\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"8px\",\r\n                border: \"1px solid #d1d5db\",\r\n                borderRadius: \"6px\",\r\n                marginTop: \"4px\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleSubmit}\r\n            style={{\r\n              width: \"100%\",\r\n              background: \"#3b82f6\",\r\n              color: \"white\",\r\n              padding: \"10px\",\r\n              marginTop: \"16px\",\r\n              borderRadius: \"6px\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            REGISTER\r\n          </button>\r\n\r\n          <div style={{ display: \"flex\", alignItems: \"center\", margin: \"16px 0\" }}>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n            <span style={{ margin: \"0 8px\", fontSize: \"14px\", color: \"#6b7280\" }}>OR</span>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n          </div>\r\n\r\n          <button\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              gap: \"8px\",\r\n              border: \"1px solid #d1d5db\",\r\n              padding: \"10px\",\r\n              borderRadius: \"6px\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n              background: \"white\",\r\n            }}\r\n          >\r\n            <FaGoogle style={{ color: \"#3b82f6\" }} /> Continue with Google\r\n          </button>\r\n\r\n          <p style={{ fontSize: \"14px\", textAlign: \"center\", color: \"#6b7280\", marginTop: \"12px\" }}>\r\n            Already have an account?{\" \"}\r\n            <a href=\"./\" style={{ color: \"#3b82f6\", textDecoration: \"none\" }}>Log in</a>\r\n          </p>\r\n        </div>\r\n\r\n        {/* Partie Droite - Image */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundImage: \"url('https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrxCZS8RUx52KhkLFeYR19uXX3GnbF9-sH75brySGs70DJ1EINGwkFnr6K5LqopCqGHTVK79x_gscCHE_cR1wmpIADhJXkTZIJhDz_VtYuxwekNibQUVl6VKNuq3uOlTsfnFW2F_ZVXsm2m7DU2IGJREbwsM16cR45D3-4iI5AwRArtjCnR713SvfIJpg/s1934/stb%20%20thebanker.jpg')\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            color: \"white\",\r\n            padding: \"32px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Ticket.js",["312"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Footerr from \"components/Footers/Footerr\";\r\nimport { useHistory } from \"react-router-dom\"; \r\nfunction NewTicketForm() {\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState({\r\n    sujet: \"\",\r\n    type: \"\",\r\n    urgence: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // 1. Récupération du token JWT\r\n      const token = localStorage.getItem(\"jwt_token\");\r\n      if (!token) {\r\n        throw new Error(\"Vous devez être connecté pour créer un ticket\");\r\n      }\r\n\r\n      // 2. Envoi des données au backend\r\n      const response = await fetch(\"/addticket\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      // 3. Gestion des erreurs HTTP\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Erreur lors de la création du ticket\");\r\n      }\r\n\r\n      // 4. Traitement de la réponse\r\n      const newTicket = await response.json();\r\n\r\n      // 5. Mise à jour du localStorage (fallback offline)\r\n      const storedTickets = JSON.parse(localStorage.getItem(\"tickets\")) || [];\r\n      storedTickets.push({\r\n        ...newTicket,\r\n        id: newTicket._id,\r\n        date: new Date(newTicket.createdAt).toLocaleDateString(\"fr-FR\")\r\n      });\r\n      localStorage.setItem(\"tickets\", JSON.stringify(storedTickets));\r\n\r\n      // 6. Redirection vers la liste des tickets\r\n      history.push(\"/MyTickets\");\r\n\r\n    } catch (error) {\r\n      // Gestion des erreurs et sauvegarde locale\r\n      const offlineTicket = {\r\n        ...formData,\r\n        id: Date.now(),\r\n        date: new Date().toLocaleDateString(\"fr-FR\"),\r\n        statut: \"En attente de synchronisation\",\r\n        _id: `offline-${Date.now()}`\r\n      };\r\n\r\n      const storedTickets = JSON.parse(localStorage.getItem(\"tickets\")) || [];\r\n      storedTickets.push(offlineTicket);\r\n      localStorage.setItem(\"tickets\", JSON.stringify(storedTickets));\r\n\r\n      setError(`${error.message} - Le ticket a été sauvegardé localement`);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IndexNavbar />\r\n      <div style={styles.page}>\r\n        <div style={styles.card}>\r\n          <img \r\n            src=\"https://i1.wp.com/accessaa.co.uk/wp-content/uploads/2017/07/Screen-Shot-2017-07-03-at-11.42.31.png?fit=681%2C473&ssl=1\" \r\n            alt=\"Support bancaire\" \r\n            style={styles.headerImage}\r\n          />\r\n          <h2 style={styles.title}>Nouveau Ticket de Support</h2>\r\n\r\n          {error && <div style={styles.error}>{error}</div>}\r\n\r\n          <form onSubmit={handleSubmit} style={styles.form}>\r\n            <label style={styles.label}>Sujet</label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"sujet\" \r\n              value={formData.sujet} \r\n              onChange={handleChange} \r\n              style={styles.input} \r\n              required \r\n            />\r\n\r\n            <label style={styles.label}>Type</label>\r\n            <select \r\n              name=\"type\" \r\n              value={formData.type} \r\n              onChange={handleChange} \r\n              style={styles.input} \r\n              required\r\n            >\r\n              <option value=\"\">-- Sélectionner --</option>\r\n              <option value=\"IT\">Informatique</option>\r\n              <option value=\"RH\">Ressources Humaines</option>\r\n              <option value=\"Comptabilité\">Comptabilité</option>\r\n            </select>\r\n\r\n            <label style={styles.label}>Niveau d'urgence</label>\r\n            <select \r\n              name=\"urgence\" \r\n              value={formData.urgence} \r\n              onChange={handleChange} \r\n              style={styles.input} \r\n              required\r\n            >\r\n              <option value=\"\">-- Choisir --</option>\r\n              <option value=\"Urgent\">Urgent</option>\r\n              <option value=\"Normal\">Normal</option>\r\n              <option value=\"Faible\">Faible</option>\r\n            </select>\r\n\r\n            <label style={styles.label}>Description</label>\r\n            <textarea \r\n              name=\"description\" \r\n              value={formData.description} \r\n              onChange={handleChange} \r\n              rows=\"4\" \r\n              style={styles.textarea} \r\n              required \r\n            />\r\n\r\n            <div style={styles.actions}>\r\n              <Link to=\"/MyTickets\" style={styles.link}>\r\n                ← Retour aux tickets\r\n              </Link>\r\n              <button \r\n                type=\"submit\" \r\n                style={styles.submitBtn} \r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? \"Envoi en cours...\" : \"Soumettre le ticket\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Footerr />\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  page: {\r\n    minHeight: \"100vh\",\r\n    backgroundColor: \"#f8f9ff\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"1rem\",\r\n    background: \"linear-gradient(135deg, #f5f7ff 0%, #eef0ff 100%)\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"#ffffff\",\r\n    borderRadius: \"10px\",\r\n    padding: \"2rem\",\r\n    maxWidth: \"550px\",\r\n    width: \"100%\",\r\n    boxShadow: \"0 2px 15px rgba(0, 51, 102, 0.08)\",\r\n    border: \"1px solid #e0e5ec\",\r\n    position: \"relative\",\r\n    marginTop: \"50px\",\r\n    padding: \"2rem 2rem 1.5rem 2rem\",\r\n  },\r\n  headerImage: {\r\n    width: \"80px\",\r\n    height: \"80px\",\r\n    position: \"absolute\",\r\n    top: \"-40px\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    filter: \"hue-rotate(200deg) brightness(0.9)\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"50%\",\r\n    padding: \"8px\",\r\n    boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  title: {\r\n    fontSize: \"1.5rem\",\r\n    marginBottom: \"1.5rem\",\r\n    color: \"#1a2a5e\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"600\",\r\n    letterSpacing: \"-0.5px\",\r\n    paddingTop: \"1rem\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"1.2rem\",\r\n  },\r\n  label: {\r\n    fontWeight: \"500\",\r\n    color: \"#3a4767\",\r\n    fontSize: \"0.9rem\",\r\n    marginBottom: \"0.3rem\",\r\n    display: \"block\",\r\n  },\r\n  input: {\r\n    padding: \"0.7rem\",\r\n    borderRadius: \"6px\",\r\n    border: \"1px solid #d5dbe7\",\r\n    fontSize: \"0.95rem\",\r\n    backgroundColor: \"#fbfcff\",\r\n    transition: \"all 0.2s ease\",\r\n    width: \"100%\",\r\n    \":focus\": {\r\n      outline: \"none\",\r\n      borderColor: \"#1a2a5e\",\r\n      boxShadow: \"0 0 0 2px rgba(26, 42, 94, 0.1)\",\r\n    },\r\n  },\r\n  textarea: {\r\n    padding: \"0.7rem\",\r\n    borderRadius: \"6px\",\r\n    border: \"1px solid #d5dbe7\",\r\n    fontSize: \"0.95rem\",\r\n    backgroundColor: \"#fbfcff\",\r\n    minHeight: \"100px\",\r\n    resize: \"vertical\",\r\n    width: \"100%\",\r\n    \":focus\": {\r\n      outline: \"none\",\r\n      borderColor: \"#1a2a5e\",\r\n      boxShadow: \"0 0 0 2px rgba(26, 42, 94, 0.1)\",\r\n    },\r\n  },\r\n  actions: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    gap: \"1rem\",\r\n    marginTop: \"0.2rem\", \r\n  },\r\n  submitBtn: {\r\n    backgroundColor: \"#1a2a5e\",\r\n    color: \"#fff\",\r\n    padding: \"0.7rem 2rem\",\r\n    border: \"none\",\r\n    borderRadius: \"6px\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"500\",\r\n    transition: \"all 0.2s ease\",\r\n    fontSize: \"0.95rem\",\r\n    \":hover\": {\r\n      backgroundColor: \"#2a3a8e\",\r\n      transform: \"translateY(-1px)\",\r\n    },\r\n    \":active\": {\r\n      transform: \"translateY(0)\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"#1a2a5e\",\r\n    textDecoration: \"none\",\r\n    fontWeight: \"500\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    gap: \"0.5rem\",\r\n    transition: \"color 0.2s ease\",\r\n    \":hover\": {\r\n      color: \"#2a3a8e\",\r\n    },\r\n  },\r\n  error: {\r\n    backgroundColor: \"#fff0f0\",\r\n    padding: \"1rem\",\r\n    borderRadius: \"8px\",\r\n    color: \"#d32f2f\",\r\n    marginBottom: \"1rem\",\r\n    border: \"1px solid #ffcdd2\",\r\n    fontSize: \"0.9rem\",\r\n  },\r\n};\r\n\r\nexport default NewTicketForm;","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\Footerr.js",["313","314","315","316"],"import React from \"react\";\r\nimport {\r\n  FaFacebookF,\r\n  FaInstagram,\r\n  FaTwitter,\r\n  FaLinkedinIn,\r\n} from \"react-icons/fa\";\r\nimport logo from \"assets/img/logo stb.png\"; // Assure-toi que ce chemin est correct\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer style={styles.footer}>\r\n      <div style={styles.container}>\r\n        <img src={logo} alt=\"STB Logo\" style={styles.logo} />\r\n        <p style={styles.copy}>\r\n          © {new Date().getFullYear()} Stb Banque\r\n        </p>\r\n        <div style={styles.socialIcons}>\r\n          <a href=\"#\" style={styles.icon}><FaFacebookF /></a>\r\n          <a href=\"#\" style={styles.icon}><FaInstagram /></a>\r\n          <a href=\"#\" style={styles.icon}><FaTwitter /></a>\r\n          <a href=\"#\" style={styles.icon}><FaLinkedinIn /></a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\n// Styles mini-mini\r\nconst styles = {\r\n  footer: {\r\n    backgroundColor: \"#f3f4f6\",\r\n    padding: \"1rem 0.5rem\", // ↘️ Très petit padding\r\n    borderTop: \"2px solid #0d47a1\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n  container: {\r\n    maxWidth: \"900px\",\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    gap: \"0.4rem\",\r\n  },\r\n  logo: {\r\n    width: \"40px\", // ↘️ Logo réduit au minimum\r\n    height: \"auto\",\r\n  },\r\n  copy: {\r\n    color: \"#475569\",\r\n    margin: \"0.2rem 0\",\r\n  },\r\n  socialIcons: {\r\n    display: \"flex\",\r\n    gap: \"0.5rem\",\r\n    justifyContent: \"center\",\r\n  },\r\n  icon: {\r\n    backgroundColor: \"#e0e7ff\",\r\n    color: \"#0d47a1\",\r\n    borderRadius: \"50%\",\r\n    width: \"28px\", // ↘️ Très petite icône\r\n    height: \"28px\",\r\n    fontSize: \"0.9rem\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\MyTickets.js",["317","318"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Footerr from \"components/Footers/Footerr\";\r\n\r\nfunction MyTickets() {\r\n  \r\n  const [tickets, setTickets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n  const [searchId, setSearchId] = useState(\"\");\r\n  const [feedback, setFeedback] = useState({ note: \"\", commentaire: \"\" });\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const getShortCode = (id) => {\r\n    const strId = String(id);\r\n    if (!strId || strId.length < 10) return \"XXXX\";\r\n    return strId.substring(6, 10);\r\n  };\r\n\r\n  const handleSubmitFeedback = async () => {\r\n    console.log(\"Feedback soumis :\", {\r\n      ticketId: selectedTicket._id,\r\n      ...feedback,\r\n    });\r\n\r\n    // TODO: envoyer au backend\r\n    setSubmitted(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.margin = \"0\";\r\n    document.body.style.minHeight = \"100vh\";\r\n    document.body.style.display = \"flex\";\r\n    document.body.style.flexDirection = \"column\";\r\n  \r\n    const fetchTickets = async () => {\r\n      try {\r\n        const token = localStorage.getItem('jwt_token');\r\n        const user = JSON.parse(localStorage.getItem('user')); \r\n        \r\n        const response = await fetch(`/user/${user._id}`, {\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        const data = await response.json();\r\n        setTickets(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tickets:\", error);\r\n        // Fallback vers le localStorage\r\n        const localTickets = JSON.parse(localStorage.getItem(\"tickets\")) || [];\r\n        setTickets(localTickets);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTickets();\r\n  }, []);\r\n  \r\n \r\n  \r\n  \r\n  \r\n\r\n  const badgeStyle = (status) => {\r\n    const statusNormalized = status?.toLowerCase() || \"\";\r\n    return {\r\n      padding: \"0.25rem 0.5rem\",\r\n      borderRadius: \"0px\",\r\n      fontSize: \"0.75rem\",\r\n      fontWeight: \"500\",\r\n      backgroundColor:\r\n        statusNormalized === \"ouvert\"\r\n          ? \"#FEE2E2\"\r\n          : statusNormalized === \"en cours\"\r\n          ? \"#FFEDD5\"\r\n          : statusNormalized === \"fermé\"\r\n          ? \"#DCFCE7\"\r\n          : \"#FFFFFF\",\r\n      color:\r\n        statusNormalized === \"ouvert\"\r\n          ? \"#DC2626\"\r\n          : statusNormalized === \"en cours\"\r\n          ? \"#C2410C\"\r\n          : statusNormalized === \"fermé\"\r\n          ? \"#065F46\"\r\n          : \"#000000\",\r\n      textAlign: \"center\",\r\n      minWidth: \"80px\",\r\n      display: \"inline-block\",\r\n      border: \"1px solid\",\r\n      borderColor:\r\n        statusNormalized === \"ouvert\"\r\n          ? \"#DC2626\"\r\n          : statusNormalized === \"en cours\"\r\n          ? \"#C2410C\"\r\n          : statusNormalized === \"fermé\"\r\n          ? \"#065F46\"\r\n          : \"#000000\",\r\n    };\r\n  };\r\n\r\n  const filteredTickets = tickets.filter(\r\n    (ticket) => searchId === \"\" || ticket._id?.toString().includes(searchId)\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <IndexNavbar />\r\n      <div style={container}>\r\n        <div style={contentWrapper}>\r\n          <img\r\n            src=\"/images/support-banner.jpg\"\r\n            alt=\"Bannière Support\"\r\n            style={bannerImage}\r\n          />\r\n          <h1 style={title}>Espace Support Client</h1>\r\n          <p style={subtitle}>Consultez vos tickets et suivez leur avancement</p>\r\n\r\n          <div style={{ marginBottom: \"1rem\", textAlign: \"center\" }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Rechercher par numéro de ticket\"\r\n              value={searchId}\r\n              onChange={(e) => setSearchId(e.target.value)}\r\n              style={{\r\n                padding: \"0.5rem\",\r\n                width: \"60%\",\r\n                maxWidth: \"300px\",\r\n                borderRadius: \"6px\",\r\n                border: \"1px solid #ccc\",\r\n                fontSize: \"1rem\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={ticketGrid}>\r\n            <div style={ticketList}>\r\n              {filteredTickets.map((ticket) => (\r\n                <div\r\n                  key={ticket._id}\r\n                  style={ticketItem}\r\n                  onClick={() => {\r\n                    setSelectedTicket(ticket);\r\n                    setSubmitted(false);\r\n                    setFeedback({ note: \"\", commentaire: \"\" });\r\n                  }}\r\n                >\r\n                  <div style={ticketHeader}>\r\n                    <span style={ticketId}>\r\n                      {ticket._id ? `#${getShortCode(ticket._id)}` : \"ID non disponible\"}\r\n                    </span>\r\n                    <span style={badgeStyle(ticket.statut)}>{ticket.statut}</span>\r\n                  </div>\r\n                  <h3 style={ticketTitle}>{ticket.sujet}</h3>\r\n                  <p style={ticketDate}>{ticket.date?.slice(0, 10)}</p>\r\n                </div>\r\n              ))}\r\n              {filteredTickets.length === 0 && (\r\n                <p style={{ textAlign: \"center\", color: \"#999\" }}>Aucun ticket trouvé.</p>\r\n              )}\r\n            </div>\r\n\r\n            {selectedTicket && (\r\n              <div style={detailsPanel}>\r\n                <div style={detailsHeader}>\r\n                  <h2 style={detailsTitle}>Détails du ticket</h2>\r\n                  <button style={closeButton} onClick={() => setSelectedTicket(null)}>\r\n                    ×\r\n                  </button>\r\n                </div>\r\n                <div style={detailsContent}>\r\n                  <div style={detailRow}>\r\n                    <span style={detailLabel}>Numéro :</span>\r\n                    <span>#{getShortCode(selectedTicket._id)}</span>\r\n                  </div>\r\n                  <div style={detailRow}>\r\n                    <span style={detailLabel}>Statut :</span>\r\n                    <span style={badgeStyle(selectedTicket.statut)}>\r\n                      {selectedTicket.statut}\r\n                    </span>\r\n                  </div>\r\n                  <div style={detailRow}>\r\n                    <span style={detailLabel}>Date :</span>\r\n                    <span>{selectedTicket.date?.slice(0, 10)}</span>\r\n                  </div>\r\n                  <div style={detailDescription}>\r\n                    <p style={detailLabel}>Description :</p>\r\n                    <p>{selectedTicket.description}</p>\r\n                  </div>\r\n\r\n                  {/* Évaluation si ticket fermé */}\r\n                  {selectedTicket.statut?.toLowerCase() === \"fermé\" && (\r\n                    <div\r\n                      style={{\r\n                        marginTop: \"2rem\",\r\n                        borderTop: \"1px solid #ddd\",\r\n                        paddingTop: \"1rem\",\r\n                      }}\r\n                    >\r\n                      <h4\r\n                        style={{\r\n                          fontSize: \"1.1rem\",\r\n                          marginBottom: \"0.5rem\",\r\n                          color: \"#1a237e\",\r\n                        }}\r\n                      >\r\n                        Évaluez l’intervention :\r\n                      </h4>\r\n\r\n                      {submitted ? (\r\n                        <p style={{ color: \"green\" }}>Merci pour votre retour !</p>\r\n                      ) : (\r\n                        <>\r\n                          <div style={{ marginBottom: \"1rem\" }}>\r\n                            <label\r\n                              style={{\r\n                                fontWeight: \"bold\",\r\n                                display: \"block\",\r\n                                marginBottom: \"0.5rem\",\r\n                              }}\r\n                            >\r\n                              Note (1 à 5) :\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              min=\"1\"\r\n                              max=\"5\"\r\n                              value={feedback.note}\r\n                              onChange={(e) =>\r\n                                setFeedback({ ...feedback, note: e.target.value })\r\n                              }\r\n                              style={{\r\n                                padding: \"0.4rem\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: \"4px\",\r\n                                width: \"60px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n\r\n                          <div style={{ marginBottom: \"1rem\" }}>\r\n                            <label\r\n                              style={{\r\n                                fontWeight: \"bold\",\r\n                                display: \"block\",\r\n                                marginBottom: \"0.5rem\",\r\n                              }}\r\n                            >\r\n                              Commentaire :\r\n                            </label>\r\n                            <textarea\r\n                              rows=\"3\"\r\n                              value={feedback.commentaire}\r\n                              onChange={(e) =>\r\n                                setFeedback({ ...feedback, commentaire: e.target.value })\r\n                              }\r\n                              style={{\r\n                                width: \"100%\",\r\n                                borderRadius: \"4px\",\r\n                                border: \"1px solid #ccc\",\r\n                                padding: \"0.5rem\",\r\n                                resize: \"vertical\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n\r\n                          <button\r\n                            onClick={handleSubmitFeedback}\r\n                            style={{\r\n                              backgroundColor: \"#1a237e\",\r\n                              color: \"#fff\",\r\n                              border: \"none\",\r\n                              borderRadius: \"4px\",\r\n                              padding: \"0.5rem 1rem\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            Envoyer\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footerr />\r\n    </>\r\n  );\r\n}\r\n\r\n// Styles (inchangés)\r\nconst container = {\r\n  minHeight: \"100vh\",\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-start\",\r\n  padding: \"2rem\",\r\n  backgroundColor: \"#f4f6f8\",\r\n};\r\n\r\nconst contentWrapper = { width: \"100%\", maxWidth: \"800px\" };\r\nconst bannerImage = {\r\n  width: \"100%\",\r\n  maxHeight: \"200px\",\r\n  borderRadius: \"12px\",\r\n  objectFit: \"cover\",\r\n  marginBottom: \"1rem\",\r\n  boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\",\r\n};\r\nconst title = {\r\n  color: \"#1a237e\",\r\n  fontSize: \"2.5rem\",\r\n  textAlign: \"center\",\r\n  marginBottom: \"1rem\",\r\n  marginTop: \"4rem\",\r\n  fontWeight: \"bold\",\r\n  textShadow: \"1px 1px 2px rgba(0, 0, 0, 0.1)\",\r\n  borderBottom: \"3px solid #c5cae9\",\r\n  paddingBottom: \"0.5rem\",\r\n  letterSpacing: \"1px\",\r\n};\r\nconst subtitle = { textAlign: \"center\", color: \"#555\", marginBottom: \"2rem\" };\r\nconst ticketGrid = { display: \"grid\", gap: \"2rem\", gridTemplateColumns: \"1fr\" };\r\nconst ticketList = { backgroundColor: \"#f8f9fa\", borderRadius: \"8px\", padding: \"1rem\" };\r\nconst ticketItem = {\r\n  backgroundColor: \"white\",\r\n  borderRadius: \"6px\",\r\n  padding: \"1rem\",\r\n  marginBottom: \"1rem\",\r\n  cursor: \"pointer\",\r\n  border: \"1px solid #eee\",\r\n  transition: \"all 0.3s\",\r\n};\r\nconst ticketHeader = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  marginBottom: \"0.5rem\",\r\n};\r\nconst ticketId = { color: \"#666\", fontSize: \"0.9rem\" };\r\nconst ticketTitle = { fontSize: \"1.1rem\", color: \"#333\", margin: \"0 0 0.5rem 0\" };\r\nconst ticketDate = { color: \"#999\", fontSize: \"0.85rem\", margin: \"0\" };\r\nconst detailsPanel = {\r\n  backgroundColor: \"white\",\r\n  borderRadius: \"8px\",\r\n  padding: \"1.5rem\",\r\n  border: \"1px solid #eee\",\r\n};\r\nconst detailsHeader = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  marginBottom: \"1.5rem\",\r\n};\r\nconst detailsTitle = { fontSize: \"1.5rem\", color: \"#1a237e\", margin: \"0\" };\r\nconst closeButton = {\r\n  background: \"none\",\r\n  border: \"none\",\r\n  fontSize: \"1.5rem\",\r\n  color: \"#666\",\r\n  cursor: \"pointer\",\r\n  padding: \"0 0.5rem\",\r\n};\r\nconst detailsContent = { lineHeight: \"1.6\" };\r\nconst detailRow = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  marginBottom: \"1rem\",\r\n  paddingBottom: \"1rem\",\r\n  borderBottom: \"1px solid #eee\",\r\n};\r\nconst detailLabel = { color: \"#666\", fontWeight: \"bold\", marginRight: \"1rem\" };\r\nconst detailDescription = { marginTop: \"2rem\" };\r\n\r\nexport default MyTickets;","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Technicien\\TechnicienTable.js",["319","320","321"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FaFilter, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { X } from \"lucide-react\";\r\n\r\nexport default function TechnicienTable({ color }) {\r\n  const [techniciens, setTechniciens] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    const fetchTechniciens = async () => {\r\n      try {\r\n        const response = await fetch('/allusers');\r\n        if (!response.ok) throw new Error('Erreur réseau');\r\n        \r\n        const data = await response.json();\r\n        \r\n        // Filtrage des utilisateurs avec le rôle 'technicien'\r\n        const techs = data.filter(user => user.role === 'technicien').map(tech => ({\r\n          id: tech._id,\r\n          nom: tech.nom,\r\n          prenom: tech.prenom,\r\n          email: tech.email,\r\n          specialite: tech.specialite,\r\n          actif: tech.actif, // Ajout du champ actif\r\n          password: ''\r\n        }));\r\n        \r\n        setTechniciens(techs);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        console.error(\"Erreur de chargement:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTechniciens();\r\n  }, []);\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filterSpecialite, setFilterSpecialite] = useState(\"\");\r\n  const [filterId, setFilterId] = useState(\"\");\r\n\r\n  const [modalOuvert, setModalOuvert] = useState(false);\r\n  const [newTechnicien, setNewTechnicien] = useState({\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    email: \"\",\r\n    telephone: \"\",\r\n    role: \"technicien\",\r\n    password: \"\",\r\n    specialite: \"\",\r\n    actif: true // Valeur par défaut\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [editModalOuvert, setEditModalOuvert] = useState(false);\r\n  const [editingTechnicien, setEditingTechnicien] = useState(null);\r\n  const [editErrors, setEditErrors] = useState({});\r\n\r\n  const [deleteModalOuvert, setDeleteModalOuvert] = useState(false);\r\n  const [technicienIdToDelete, setTechnicienIdToDelete] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setNewTechnicien({ ...newTechnicien, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    setEditingTechnicien({ ...editingTechnicien, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateForm = (technicien) => {\r\n    const errors = {};\r\n    if (!technicien.nom.trim()) errors.nom = \"Le nom est requis\";\r\n    if (!technicien.prenom.trim()) errors.prenom = \"Le prénom est requis\";\r\n    if (!technicien.email.trim()) errors.email = \"L'email est requis\";\r\n    if (!technicien.telephone.trim()) errors.telephone = \"Le téléphone est requis\";\r\n    if (!technicien.specialite) errors.specialite = \"La spécialité est requise\";\r\n    if (typeof technicien.actif !== 'boolean') {\r\n      errors.actif = \"Statut invalide\";\r\n    }\r\n    return errors;\r\n   \r\n  };\r\n\r\n  const validateEditForm = (technicien) => {\r\n    const errors = {};\r\n    if (!technicien.nom.trim()) errors.nom = \"Le nom est requis\";\r\n    if (!technicien.prenom.trim()) errors.prenom = \"Le prénom est requis\";\r\n    if (!technicien.specialite) errors.specialite = \"La spécialité est requise\";\r\n    if (!technicien.email.trim()) errors.email = \"L'email est requis\"; // Nouvelle validation\r\n    return errors;\r\n  };\r\n\r\n  const handleCreateSubmit = async () => {\r\n    const validationErrors = validateForm(newTechnicien);\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch('/adduser', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          ...newTechnicien,\r\n          tel: newTechnicien.telephone, // Correction ici\r\n          role: 'technicien',\r\n          password: undefined,\r\n          telephone: undefined ,\r\n          actif: newTechnicien.actif \r\n          // Supprimer l'ancien champ\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Erreur lors de l\\'ajout');\r\n      }\r\n  \r\n      const createdTechnicien = await response.json();\r\n      \r\n      setTechniciens([...techniciens, {\r\n        id: createdTechnicien._id,\r\n        nom: createdTechnicien.nom,\r\n        prenom: createdTechnicien.prenom,\r\n        specialite: createdTechnicien.specialite,\r\n      }]);\r\n  \r\n      setModalOuvert(false);\r\n      setNewTechnicien({\r\n        nom: \"\",\r\n        prenom: \"\",\r\n        email: \"\",\r\n        telephone: \"\",\r\n        role: \"\",\r\n        password: \"\",\r\n        specialite: \"\", // Ajouté\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur:', error);\r\n      alert(`verifier bien les champs`);\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async () => {\r\n    const errors = validateEditForm(editingTechnicien);\r\n    if (Object.keys(errors).length > 0) {\r\n      setEditErrors(errors);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`/updateuser/${editingTechnicien.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          nom: editingTechnicien.nom,\r\n          prenom: editingTechnicien.prenom,\r\n          specialite: editingTechnicien.specialite,\r\n          password: editingTechnicien.password,\r\n          actif: editingTechnicien.actif // Ajouter ce champ\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Erreur lors de la mise à jour');\r\n      }\r\n  \r\n      const updatedTechnicien = await response.json();\r\n      \r\n      // Mettre à jour l'état avec la nouvelle valeur actif\r\n      setTechniciens(techniciens.map(tech => \r\n        tech.id === updatedTechnicien._id ? {\r\n          ...tech,\r\n          ...updatedTechnicien,\r\n          actif: updatedTechnicien.actif // Assurer la mise à jour du statut\r\n        } : tech\r\n      ));\r\n      \r\n      setEditModalOuvert(false);\r\n    } catch (error) {\r\n      console.error('Erreur:', error);\r\n      setEditErrors({ general: error.message });\r\n    }\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      const response = await fetch(`/deleteuser/${technicienIdToDelete}`, {\r\n        method: 'DELETE',\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Erreur lors de la suppression');\r\n      }\r\n  \r\n      setTechniciens(techniciens.filter(tech => tech.id !== technicienIdToDelete));\r\n      setDeleteModalOuvert(false);\r\n    } catch (error) {\r\n      console.error('Erreur:', error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const filteredTechniciens = techniciens.filter(tech => {\r\n    const matchesId = filterId ? tech.id.toString().includes(filterId) : true;\r\n    const matchesSearch = searchQuery\r\n      ? tech.nom.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        tech.prenom.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        tech.specialite.toLowerCase().includes(searchQuery.toLowerCase())\r\n      : true;\r\n    const matchesSpecialite = filterSpecialite ? tech.specialite === filterSpecialite : true;\r\n\r\n    return matchesId && matchesSearch && matchesSpecialite;\r\n  });\r\n\r\n  const specialiteStyle = (specialite) => ({\r\n    padding: \"0.25rem 0.5rem\",\r\n    borderRadius: \"9999px\",\r\n    fontSize: \"0.75rem\",\r\n    fontWeight: \"500\",\r\n    backgroundColor:\r\n      specialite === \"Informatique\" ? \"#dbeafe\" :\r\n      specialite === \"Réseaux\" ? \"#dcfce7\" :\r\n      specialite === \"Électricité\" ? \"#fef3c7\" : \"#fee2e2\",\r\n    color:\r\n      specialite === \"Informatique\" ? \"#1d4ed8\" :\r\n      specialite === \"Réseaux\" ? \"#15803d\" :\r\n      specialite === \"Électricité\" ? \"#b45309\" : \"#b91c1c\",\r\n  });\r\n\r\n  return (\r\n    <div className={`relative mx-auto max-w-screen-xl flex flex-col min-w-0 rounded-lg shadow-lg mb-10 ${\r\n      color === \"light\" ? \"bg-white\" : \"bg-slate-800 text-white\"\r\n    }`}>\r\n      \r\n      <style jsx>{`\r\n        .gp-action-icon {\r\n          padding: 0.45rem;\r\n          border-radius: 0.375rem;\r\n          transition: all 0.2s ease;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n           .gp-delete-buttons {\r\n          display: flex;\r\n          justify-content: center;\r\n          gap: 1rem;\r\n          margin-top: 2rem;\r\n        }\r\n        .gp-edit {\r\n          background-color: #e0f2fe;\r\n          color: #0284c7;\r\n        }\r\n        .gp-edit:hover {\r\n          background-color: #bae6fd;\r\n        }\r\n        .gp-delete {\r\n          background-color: #fee2e2;\r\n          color: #dc2626;\r\n        }\r\n        .gp-delete:hover {\r\n          background-color: #fecaca;\r\n        }\r\n        .gp-add-button {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 0.5rem;\r\n          background-color: #0ea5e9;\r\n          color: white;\r\n          padding: 0.55rem 2.5rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 500;\r\n          transition: all 0.2s ease;\r\n        }\r\n        .gp-add-button:hover {\r\n          background-color: #0284c7;\r\n        }\r\n        .gp-modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100vw;\r\n          height: 100vh;\r\n          background-color: rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 50;\r\n        }\r\n        .gp-modal-container {\r\n          background-color: white;\r\n          border-radius: 0.75rem;\r\n          padding: 2rem;\r\n          width: 90%;\r\n          max-width: 500px;\r\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n        }\r\n        .gp-modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 1rem;\r\n        }\r\n        .gp-form-group {\r\n          margin-bottom: 1.5rem;\r\n        }\r\n        .gp-form-input {\r\n          width: 100%;\r\n          padding: 0.5rem;\r\n          border: 1px solid #ccc;\r\n          border-radius: 0.375rem;\r\n        }\r\n        .gp-btn {\r\n          padding: 0.5rem 1.25rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n        .gp-btn-save {\r\n          background-color: #0ea5e9;\r\n          color: white;\r\n        }\r\n        .gp-btn-save:hover {\r\n          background-color: #0284c7;\r\n        }\r\n        .gp-btn-cancel {\r\n          background-color: #f3f4f6;\r\n          color: #374151;\r\n        }\r\n        .gp-btn-cancel:hover {\r\n          background-color: #e5e7eb;\r\n        }\r\n        .gp-btn-danger {\r\n          background-color: #dc2626;\r\n          color: white;\r\n        }\r\n        .gp-btn-danger:hover {\r\n          background-color: #b91c1c;\r\n        }\r\n      `}</style>\r\n\r\n      <div className=\"px-6 pt-6 border-b-2 border-gray-300\">\r\n        <h1 className={`text-2xl font-bold text-center ${\r\n          color === \"light\" ? \"text-gray-800\" : \"text-white\"\r\n        }`}>\r\n          Gestion des Techniciens\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"flex justify-between px-6 pt-6 pb-4 items-center gap-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"🔍 Rechercher par ID...\"\r\n          value={filterId}\r\n          onChange={(e) => setFilterId(e.target.value)}\r\n          className=\"w-full sm:w-64 px-4 py-2 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n        />\r\n\r\n        <div className=\"flex gap-4 items-center\">\r\n          <FaFilter className=\"text-gray-700 text-xl mr-2\" />\r\n\r\n          <select\r\n            value={filterSpecialite}\r\n            onChange={(e) => setFilterSpecialite(e.target.value)}\r\n            className=\"w-50 sm:w-64 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n          >\r\n            <option value=\"\">Toutes les spécialités</option>\r\n            <option value=\"Informatique\">Informatique</option>\r\n            <option value=\"Réseaux\">Réseaux</option>\r\n            <option value=\"Électricité\">Électricité</option>\r\n            <option value=\"Maintenance\">Maintenance</option>\r\n          </select>\r\n\r\n          <button \r\n            className=\"gp-add-button\" \r\n            onClick={() => setModalOuvert(true)}\r\n          >\r\n            <span>+</span>\r\n            <span>Ajouter</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto px-6 pt-4 pb-14\">\r\n  <table className=\"w-full border-collapse\">\r\n    <thead>\r\n      <tr className={`text-left ${\r\n        color === \"light\" ? \"bg-gray-50 text-gray-500\" : \"bg-slate-700 text-slate-200\"\r\n      }`}>\r\n        <th className=\"px-4 py-4 font-medium w-[10%] min-w-[80px]\">ID</th>\r\n        <th className=\"px-4 py-4 font-medium w-[25%] min-w-[150px]\">Nom</th>\r\n        <th className=\"px-4 py-4 font-medium w-[25%] min-w-[150px]\">Prénom</th>\r\n        <th className=\"px-4 py-4 font-medium w-[25%] min-w-[180px]\">Spécialité</th>\r\n        <th className=\"px-4 py-4 font-medium w-[15%] min-w-[120px]\">Statut</th>\r\n        <th className=\"px-4 py-4 font-medium w-[15%] min-w-[120px]\">Actions</th>\r\n        \r\n      </tr>\r\n    </thead>\r\n<tbody>\r\n  {filteredTechniciens.map((tech) => (\r\n    <tr \r\n      key={tech.id} \r\n      className={`border-t ${\r\n        color === \"light\" ? \"hover:bg-gray-50\" : \"hover:bg-slate-700\"\r\n      } transition-colors`}\r\n    >\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">{tech.id}</td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">{tech.nom}</td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">{tech.prenom}</td>\r\n      \r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <span style={specialiteStyle(tech.specialite)}>\r\n          {tech.specialite}\r\n        </span>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n      {tech.actif ? (\r\n  <span\r\n    style={{\r\n      color: '#28a745', // Vert\r\n      fontWeight: '500', // Poids de la police modéré\r\n      fontSize: '14px', // Taille de police plus petite\r\n      backgroundColor: '#d4edda', // Fond vert clair\r\n      padding: '4px 8px',\r\n      borderRadius: '5px',\r\n      textAlign: 'center',\r\n    }}\r\n  >\r\n    Actif\r\n  </span>\r\n) : (\r\n  <span\r\n    style={{\r\n      color: '#dc3545', // Rouge\r\n      fontWeight: '500',\r\n      fontSize: '14px',\r\n      backgroundColor: '#f8d7da', // Fond rouge clair\r\n      padding: '4px 8px',\r\n      borderRadius: '5px',\r\n      textAlign: 'center',\r\n    }}\r\n  >\r\n    Inactif\r\n  </span>\r\n)}\r\n</td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div className=\"flex\">\r\n                    <button\r\n                      onClick={() => {\r\n                        setEditingTechnicien(tech);\r\n                        setEditModalOuvert(true);\r\n                      }}\r\n                      className=\"gp-action-icon gp-edit mr-2\"\r\n                      title=\"Modifier\"\r\n                    >\r\n                      <FaEdit size={16} />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setTechnicienIdToDelete(tech.id);\r\n                        setDeleteModalOuvert(true);\r\n                      }}\r\n                      className=\"gp-action-icon gp-delete\"\r\n                      title=\"Supprimer\"\r\n                    >\r\n                      <FaTrash size={16} />\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Modal Ajout */}\r\n      {modalOuvert && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Nouveau Technicien</h2>\r\n              <button onClick={() => setModalOuvert(false)}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Nom *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nom\"\r\n                  value={newTechnicien.nom}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.nom && <p className=\"text-red-500 text-sm\">{errors.nom}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Prénom *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"prenom\"\r\n                  value={newTechnicien.prenom}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.prenom && <p className=\"text-red-500 text-sm\">{errors.prenom}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Email *</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={newTechnicien.email}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n              </div>\r\n              \r\n              <div className=\"gp-form-group\">\r\n  <label className=\"block font-semibold mb-1\">Téléphone *</label>\r\n  <input\r\n    type=\"tel\"\r\n    name=\"telephone\"\r\n    value={newTechnicien.telephone}\r\n    onChange={handleChange}\r\n    className=\"gp-form-input\"\r\n  />\r\n  {errors.telephone && <p className=\"text-red-500 text-sm\">{errors.telephone}</p>}\r\n</div>\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Rôle</label>\r\n                <div className=\"gp-form-input bg-gray-100 cursor-not-allowed\">\r\n                  Technicien\r\n                  <input type=\"hidden\" name=\"role\" value=\"technicien\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Spécialité *</label>\r\n                <select\r\n                  name=\"specialite\"\r\n                  value={newTechnicien.specialite}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                >\r\n                  <option value=\"\">Sélectionner une spécialité</option>\r\n                  <option value=\"Informatique\">Informatique</option>\r\n                  <option value=\"Réseaux\">Réseaux</option>\r\n                  <option value=\"Électricité\">Électricité</option>\r\n                  <option value=\"Maintenance\">Maintenance</option>\r\n                </select>\r\n                {errors.specialite && <p className=\"text-red-500 text-sm\">{errors.specialite}</p>}\r\n              </div>\r\n\r\n              <div className=\"flex justify-end mt-4\" style={{ gap: \"12px\" }}>\r\n                <button \r\n                  onClick={() => setModalOuvert(false)} \r\n                  className=\"gp-btn gp-btn-cancel\"\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  onClick={handleCreateSubmit} \r\n                  className=\"gp-btn gp-btn-save\"\r\n                >\r\n                  Ajouter\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal Modification */}\r\n   {/* Modal Modification */}\r\n{editModalOuvert && editingTechnicien && (\r\n  <div className=\"gp-modal-overlay\">\r\n    <div className=\"gp-modal-container\">\r\n      <div className=\"gp-modal-header\">\r\n        <h2 className=\"text-xl font-bold\">Modifier Technicien</h2>\r\n        <button onClick={() => setEditModalOuvert(false)}>\r\n          <X size={24} />\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"gp-form-group\">\r\n          <label className=\"block font-semibold mb-1\">ID</label>\r\n          <div className=\"gp-readonly-text\">{editingTechnicien.id}</div>\r\n        </div>\r\n\r\n        {/* Nouveau champ Nom */}\r\n        <div className=\"gp-form-group\">\r\n          <label className=\"block font-semibold mb-1\">Nom *</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nom\"\r\n            value={editingTechnicien.nom}\r\n            onChange={handleEditChange}\r\n            className=\"gp-form-input\"\r\n          />\r\n          {editErrors.nom && <p className=\"text-red-500 text-sm\">{editErrors.nom}</p>}\r\n        </div>\r\n\r\n        <div className=\"gp-form-group\">\r\n          <label className=\"block font-semibold mb-1\">Prénom *</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"prenom\"\r\n            value={editingTechnicien.prenom}\r\n            onChange={handleEditChange}\r\n            className=\"gp-form-input\"\r\n          />\r\n          {editErrors.prenom && <p className=\"text-red-500 text-sm\">{editErrors.prenom}</p>}\r\n        </div>\r\n\r\n        {/* Champ Email ajouté */}\r\n        <div className=\"gp-form-group\">\r\n          <label className=\"block font-semibold mb-1\">Email *</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={editingTechnicien.email}\r\n            onChange={handleEditChange}\r\n            className=\"gp-form-input\"\r\n          />\r\n          {editErrors.email && <p className=\"text-red-500 text-sm\">{editErrors.email}</p>}\r\n        </div>\r\n\r\n        {/* Spécialité en lecture seule */}\r\n        <div className=\"gp-form-group\">\r\n          <label className=\"block font-semibold mb-1\">Spécialité</label>\r\n          <input\r\n            type=\"text\"\r\n            value={editingTechnicien.specialite}\r\n            className=\"gp-form-input bg-gray-100 cursor-not-allowed\"\r\n            readOnly\r\n          />\r\n        </div>\r\n\r\n        <div className=\"gp-form-group\">\r\n          <label className=\"block font-semibold mb-1\">Nouveau mot de passe</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={editingTechnicien.password || ''}\r\n            onChange={handleEditChange}\r\n            className=\"gp-form-input\"\r\n            placeholder=\"nouveau mot de passe\"\r\n          />\r\n        </div>\r\n        <div className=\"gp-form-group\">\r\n  <label className=\"block font-semibold mb-1\">Statut</label>\r\n  <label className=\"inline-flex items-center cursor-pointer\">\r\n  <input\r\n  type=\"checkbox\"\r\n  name=\"actif\"\r\n  checked={editingTechnicien?.actif || false}\r\n  onChange={(e) => handleEditChange({\r\n    target: {\r\n      name: 'actif',\r\n      value: e.target.checked\r\n    }\r\n  })}\r\n  className=\"form-checkbox h-5 w-5 text-blue-600 focus:ring-2 focus:ring-blue-400 rounded-lg transition duration-200 ease-in-out transform hover:scale-105\"\r\n  style={{\r\n    backgroundColor: editingTechnicien?.actif ? '#4caf50' : '#f44336',\r\n    borderColor: editingTechnicien?.actif ? '#388e3c' : '#d32f2f',\r\n  }}\r\n/>\r\n    <span className=\"ml-2\">\r\n      {editingTechnicien?.actif ? 'Actif' : 'Inactif'}\r\n    </span>\r\n  </label>\r\n</div>\r\n\r\n        <div className=\"flex justify-end mt-4\" style={{ gap: \"12px\" }}>\r\n          <button \r\n            onClick={() => setEditModalOuvert(false)} \r\n            className=\"gp-btn gp-btn-cancel\"\r\n          >\r\n            Annuler\r\n          </button>\r\n          <button \r\n            onClick={handleEditSubmit} \r\n            className=\"gp-btn gp-btn-save\"\r\n          >\r\n            Enregistrer\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n      {/* Modal Suppression */}\r\n      {deleteModalOuvert && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Confirmation</h2>\r\n              <button onClick={() => setDeleteModalOuvert(false)}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"text-center p-6\">\r\n              <div className=\"mb-4\">\r\n                <svg\r\n                  className=\"mx-auto h-16 w-16 text-red-600\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <p className=\"text-lg font-medium mb-4\">\r\n                Êtes-vous sûr de vouloir supprimer ce technicien ?\r\n              </p>\r\n              <div className=\"gp-delete-buttons\">\r\n          <button\r\n            onClick={() => setDeleteModalOuvert(false)}\r\n            className=\"gp-btn gp-btn-cancel\"\r\n          >\r\n            Annuler\r\n          </button>\r\n          <button\r\n            onClick={confirmDelete}\r\n            className=\"gp-btn gp-btn-danger\"\r\n          >\r\n            Supprimer\r\n          </button>\r\n        </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTechnicienTable.defaultProps = {\r\n  color: \"light\",\r\n};\r\n\r\nTechnicienTable.propTypes = {\r\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\r\n};","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Technicien.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Ticket.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Settings.js",["322"],"import React from \"react\";\r\n\r\n// components\r\n\r\nimport CardSettings from \"components/Cards/CardSettings.js\";\r\nimport CardProfile from \"components/Cards/CardProfile.js\";\r\n\r\nexport default function Settings() {\r\n  return (\r\n    <>\r\n      <div className=\"w-full lg:w-8/20 mx-auto mb-4\">\r\n          <CardSettings />\r\n        </div>\r\n        {/*\r\n        <div className=\"w-full lg:w-4/12 px-4\">\r\n          <CardProfile />\r\n        </div>\r\n        */}\r\n      \r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Calender.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Sidebar\\Sidebartechnicien.js",["323","324","325"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTicket, faSignOutAlt, faUsers, faCog, faChartPie, faCalendarAlt, faToolbox, faComments } from '@fortawesome/free-solid-svg-icons'; // Ajout de faComments\r\n\r\nexport default function Sidebar() {\r\n  const [collapseShow, setCollapseShow] = React.useState(\"hidden\");\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-gray-800 flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6\">\r\n        <div className=\"md:flex-col md:items-stretch md:min-h-full md:flex-nowrap px-0 flex flex-wrap items-center justify-between w-full mx-auto\">\r\n          {/* Toggler */}\r\n          <button\r\n            className=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\r\n            type=\"button\"\r\n            onClick={() => setCollapseShow(\"bg-white m-2 py-3 px-6\")}\r\n          >\r\n            <i className=\"fas fa-bars\"></i>\r\n          </button>\r\n\r\n          {/* Brand */}\r\n          <Link\r\n            className=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\r\n            to=\"/homepage\"\r\n          >\r\n            <center>\r\n            <img\r\n  src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/Logo_STB.png\"\r\n  alt=\"STB Logo\"\r\n  style={{ height: '75px', width: '180px' }}  // augmenté\r\n/>\r\n            </center>\r\n          </Link>\r\n          <hr className=\"my-4 border-t border-gray-600\" />\r\n          {/* Collapse */}\r\n          <div\r\n             className={\r\n              \"md:flex md:flex-col md:items-stretch md:opacity-100 md:relative md:mt-4 md:shadow-none shadow absolute top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-full justify-between items-center flex-1 rounded \" +\r\n              collapseShow\r\n            }\r\n          >\r\n            {/* Navigation */}\r\n            <ul className=\"md:flex-col md:min-w-full flex flex-col list-none space-y-2 mt-1\">\r\n         <li>\r\n                        <Link\r\n                          className=\"flex items-center p-4 text-gray-300 hover:bg-gray-700 rounded-xl transition-all duration-200\"\r\n                          to=\"/technicien/dashboard\"\r\n                        >\r\n                          <FontAwesomeIcon \r\n                            icon={faChartPie} \r\n                            className=\"w-5 h-5 mr-3 text-blue-400\" \r\n                          />\r\n                          Tableau de bord\r\n                        </Link>\r\n                      </li>\r\n\r\n         \r\n\r\n              <li>\r\n                <Link\r\n                  className=\"flex items-center p-4 text-gray-300 hover:bg-gray-700 rounded-xl transition-all duration-200\"\r\n                  to=\"/technicien/ticket\"\r\n                >\r\n                  <FontAwesomeIcon \r\n                    icon={faTicket} \r\n                    className=\"w-5 h-5 mr-3 text-purple-400\" \r\n                  />\r\n                  Tickets\r\n                </Link>\r\n              </li>\r\n\r\n              <li>\r\n                <Link\r\n                  className=\"flex items-center p-4 text-gray-300 hover:bg-gray-700 rounded-xl transition-all duration-200\"\r\n                  to=\"/technicien/calender\"\r\n                >\r\n                  <FontAwesomeIcon \r\n                    icon={faCalendarAlt} \r\n                    className=\"w-5 h-5 mr-3 text-yellow-400\" \r\n                  />\r\n                  Calendrier\r\n                </Link>\r\n              </li>\r\n <li>\r\n                <Link\r\n                  className=\"flex items-center p-4 text-gray-300 hover:bg-gray-700 rounded-xl transition-all duration-200\"\r\n                  to=\"/technicien/commentaire\"\r\n                >\r\n                  <FontAwesomeIcon \r\n                    icon={faComments} // Utilisation correcte de faComments\r\n                    className=\"w-5 h-5 mr-3 text-red-400\" \r\n                  />\r\n                  les avis des clients\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className=\"flex items-center p-4 text-gray-300 hover:bg-gray-700 rounded-xl transition-all duration-200\"\r\n                  to=\"/technicien/settings\"\r\n                >\r\n                  <FontAwesomeIcon \r\n                    icon={faCog} \r\n                    className=\"w-5 h-5 mr-3 text-gray-400\" \r\n                  />\r\n                  Paramètres\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Admin.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Dashboard.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Maps.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Tables.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Settings.js",["326"],"import React from \"react\";\r\n\r\n// components\r\n\r\nimport CardSettings from \"components/Cards/CardSettings.js\";\r\nimport CardProfile from \"components/Cards/CardProfile.js\";\r\n\r\nexport default function Settings() {\r\n  return (\r\n    <>\r\n    \r\n    <div className=\"w-full lg:w-8/20 mx-auto mb-4\">\r\n          <CardSettings />\r\n        </div>\r\n        {/*\r\n        <div className=\"w-full lg:w-4/12 px-4\">\r\n          <CardProfile />\r\n        </div>\r\n        */}\r\n   \r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Ticket.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\CardTech.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Calender.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Utilisateur.js",["327"],"import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n// components\r\n\r\n\r\nimport Sidebartechnicien from \"components/Sidebar/Sidebarutilisateur.js\";\r\nimport HeaderUser from \"components/Headers/Headeruser\";\r\nimport FooterAdmin from \"components/Footers/Footerr.js\";\r\nimport MyTickets from \"views/utilisateur/MyTickets.js\";\r\nimport Settings from \"views/utilisateur/Settings\";\r\n\r\n\r\n\r\nexport default function Utilisateur() {\r\n  return (\r\n    <>\r\n      <Sidebartechnicien />\r\n      <div className=\"relative md:ml-64 bg-blueGray-100\">\r\n       \r\n         <HeaderUser />\r\n        {/* Header */}\r\n     \r\n        <div className=\"px-4 md:px-10 mx-auto w-full -m-24\">\r\n          <Switch>\r\n            <Route path=\"/utilisateur/settings\" exact component={Settings} />\r\n            <Route path=\"/utilisateur/MyTickets\" exact component={MyTickets} />\r\n            \r\n          </Switch>\r\n          <FooterAdmin />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Sidebar\\Sidebarutilisateur.js",["328","329","330","331","332"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTicket, faSignOutAlt, faUsers, faCog, faChartPie, faCalendarAlt, faToolbox } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Sidebar() {\r\n  const [collapseShow, setCollapseShow] = React.useState(\"hidden\");\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-gray-800 flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6\">\r\n        <div className=\"md:flex-col md:items-stretch md:min-h-full md:flex-nowrap px-0 flex flex-wrap items-center justify-between w-full mx-auto\">\r\n          {/* Toggler */}\r\n          <button\r\n            className=\"cursor-pointer text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent\"\r\n            type=\"button\"\r\n            onClick={() => setCollapseShow(\"bg-white m-2 py-3 px-6\")}\r\n          >\r\n            <i className=\"fas fa-bars\"></i>\r\n          </button>\r\n\r\n          {/* Brand */}\r\n          <Link\r\n            className=\"md:block text-left md:pb-2 text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0\"\r\n            to=\"/homepage\"\r\n          >\r\n            <center>\r\n            <img\r\n  src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/Logo_STB.png\"\r\n  alt=\"STB Logo\"\r\n  style={{ height: '75px', width: '180px' }}  // augmenté\r\n/>\r\n            </center>\r\n          </Link>\r\n          <hr className=\"my-4 border-t border-gray-600\" />\r\n          {/* Collapse */}\r\n          <div\r\n             className={\r\n              \"md:flex md:flex-col md:items-stretch md:opacity-100 md:relative md:mt-4 md:shadow-none shadow absolute top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-full justify-between items-center flex-1 rounded \" +\r\n              collapseShow\r\n            }\r\n          >\r\n            {/* Navigation */}\r\n            <ul className=\"md:flex-col md:min-w-full flex flex-col list-none space-y-2 mt-1\">\r\n     \r\n\r\n         \r\n\r\n              <li>\r\n                <Link\r\n                  className=\"flex items-center p-4 text-gray-300 hover:bg-gray-700 rounded-xl transition-all duration-200\"\r\n                  to=\"/utilisateur/MyTickets\"\r\n                >\r\n                  <FontAwesomeIcon \r\n                    icon={faTicket} \r\n                    className=\"w-5 h-5 mr-3 text-purple-400\" \r\n                  />\r\n                  Tickets\r\n                </Link>\r\n              </li>\r\n\r\n         \r\n\r\n              <li>\r\n                <Link\r\n                  className=\"flex items-center p-4 text-gray-300 hover:bg-gray-700 rounded-xl transition-all duration-200\"\r\n                  to=\"/utilisateur/settings\"\r\n                >\r\n                  <FontAwesomeIcon \r\n                    icon={faCog} \r\n                    className=\"w-5 h-5 mr-3 text-gray-400\" \r\n                  />\r\n                  Paramètres\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\utilisateur\\Settings.js",["333"],"import React from \"react\";\r\n\r\n// components\r\n\r\nimport CardSettings from \"components/Cards/CardSettings.js\";\r\nimport CardProfile from \"components/Cards/CardProfile.js\";\r\n\r\nexport default function Settings() {\r\n  return (\r\n    <>\r\n       <div className=\"w-full lg:w-8/20 mx-auto mb-4\">\r\n          <CardSettings />\r\n        </div>\r\n        {/*\r\n        <div className=\"w-full lg:w-4/12 px-4\">\r\n          <CardProfile />\r\n        </div>\r\n        */}\r\n    \r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Headers\\Headeruser.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\homepagevisiteur.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\VisiteurNavbar.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\utilisateur\\MyTickets.js",["334","335","336"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction MyTickets() {\r\n  \r\n  const [tickets, setTickets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n  const [searchId, setSearchId] = useState(\"\");\r\n  const [feedback, setFeedback] = useState({ commentaire: \"\" });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const getShortCode = (id) => {\r\n    const strId = String(id);\r\n    if (!strId || strId.length < 10) return \"XXXX\";\r\n    return strId.substring(6, 10);\r\n  };\r\n\r\n  const handleSubmitFeedback = async () => {\r\n    console.log(\"Feedback soumis :\", {\r\n      ticketId: selectedTicket._id,\r\n      commentaire: feedback.commentaire,\r\n    });\r\n    \r\n\r\n    // TODO: envoyer au backend\r\n    setSubmitted(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.margin = \"0\";\r\n    document.body.style.minHeight = \"100vh\";\r\n    document.body.style.display = \"flex\";\r\n    document.body.style.flexDirection = \"column\";\r\n  \r\n    const fetchTickets = async () => {\r\n      try {\r\n        const token = localStorage.getItem('jwt_token');\r\n        const user = JSON.parse(localStorage.getItem('user')); \r\n        \r\n        const response = await fetch(`/user/${user._id}`, {\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        const data = await response.json();\r\n        setTickets(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tickets:\", error);\r\n        // Fallback vers le localStorage\r\n        const localTickets = JSON.parse(localStorage.getItem(\"tickets\")) || [];\r\n        setTickets(localTickets);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTickets();\r\n  }, []);\r\n  \r\n \r\n  \r\n  \r\n  \r\n\r\n  const badgeStyle = (status) => {\r\n    const statusNormalized = status?.toLowerCase() || \"\";\r\n    return {\r\n      padding: \"0.25rem 0.5rem\",\r\n      borderRadius: \"0px\",\r\n      fontSize: \"0.75rem\",\r\n      fontWeight: \"500\",\r\n      backgroundColor:\r\n        statusNormalized === \"ouvert\"\r\n          ? \"#FEE2E2\"\r\n          : statusNormalized === \"en cours\"\r\n          ? \"#FFEDD5\"\r\n          : statusNormalized === \"fermé\"\r\n          ? \"#DCFCE7\"\r\n          : \"#FFFFFF\",\r\n      color:\r\n        statusNormalized === \"ouvert\"\r\n          ? \"#DC2626\"\r\n          : statusNormalized === \"en cours\"\r\n          ? \"#C2410C\"\r\n          : statusNormalized === \"fermé\"\r\n          ? \"#065F46\"\r\n          : \"#000000\",\r\n      textAlign: \"center\",\r\n      minWidth: \"80px\",\r\n      display: \"inline-block\",\r\n      border: \"1px solid\",\r\n      borderColor:\r\n        statusNormalized === \"ouvert\"\r\n          ? \"#DC2626\"\r\n          : statusNormalized === \"en cours\"\r\n          ? \"#C2410C\"\r\n          : statusNormalized === \"fermé\"\r\n          ? \"#065F46\"\r\n          : \"#000000\",\r\n    };\r\n  };\r\n\r\n  const filteredTickets = tickets.filter(\r\n    (ticket) => searchId === \"\" || ticket._id?.toString().includes(searchId)\r\n  );\r\n\r\n  return (\r\n    <>\r\n   \r\n      <div style={container}>\r\n        <div style={contentWrapper}>\r\n         \r\n          <h1 style={title}>Espace Support Client</h1>\r\n          <p style={subtitle}>Consultez vos tickets et suivez leur avancement</p>\r\n\r\n          <div style={{ marginBottom: \"1rem\", textAlign: \"center\" }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Rechercher par numéro de ticket\"\r\n              value={searchId}\r\n              onChange={(e) => setSearchId(e.target.value)}\r\n              style={{\r\n                padding: \"0.5rem\",\r\n                width: \"60%\",\r\n                maxWidth: \"300px\",\r\n                borderRadius: \"6px\",\r\n                border: \"1px solid #ccc\",\r\n                fontSize: \"1rem\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={ticketGrid}>\r\n            <div style={ticketList}>\r\n              {filteredTickets.map((ticket) => (\r\n                <div\r\n                  key={ticket._id}\r\n                  style={ticketItem}\r\n                  onClick={() => {\r\n                    setSelectedTicket(ticket);\r\n                    setSubmitted(false);\r\n                    setFeedback({ note: \"\", commentaire: \"\" });\r\n                  }}\r\n                >\r\n                  <div style={ticketHeader}>\r\n                    <span style={ticketId}>\r\n                      {ticket._id ? `#${getShortCode(ticket._id)}` : \"ID non disponible\"}\r\n                    </span>\r\n                    <span style={badgeStyle(ticket.statut)}>{ticket.statut}</span>\r\n                  </div>\r\n                  <h3 style={ticketTitle}>{ticket.sujet}</h3>\r\n                  <p style={ticketDate}>{ticket.date?.slice(0, 10)}</p>\r\n                </div>\r\n              ))}\r\n              {filteredTickets.length === 0 && (\r\n                <p style={{ textAlign: \"center\", color: \"#999\" }}>Aucun ticket trouvé.</p>\r\n              )}\r\n            </div>\r\n\r\n            {selectedTicket && (\r\n              <div style={detailsPanel}>\r\n                <div style={detailsHeader}>\r\n                  <h2 style={detailsTitle}>Détails du ticket</h2>\r\n                  <button style={closeButton} onClick={() => setSelectedTicket(null)}>\r\n                    ×\r\n                  </button>\r\n                </div>\r\n                <div style={detailsContent}>\r\n                  <div style={detailRow}>\r\n                    <span style={detailLabel}>Numéro :</span>\r\n                    <span>#{getShortCode(selectedTicket._id)}</span>\r\n                  </div>\r\n                  <div style={detailRow}>\r\n                    <span style={detailLabel}>Statut :</span>\r\n                    <span style={badgeStyle(selectedTicket.statut)}>\r\n                      {selectedTicket.statut}\r\n                    </span>\r\n                  </div>\r\n                  <div style={detailRow}>\r\n                    <span style={detailLabel}>Date :</span>\r\n                    <span>{selectedTicket.date?.slice(0, 10)}</span>\r\n                  </div>\r\n                  <div style={detailDescription}>\r\n                    <p style={detailLabel}>Description :</p>\r\n                    <p>{selectedTicket.description}</p>\r\n                  </div>\r\n\r\n                  {/* Évaluation si ticket fermé */}\r\n                  {selectedTicket.statut?.toLowerCase() === \"fermé\" && (\r\n  <div\r\n    style={{\r\n      marginTop: \"2rem\",\r\n      borderTop: \"1px solid #ddd\",\r\n      paddingTop: \"1rem\",\r\n    }}\r\n  >\r\n    <h4\r\n      style={{\r\n        fontSize: \"1.1rem\",\r\n        marginBottom: \"0.5rem\",\r\n        color: \"#1a237e\",\r\n      }}\r\n    >\r\n      Évaluez l’intervention :\r\n    </h4>\r\n\r\n    {submitted ? (\r\n      <p style={{ color: \"green\" }}>Merci pour votre retour !</p>\r\n    ) : (\r\n      <>\r\n        <div style={{ marginBottom: \"1rem\" }}>\r\n          <label\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              display: \"block\",\r\n              marginBottom: \"0.5rem\",\r\n            }}\r\n          >\r\n            Commentaire :\r\n          </label>\r\n          <textarea\r\n            rows=\"3\"\r\n            value={feedback.commentaire}\r\n            onChange={(e) =>\r\n              setFeedback({ ...feedback, commentaire: e.target.value })\r\n            }\r\n            style={{\r\n              width: \"100%\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              padding: \"0.5rem\",\r\n              resize: \"vertical\",\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleSubmitFeedback}\r\n          style={{\r\n            backgroundColor: \"#1a237e\",\r\n            color: \"#fff\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            padding: \"0.5rem 1rem\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Envoyer\r\n        </button>\r\n      </>\r\n    )}\r\n  </div>\r\n)}\r\n\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n// Styles (inchangés)\r\nconst container = {\r\n  minHeight: \"100vh\",\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-start\",\r\n  padding: \"2rem\",\r\n  backgroundColor: \"#f4f6f8\",\r\n};\r\n\r\nconst contentWrapper = { width: \"100%\", maxWidth: \"800px\" };\r\nconst bannerImage = {\r\n  width: \"100%\",\r\n  maxHeight: \"200px\",\r\n  borderRadius: \"12px\",\r\n  objectFit: \"cover\",\r\n  marginBottom: \"1rem\",\r\n  boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\",\r\n};\r\nconst title = {\r\n  color: \"#1a237e\",\r\n  fontSize: \"2.5rem\",\r\n  textAlign: \"center\",\r\n  marginBottom: \"1rem\",\r\n  marginTop: \"4rem\",\r\n  fontWeight: \"bold\",\r\n  textShadow: \"1px 1px 2px rgba(0, 0, 0, 0.1)\",\r\n  borderBottom: \"3px solid #c5cae9\",\r\n  paddingBottom: \"0.5rem\",\r\n  letterSpacing: \"1px\",\r\n};\r\nconst subtitle = { textAlign: \"center\", color: \"#555\", marginBottom: \"2rem\" };\r\nconst ticketGrid = { display: \"grid\", gap: \"2rem\", gridTemplateColumns: \"1fr\" };\r\nconst ticketList = { backgroundColor: \"#f8f9fa\", borderRadius: \"8px\", padding: \"1rem\" };\r\nconst ticketItem = {\r\n  backgroundColor: \"white\",\r\n  borderRadius: \"6px\",\r\n  padding: \"1rem\",\r\n  marginBottom: \"1rem\",\r\n  cursor: \"pointer\",\r\n  border: \"1px solid #eee\",\r\n  transition: \"all 0.3s\",\r\n};\r\nconst ticketHeader = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  marginBottom: \"0.5rem\",\r\n};\r\nconst ticketId = { color: \"#666\", fontSize: \"0.9rem\" };\r\nconst ticketTitle = { fontSize: \"1.1rem\", color: \"#333\", margin: \"0 0 0.5rem 0\" };\r\nconst ticketDate = { color: \"#999\", fontSize: \"0.85rem\", margin: \"0\" };\r\nconst detailsPanel = {\r\n  backgroundColor: \"white\",\r\n  borderRadius: \"8px\",\r\n  padding: \"1.5rem\",\r\n  border: \"1px solid #eee\",\r\n};\r\nconst detailsHeader = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  marginBottom: \"1.5rem\",\r\n};\r\nconst detailsTitle = { fontSize: \"1.5rem\", color: \"#1a237e\", margin: \"0\" };\r\nconst closeButton = {\r\n  background: \"none\",\r\n  border: \"none\",\r\n  fontSize: \"1.5rem\",\r\n  color: \"#666\",\r\n  cursor: \"pointer\",\r\n  padding: \"0 0.5rem\",\r\n};\r\nconst detailsContent = { lineHeight: \"1.6\" };\r\nconst detailRow = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  marginBottom: \"1rem\",\r\n  paddingBottom: \"1rem\",\r\n  borderBottom: \"1px solid #eee\",\r\n};\r\nconst detailLabel = { color: \"#666\", fontWeight: \"bold\", marginRight: \"1rem\" };\r\nconst detailDescription = { marginTop: \"2rem\" };\r\n\r\nexport default MyTickets;\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Commentaire.js",["337"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FaEye, FaTrash } from \"react-icons/fa\";\r\nimport { X } from \"lucide-react\";\r\n\r\nexport default function AvisClientTable({ color }) {\r\n  const [avis, setAvis] = useState([\r\n    {\r\n      id: 1,\r\n      ticketId: \"TKT-001\",\r\n      nom: \"Dubois\",\r\n      prenom: \"Marc\",\r\n      commentaire: \"Service rapide et professionnel. Mon ordinateur est comme neuf !\",\r\n    },\r\n    {\r\n      id: 2,\r\n      ticketId: \"TKT-002\",\r\n      nom: \"Leroy\",\r\n      prenom: \"Julie\",\r\n      commentaire: \"Intervention un peu longue mais résultat impeccable.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      ticketId: \"TKT-003\",\r\n      nom: \"Moreau\",\r\n      prenom: \"Luc\",\r\n      commentaire: \"Technicien très compétent et sympathique.\",\r\n    },\r\n  ]);\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filterId, setFilterId] = useState(\"\");\r\n\r\n  const [deleteModalOuvert, setDeleteModalOuvert] = useState(false);\r\n  const [avisIdToDelete, setAvisIdToDelete] = useState(null);\r\n  const [detailModalOuvert, setDetailModalOuvert] = useState(false);\r\n  const [avisDetail, setAvisDetail] = useState(null);\r\n\r\n  const confirmDelete = () => {\r\n    setAvis(avis.filter(a => a.id !== avisIdToDelete));\r\n    setDeleteModalOuvert(false);\r\n  };\r\n\r\n  const filteredAvis = avis.filter(a => {\r\n    const matchesId = filterId ? a.ticketId.toLowerCase().includes(filterId.toLowerCase()) : true;\r\n    const matchesSearch = searchQuery\r\n      ? a.nom.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        a.prenom.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        a.commentaire.toLowerCase().includes(searchQuery.toLowerCase())\r\n      : true;\r\n\r\n    return matchesId && matchesSearch;\r\n  });\r\n\r\n  return (\r\n    <div className={`relative mx-auto max-w-screen-xl flex flex-col min-w-0 rounded-lg shadow-lg mb-10 ${\r\n      color === \"light\" ? \"bg-white\" : \"bg-slate-800 text-white\"\r\n    }`}>\r\n      \r\n      <style jsx>{`\r\n        .gp-action-icon {\r\n          padding: 0.45rem;\r\n          border-radius: 0.375rem;\r\n          transition: all 0.2s ease;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n        .gp-view {\r\n          background-color: #e0f2fe;\r\n          color: #0284c7;\r\n        }\r\n        .gp-view:hover {\r\n          background-color: #bae6fd;\r\n        }\r\n        .gp-delete {\r\n          background-color: #fee2e2;\r\n          color: #dc2626;\r\n        }\r\n        .gp-delete:hover {\r\n          background-color: #fecaca;\r\n        }\r\n        .gp-modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100vw;\r\n          height: 100vh;\r\n          background-color: rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 50;\r\n        }\r\n        .gp-modal-container {\r\n          background-color: white;\r\n          border-radius: 0.75rem;\r\n          padding: 2rem;\r\n          width: 90%;\r\n          max-width: 500px;\r\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n        }\r\n        .gp-modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 1rem;\r\n        }\r\n        .gp-btn {\r\n          padding: 0.5rem 1.25rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n        .gp-btn-cancel {\r\n          background-color: #f3f4f6;\r\n          color: #374151;\r\n        }\r\n        .gp-btn-cancel:hover {\r\n          background-color: #e5e7eb;\r\n        }\r\n        .gp-btn-danger {\r\n          background-color: #dc2626;\r\n          color: white;\r\n        }\r\n        .gp-btn-danger:hover {\r\n          background-color: #b91c1c;\r\n        }\r\n        .comment-snippet {\r\n          display: -webkit-box;\r\n          -webkit-line-clamp: 2;\r\n          -webkit-box-orient: vertical;\r\n          overflow: hidden;\r\n          max-width: 300px;\r\n        }\r\n      `}</style>\r\n\r\n      <div className=\"px-6 pt-6 border-b-2 border-gray-300\">\r\n        <h1 className={`text-2xl font-bold text-center ${\r\n          color === \"light\" ? \"text-gray-800\" : \"text-white\"\r\n        }`}>\r\n          Avis des clients\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"flex justify-between px-6 pt-6 pb-4 items-center gap-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"🔍 Rechercher par ID ticket...\"\r\n          value={filterId}\r\n          onChange={(e) => setFilterId(e.target.value)}\r\n          className=\"w-full sm:w-64 px-4 py-2 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n        />\r\n\r\n     \r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto px-6 pt-4 pb-14\">\r\n        <table className=\"w-full border-collapse\">\r\n          <thead>\r\n            <tr className={`text-left ${\r\n              color === \"light\" ? \"bg-gray-50 text-gray-500\" : \"bg-slate-700 text-slate-200\"\r\n            }`}>\r\n              <th className=\"px-6 py-4 font-medium\">ID Ticket</th>\r\n              <th className=\"px-6 py-4 font-medium\">Nom</th>\r\n              <th className=\"px-6 py-4 font-medium\">Prénom</th>\r\n              <th className=\"px-6 py-4 font-medium\">Avis client</th>\r\n              <th className=\"px-6 py-4 font-medium\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredAvis.map((a) => (\r\n              <tr \r\n                key={a.id} \r\n                className={`border-t ${\r\n                  color === \"light\" ? \"hover:bg-gray-50\" : \"hover:bg-slate-700\"\r\n                } transition-colors`}\r\n              >\r\n                <td className=\"px-6 py-4\">{a.ticketId}</td>\r\n                <td className=\"px-6 py-4\">{a.nom}</td>\r\n                <td className=\"px-6 py-4\">{a.prenom}</td>\r\n                <td className=\"px-6 py-4\">\r\n                  <div className=\"comment-snippet\">\r\n                    {a.commentaire}\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-6 py-4\">\r\n                  <div className=\"flex\">\r\n                    <button\r\n                      onClick={() => {\r\n                        setAvisDetail(a);\r\n                        setDetailModalOuvert(true);\r\n                      }}\r\n                      className=\"gp-action-icon gp-view mr-2\"\r\n                      title=\"Voir le détail\"\r\n                    >\r\n                      <FaEye size={16} />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setAvisIdToDelete(a.id);\r\n                        setDeleteModalOuvert(true);\r\n                      }}\r\n                      className=\"gp-action-icon gp-delete\"\r\n                      title=\"Supprimer\"\r\n                    >\r\n                      <FaTrash size={16} />\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Modal Détail Avis */}\r\n      {detailModalOuvert && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container p-6 bg-white rounded-2xl shadow-2xl max-w-md mx-auto mt-8\">\r\n  <div className=\"flex justify-between items-center border-b pb-4 mb-6\">\r\n    <h2 className=\"text-2xl font-semibold text-gray-800\">📝 Détail de l'avis</h2>\r\n    <button onClick={() => setDetailModalOuvert(false)} className=\"text-gray-500 hover:text-red-500 transition\">\r\n      <X size={24} />\r\n    </button>\r\n  </div>\r\n\r\n  <div className=\"space-y-4 text-[15px] text-gray-800\">\r\n    <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n      <label className=\"text-sm text-gray-500 font-medium block\">ID Ticket</label>\r\n      <p className=\"mt-1 font-semibold\">{avisDetail?.ticketId}</p>\r\n    </div>\r\n    <br></br>\r\n\r\n    <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n      <label className=\"text-sm text-gray-500 font-medium block\">Client</label>\r\n      <p className=\"mt-1 font-semibold\">{avisDetail?.nom} {avisDetail?.prenom}</p>\r\n    </div>\r\n    <br></br>\r\n    <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n      <label className=\"text-sm text-gray-500 font-medium block\">Commentaire complet</label>\r\n      <p className=\"mt-2 whitespace-pre-wrap text-gray-700 leading-relaxed\">{avisDetail?.commentaire}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal Suppression */}\r\n      {deleteModalOuvert && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Confirmation</h2>\r\n              <button onClick={() => setDeleteModalOuvert(false)}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"text-center p-6\">\r\n              <div className=\"mb-4\">\r\n                <svg\r\n                  className=\"mx-auto h-16 w-16 text-red-600\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <p className=\"text-lg font-medium mb-4\">\r\n                Êtes-vous sûr de vouloir supprimer cet avis ?\r\n              </p>\r\n              <div className=\"flex justify-center gap-4\">\r\n                <button\r\n                  onClick={() => setDeleteModalOuvert(false)}\r\n                  className=\"gp-btn gp-btn-cancel\"\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button\r\n                  onClick={confirmDelete}\r\n                  className=\"gp-btn gp-btn-danger\"\r\n                >\r\n                  Confirmer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nAvisClientTable.defaultProps = {\r\n  color: \"light\",\r\n};\r\n\r\nAvisClientTable.propTypes = {\r\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\r\n};","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Dashboard.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\technicien\\Commentaire.js",["338","339","340","341","342"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FaEye, FaTrash } from \"react-icons/fa\";\r\nimport { X } from \"lucide-react\";\r\n\r\nexport default function AvisClientTable({ color }) {\r\n  const [avis, setAvis] = useState([\r\n    {\r\n      id: 1,\r\n      ticketId: \"TKT-001\",\r\n      nom: \"Dubois\",\r\n      prenom: \"Marc\",\r\n      commentaire: \"Service rapide et professionnel. Mon ordinateur est comme neuf !\",\r\n    },\r\n    {\r\n      id: 2,\r\n      ticketId: \"TKT-002\",\r\n      nom: \"Leroy\",\r\n      prenom: \"Julie\",\r\n      commentaire: \"Intervention un peu longue mais résultat impeccable.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      ticketId: \"TKT-003\",\r\n      nom: \"Moreau\",\r\n      prenom: \"Luc\",\r\n      commentaire: \"Technicien très compétent et sympathique.\",\r\n    },\r\n  ]);\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filterId, setFilterId] = useState(\"\");\r\n\r\n  const [deleteModalOuvert, setDeleteModalOuvert] = useState(false);\r\n  const [avisIdToDelete, setAvisIdToDelete] = useState(null);\r\n  const [detailModalOuvert, setDetailModalOuvert] = useState(false);\r\n  const [avisDetail, setAvisDetail] = useState(null);\r\n\r\n  const confirmDelete = () => {\r\n    setAvis(avis.filter(a => a.id !== avisIdToDelete));\r\n    setDeleteModalOuvert(false);\r\n  };\r\n\r\n  const filteredAvis = avis.filter(a => {\r\n    const matchesId = filterId ? a.ticketId.toLowerCase().includes(filterId.toLowerCase()) : true;\r\n    const matchesSearch = searchQuery\r\n      ? a.nom.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        a.prenom.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        a.commentaire.toLowerCase().includes(searchQuery.toLowerCase())\r\n      : true;\r\n\r\n    return matchesId && matchesSearch;\r\n  });\r\n\r\n  return (\r\n    <div className={`relative mx-auto max-w-screen-xl flex flex-col min-w-0 rounded-lg shadow-lg mb-10 ${\r\n      color === \"light\" ? \"bg-white\" : \"bg-slate-800 text-white\"\r\n    }`}>\r\n      \r\n      <style jsx>{`\r\n        .gp-action-icon {\r\n          padding: 0.45rem;\r\n          border-radius: 0.375rem;\r\n          transition: all 0.2s ease;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n        .gp-view {\r\n          background-color: #e0f2fe;\r\n          color: #0284c7;\r\n        }\r\n        .gp-view:hover {\r\n          background-color: #bae6fd;\r\n        }\r\n        .gp-delete {\r\n          background-color: #fee2e2;\r\n          color: #dc2626;\r\n        }\r\n        .gp-delete:hover {\r\n          background-color: #fecaca;\r\n        }\r\n        .gp-modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100vw;\r\n          height: 100vh;\r\n          background-color: rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 50;\r\n        }\r\n        .gp-modal-container {\r\n          background-color: white;\r\n          border-radius: 0.75rem;\r\n          padding: 2rem;\r\n          width: 90%;\r\n          max-width: 500px;\r\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n        }\r\n        .gp-modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 1rem;\r\n        }\r\n        .gp-btn {\r\n          padding: 0.5rem 1.25rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n        .gp-btn-cancel {\r\n          background-color: #f3f4f6;\r\n          color: #374151;\r\n        }\r\n        .gp-btn-cancel:hover {\r\n          background-color: #e5e7eb;\r\n        }\r\n        .gp-btn-danger {\r\n          background-color: #dc2626;\r\n          color: white;\r\n        }\r\n        .gp-btn-danger:hover {\r\n          background-color: #b91c1c;\r\n        }\r\n        .comment-snippet {\r\n          display: -webkit-box;\r\n          -webkit-line-clamp: 2;\r\n          -webkit-box-orient: vertical;\r\n          overflow: hidden;\r\n          max-width: 300px;\r\n        }\r\n      `}</style>\r\n\r\n      <div className=\"px-6 pt-6 border-b-2 border-gray-300\">\r\n        <h1 className={`text-2xl font-bold text-center ${\r\n          color === \"light\" ? \"text-gray-800\" : \"text-white\"\r\n        }`}>\r\n          Avis des clients\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"flex justify-between px-6 pt-6 pb-4 items-center gap-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"🔍 Rechercher par ID ticket...\"\r\n          value={filterId}\r\n          onChange={(e) => setFilterId(e.target.value)}\r\n          className=\"w-full sm:w-64 px-4 py-2 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n        />\r\n\r\n     \r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto px-6 pt-4 pb-14\">\r\n        <table className=\"w-full border-collapse\">\r\n          <thead>\r\n            <tr className={`text-left ${\r\n              color === \"light\" ? \"bg-gray-50 text-gray-500\" : \"bg-slate-700 text-slate-200\"\r\n            }`}>\r\n              <th className=\"px-6 py-4 font-medium\">ID Ticket</th>\r\n              <th className=\"px-6 py-4 font-medium\">Nom</th>\r\n              <th className=\"px-6 py-4 font-medium\">Prénom</th>\r\n              <th className=\"px-6 py-4 font-medium\">Avis client</th>\r\n              <th className=\"px-6 py-4 font-medium\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredAvis.map((a) => (\r\n              <tr \r\n                key={a.id} \r\n                className={`border-t ${\r\n                  color === \"light\" ? \"hover:bg-gray-50\" : \"hover:bg-slate-700\"\r\n                } transition-colors`}\r\n              >\r\n                <td className=\"px-6 py-4\">{a.ticketId}</td>\r\n                <td className=\"px-6 py-4\">{a.nom}</td>\r\n                <td className=\"px-6 py-4\">{a.prenom}</td>\r\n                <td className=\"px-6 py-4\">\r\n                  <div className=\"comment-snippet\">\r\n                    {a.commentaire}\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-6 py-4\">\r\n                  <div className=\"flex\">\r\n                    <button\r\n                      onClick={() => {\r\n                        setAvisDetail(a);\r\n                        setDetailModalOuvert(true);\r\n                      }}\r\n                      className=\"gp-action-icon gp-view mr-2\"\r\n                      title=\"Voir le détail\"\r\n                    >\r\n                      <FaEye size={16} />\r\n                    </button>\r\n                  \r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Modal Détail Avis */}\r\n      {detailModalOuvert && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Détail de l'avis</h2>\r\n              <button onClick={() => setDetailModalOuvert(false)}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block font-semibold\">ID Ticket</label>\r\n                <p className=\"mt-1\">{avisDetail?.ticketId}</p>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block font-semibold\">Client</label>\r\n                <p className=\"mt-1\">{avisDetail?.nom} {avisDetail?.prenom}</p>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block font-semibold\">Commentaire complet</label>\r\n                <p className=\"mt-1 whitespace-pre-wrap\">{avisDetail?.commentaire}</p>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end mt-4\">\r\n                <button \r\n                  onClick={() => setDetailModalOuvert(false)} \r\n                  className=\"gp-btn gp-btn-cancel\"\r\n                >\r\n                  Fermer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nAvisClientTable.defaultProps = {\r\n  color: \"light\",\r\n};\r\n\r\nAvisClientTable.propTypes = {\r\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\r\n};",{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","severity":1,"message":"348","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":19},{"ruleId":"347","severity":1,"message":"351","line":5,"column":21,"nodeType":"349","messageId":"350","endLine":5,"endColumn":24},{"ruleId":"347","severity":1,"message":"352","line":5,"column":26,"nodeType":"349","messageId":"350","endLine":5,"endColumn":29},{"ruleId":"347","severity":1,"message":"353","line":5,"column":31,"nodeType":"349","messageId":"350","endLine":5,"endColumn":37},{"ruleId":"347","severity":1,"message":"354","line":11,"column":20,"nodeType":"349","messageId":"350","endLine":11,"endColumn":31},{"ruleId":"355","severity":1,"message":"356","line":59,"column":13,"nodeType":"357","endLine":59,"endColumn":96},{"ruleId":"347","severity":1,"message":"358","line":8,"column":23,"nodeType":"349","messageId":"350","endLine":8,"endColumn":37},{"ruleId":"347","severity":1,"message":"359","line":147,"column":13,"nodeType":"349","messageId":"350","endLine":147,"endColumn":17},{"ruleId":"343","replacedBy":"360"},{"ruleId":"345","replacedBy":"361"},{"ruleId":"343","replacedBy":"362"},{"ruleId":"345","replacedBy":"363"},{"ruleId":"343","replacedBy":"364"},{"ruleId":"345","replacedBy":"365"},{"ruleId":"347","severity":1,"message":"354","line":11,"column":20,"nodeType":"349","messageId":"350","endLine":11,"endColumn":31},{"ruleId":"343","replacedBy":"366"},{"ruleId":"345","replacedBy":"367"},{"ruleId":"355","severity":1,"message":"356","line":135,"column":13,"nodeType":"357","endLine":135,"endColumn":96},{"ruleId":"347","severity":1,"message":"368","line":9,"column":10,"nodeType":"349","messageId":"350","endLine":9,"endColumn":18},{"ruleId":"347","severity":1,"message":"369","line":9,"column":20,"nodeType":"349","messageId":"350","endLine":9,"endColumn":31},{"ruleId":"347","severity":1,"message":"370","line":11,"column":10,"nodeType":"349","messageId":"350","endLine":11,"endColumn":17},{"ruleId":"347","severity":1,"message":"371","line":11,"column":19,"nodeType":"349","messageId":"350","endLine":11,"endColumn":29},{"ruleId":"347","severity":1,"message":"372","line":12,"column":10,"nodeType":"349","messageId":"350","endLine":12,"endColumn":14},{"ruleId":"347","severity":1,"message":"373","line":12,"column":16,"nodeType":"349","messageId":"350","endLine":12,"endColumn":23},{"ruleId":"347","severity":1,"message":"374","line":13,"column":10,"nodeType":"349","messageId":"350","endLine":13,"endColumn":20},{"ruleId":"347","severity":1,"message":"375","line":13,"column":22,"nodeType":"349","messageId":"350","endLine":13,"endColumn":35},{"ruleId":"347","severity":1,"message":"376","line":14,"column":10,"nodeType":"349","messageId":"350","endLine":14,"endColumn":18},{"ruleId":"347","severity":1,"message":"377","line":14,"column":20,"nodeType":"349","messageId":"350","endLine":14,"endColumn":31},{"ruleId":"378","severity":1,"message":"379","line":189,"column":5,"nodeType":"380","messageId":"381","endLine":189,"endColumn":12},{"ruleId":"355","severity":1,"message":"356","line":19,"column":11,"nodeType":"357","endLine":19,"endColumn":43},{"ruleId":"355","severity":1,"message":"356","line":20,"column":11,"nodeType":"357","endLine":20,"endColumn":43},{"ruleId":"355","severity":1,"message":"356","line":21,"column":11,"nodeType":"357","endLine":21,"endColumn":43},{"ruleId":"355","severity":1,"message":"356","line":22,"column":11,"nodeType":"357","endLine":22,"endColumn":43},{"ruleId":"347","severity":1,"message":"382","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":14},{"ruleId":"347","severity":1,"message":"383","line":9,"column":10,"nodeType":"349","messageId":"350","endLine":9,"endColumn":17},{"ruleId":"347","severity":1,"message":"383","line":8,"column":10,"nodeType":"349","messageId":"350","endLine":8,"endColumn":17},{"ruleId":"347","severity":1,"message":"384","line":9,"column":10,"nodeType":"349","messageId":"350","endLine":9,"endColumn":15},{"ruleId":"347","severity":1,"message":"358","line":42,"column":23,"nodeType":"349","messageId":"350","endLine":42,"endColumn":37},{"ruleId":"347","severity":1,"message":"385","line":6,"column":8,"nodeType":"349","messageId":"350","endLine":6,"endColumn":19},{"ruleId":"347","severity":1,"message":"386","line":4,"column":20,"nodeType":"349","messageId":"350","endLine":4,"endColumn":32},{"ruleId":"347","severity":1,"message":"387","line":4,"column":34,"nodeType":"349","messageId":"350","endLine":4,"endColumn":41},{"ruleId":"347","severity":1,"message":"388","line":4,"column":77,"nodeType":"349","messageId":"350","endLine":4,"endColumn":86},{"ruleId":"347","severity":1,"message":"385","line":6,"column":8,"nodeType":"349","messageId":"350","endLine":6,"endColumn":19},{"ruleId":"347","severity":1,"message":"389","line":2,"column":25,"nodeType":"349","messageId":"350","endLine":2,"endColumn":33},{"ruleId":"347","severity":1,"message":"386","line":4,"column":20,"nodeType":"349","messageId":"350","endLine":4,"endColumn":32},{"ruleId":"347","severity":1,"message":"387","line":4,"column":34,"nodeType":"349","messageId":"350","endLine":4,"endColumn":41},{"ruleId":"347","severity":1,"message":"390","line":4,"column":50,"nodeType":"349","messageId":"350","endLine":4,"endColumn":60},{"ruleId":"347","severity":1,"message":"391","line":4,"column":62,"nodeType":"349","messageId":"350","endLine":4,"endColumn":75},{"ruleId":"347","severity":1,"message":"388","line":4,"column":77,"nodeType":"349","messageId":"350","endLine":4,"endColumn":86},{"ruleId":"347","severity":1,"message":"385","line":6,"column":8,"nodeType":"349","messageId":"350","endLine":6,"endColumn":19},{"ruleId":"347","severity":1,"message":"382","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":14},{"ruleId":"347","severity":1,"message":"383","line":8,"column":10,"nodeType":"349","messageId":"350","endLine":8,"endColumn":17},{"ruleId":"347","severity":1,"message":"392","line":283,"column":7,"nodeType":"349","messageId":"350","endLine":283,"endColumn":18},{"ruleId":"347","severity":1,"message":"358","line":31,"column":23,"nodeType":"349","messageId":"350","endLine":31,"endColumn":37},{"ruleId":"347","severity":1,"message":"393","line":3,"column":17,"nodeType":"349","messageId":"350","endLine":3,"endColumn":24},{"ruleId":"347","severity":1,"message":"358","line":31,"column":23,"nodeType":"349","messageId":"350","endLine":31,"endColumn":37},{"ruleId":"347","severity":1,"message":"394","line":34,"column":10,"nodeType":"349","messageId":"350","endLine":34,"endColumn":27},{"ruleId":"347","severity":1,"message":"395","line":35,"column":26,"nodeType":"349","messageId":"350","endLine":35,"endColumn":43},{"ruleId":"347","severity":1,"message":"396","line":39,"column":9,"nodeType":"349","messageId":"350","endLine":39,"endColumn":22},"no-native-reassign",["397"],"no-negated-in-lhs",["398"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'setFilterId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setSearchQuery' is assigned a value but never used.","'data' is assigned a value but never used.",["397"],["398"],["397"],["398"],["397"],["398"],["397"],["398"],"'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'postalCode' is assigned a value but never used.","'setPostalCode' is assigned a value but never used.","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","'Link' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'CardProfile' is defined but never used.","'faSignOutAlt' is defined but never used.","'faUsers' is defined but never used.","'faToolbox' is defined but never used.","'Redirect' is defined but never used.","'faChartPie' is defined but never used.","'faCalendarAlt' is defined but never used.","'bannerImage' is assigned a value but never used.","'FaTrash' is defined but never used.","'deleteModalOuvert' is assigned a value but never used.","'setAvisIdToDelete' is assigned a value but never used.","'confirmDelete' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]