[{"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\index.js":"1","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Admin.js":"2","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Auth.js":"3","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Landing.js":"4","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Index.js":"5","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Profile.js":"6","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Test.js":"7","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Ticket.js":"8","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Dashboard.js":"9","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Settings.js":"10","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Maps.js":"11","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Tables.js":"12","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\Register.js":"13","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\Login.js":"14","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\FooterAdmin.js":"15","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\AuthNavbar.js":"16","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\AdminNavbar.js":"17","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\FooterSmall.js":"18","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\Footer.js":"19","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Headers\\HeaderStats.js":"20","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Sidebar\\Sidebar.js":"21","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\IndexNavbar.js":"22","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Calender.js":"23","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\forget.js":"24","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\CardTech.js":"25","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardLineChart.js":"26","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Ticket\\NewTicket.js":"27","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardPageVisits.js":"28","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardSocialTraffic.js":"29","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardSettings.js":"30","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardStats.js":"31","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardBarChart.js":"32","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardTable.js":"33","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardProfile.js":"34","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Maps\\MapExample.js":"35","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\IndexDropdown.js":"36","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\PagesDropdown.js":"37","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\UserDropdown.js":"38","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\NotificationDropdown.js":"39","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\departement\\CardDepartment.js":"40","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Calender\\Calenderr.js":"41","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\TableDropdown.js":"42","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\TicketTable.js":"43","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\services\\ApiUser.js":"44","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Login.js":"45","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Register.js":"46","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Ticket.js":"47","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\Footerr.js":"48","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\MyTickets.js":"49"},{"size":1539,"mtime":1745455518876,"results":"50","hashOfConfig":"51"},{"size":1631,"mtime":1744886413298,"results":"52","hashOfConfig":"51"},{"size":1166,"mtime":1744886413298,"results":"53","hashOfConfig":"51"},{"size":27259,"mtime":1744886413299,"results":"54","hashOfConfig":"51"},{"size":4017,"mtime":1744886413299,"results":"55","hashOfConfig":"51"},{"size":6986,"mtime":1744886413300,"results":"56","hashOfConfig":"51"},{"size":23882,"mtime":1745524483897,"results":"57","hashOfConfig":"51"},{"size":342,"mtime":1745512548284,"results":"58","hashOfConfig":"51"},{"size":911,"mtime":1744886413303,"results":"59","hashOfConfig":"51"},{"size":543,"mtime":1744886413303,"results":"60","hashOfConfig":"51"},{"size":444,"mtime":1744886413303,"results":"61","hashOfConfig":"51"},{"size":454,"mtime":1745512477003,"results":"62","hashOfConfig":"51"},{"size":5036,"mtime":1744886413305,"results":"63","hashOfConfig":"51"},{"size":4657,"mtime":1744886413304,"results":"64","hashOfConfig":"51"},{"size":2503,"mtime":1744886413292,"results":"65","hashOfConfig":"51"},{"size":5395,"mtime":1744886413295,"results":"66","hashOfConfig":"51"},{"size":1733,"mtime":1744886413294,"results":"67","hashOfConfig":"51"},{"size":2612,"mtime":1744886413293,"results":"68","hashOfConfig":"51"},{"size":5016,"mtime":1744886413292,"results":"69","hashOfConfig":"51"},{"size":2469,"mtime":1744886413293,"results":"70","hashOfConfig":"51"},{"size":9852,"mtime":1744886413295,"results":"71","hashOfConfig":"51"},{"size":2139,"mtime":1744886413295,"results":"72","hashOfConfig":"51"},{"size":228,"mtime":1744886413302,"results":"73","hashOfConfig":"51"},{"size":2404,"mtime":1744886413305,"results":"74","hashOfConfig":"51"},{"size":246,"mtime":1745502600198,"results":"75","hashOfConfig":"51"},{"size":3776,"mtime":1744886413287,"results":"76","hashOfConfig":"51"},{"size":909,"mtime":1745519721731,"results":"77","hashOfConfig":"51"},{"size":6405,"mtime":1744886413288,"results":"78","hashOfConfig":"51"},{"size":7748,"mtime":1744886413289,"results":"79","hashOfConfig":"51"},{"size":8377,"mtime":1745413770400,"results":"80","hashOfConfig":"51"},{"size":2574,"mtime":1744886413289,"results":"81","hashOfConfig":"51"},{"size":3562,"mtime":1744886413287,"results":"82","hashOfConfig":"51"},{"size":10584,"mtime":1745512486283,"results":"83","hashOfConfig":"51"},{"size":3747,"mtime":1744886413288,"results":"84","hashOfConfig":"51"},{"size":2413,"mtime":1744886413294,"results":"85","hashOfConfig":"51"},{"size":3805,"mtime":1744886413290,"results":"86","hashOfConfig":"51"},{"size":4046,"mtime":1744886413291,"results":"87","hashOfConfig":"51"},{"size":2803,"mtime":1744886413291,"results":"88","hashOfConfig":"51"},{"size":2481,"mtime":1744886413290,"results":"89","hashOfConfig":"51"},{"size":11791,"mtime":1745508281155,"results":"90","hashOfConfig":"51"},{"size":2653,"mtime":1745494022371,"results":"91","hashOfConfig":"51"},{"size":2022,"mtime":1726085470000,"results":"92","hashOfConfig":"51"},{"size":12981,"mtime":1745524396059,"results":"93","hashOfConfig":"51"},{"size":171,"mtime":1744886413298,"results":"94","hashOfConfig":"51"},{"size":4655,"mtime":1745233676612,"results":"95","hashOfConfig":"51"},{"size":7639,"mtime":1745420444170,"results":"96","hashOfConfig":"51"},{"size":5376,"mtime":1745514759344,"results":"97","hashOfConfig":"51"},{"size":1815,"mtime":1744886413293,"results":"98","hashOfConfig":"51"},{"size":6754,"mtime":1745454335298,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"xh86ji",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\index.js",[],["211","212"],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Admin.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\layouts\\Auth.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Landing.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Index.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Profile.js",["213","214","215","216"],"import React from \"react\";\r\n\r\nimport Navbar from \"components/Navbars/AuthNavbar.js\";\r\nimport Footer from \"components/Footers/Footer.js\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nexport default function Profile() {\r\n  return (\r\n    <>\r\n      <Navbar transparent />\r\n      <main className=\"profile-page\">\r\n        <main className=\"profile-page\">\r\n          <section className=\"relative block h-500-px\">\r\n            <div\r\n              className=\"absolute top-0 w-full h-full bg-center bg-cover\"\r\n              style={{\r\n                backgroundImage:\r\n                  \"url('https://images.unsplash.com/photo-1499336315816-097655dcfbda?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2710&q=80')\",\r\n              }}\r\n            >\r\n              <span\r\n                id=\"blackOverlay\"\r\n                className=\"w-full h-full absolute opacity-50 bg-black\"\r\n              ></span>\r\n            </div>\r\n\r\n            <div\r\n              className=\"top-auto bottom-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden h-70-px\"\r\n              style={{ transform: \"translateZ(0)\" }}\r\n            >\r\n              <svg\r\n                className=\"absolute bottom-0 overflow-hidden\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                preserveAspectRatio=\"none\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 2560 100\"\r\n                x=\"0\"\r\n                y=\"0\"\r\n              >\r\n                <polygon\r\n                  className=\"text-blueGray-200 fill-current\"\r\n                  points=\"2560 0 2560 100 0 100\"\r\n                ></polygon>\r\n              </svg>\r\n            </div>\r\n          </section>\r\n          <section className=\"relative py-16 bg-blueGray-200\">\r\n            <div className=\"container mx-auto px-4\">\r\n              <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-xl rounded-lg -mt-64\">\r\n                <div className=\"px-6\">\r\n                  <div className=\"flex flex-wrap justify-center\">\r\n                    <div className=\"w-full lg:w-3/12 px-4 lg:order-2 flex justify-center\">\r\n                      <div className=\"relative\">\r\n                        <img\r\n                          alt=\"...\"\r\n                          src={require(\"assets/img/team-2-800x800.jpg\").default}\r\n                          className=\"shadow-xl rounded-full h-auto align-middle border-none absolute -m-16 -ml-20 lg:-ml-16 max-w-150-px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-4/12 px-4 lg:order-3 lg:text-right lg:self-center\">\r\n                      <div className=\"py-6 px-3 mt-32 sm:mt-0\">\r\n                        <button\r\n                          className=\"bg-lightBlue-500 active:bg-lightBlue-600 uppercase text-white font-bold hover:shadow-md shadow text-xs px-4 py-2 rounded outline-none focus:outline-none sm:mr-2 mb-1 ease-linear transition-all duration-150\"\r\n                          type=\"button\"\r\n                        >\r\n                          Connect\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-4/12 px-4 lg:order-1\">\r\n                      <div className=\"flex justify-center py-4 lg:pt-4 pt-8\">\r\n                        <div className=\"mr-4 p-3 text-center\">\r\n                          <span className=\"text-xl font-bold block uppercase tracking-wide text-blueGray-600\">\r\n                            22\r\n                          </span>\r\n                          <span className=\"text-sm text-blueGray-400\">\r\n                            Friends\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"mr-4 p-3 text-center\">\r\n                          <span className=\"text-xl font-bold block uppercase tracking-wide text-blueGray-600\">\r\n                            10\r\n                          </span>\r\n                          <span className=\"text-sm text-blueGray-400\">\r\n                            Photos\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"lg:mr-4 p-3 text-center\">\r\n                          <span className=\"text-xl font-bold block uppercase tracking-wide text-blueGray-600\">\r\n                            89\r\n                          </span>\r\n                          <span className=\"text-sm text-blueGray-400\">\r\n                            Comments\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-center mt-12\">\r\n                    <h3 className=\"text-4xl font-semibold leading-normal mb-2 text-blueGray-700 mb-2\">\r\n                      Jenna Stones\r\n                    </h3>\r\n                    <div className=\"text-sm leading-normal mt-0 mb-2 text-blueGray-400 font-bold uppercase\">\r\n                      <i className=\"fas fa-map-marker-alt mr-2 text-lg text-blueGray-400\"></i>{\" \"}\r\n                      Los Angeles, California\r\n                    </div>\r\n                    <div className=\"mb-2 text-blueGray-600 mt-10\">\r\n                      <i className=\"fas fa-briefcase mr-2 text-lg text-blueGray-400\"></i>\r\n                      Solution Manager - Creative Tim Officer\r\n                    </div>\r\n                    <div className=\"mb-2 text-blueGray-600\">\r\n                      <i className=\"fas fa-university mr-2 text-lg text-blueGray-400\"></i>\r\n                      University of Computer Science\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mt-10 py-10 border-t border-blueGray-200 text-center\">\r\n                    <div className=\"flex flex-wrap justify-center\">\r\n                      <div className=\"w-full lg:w-9/12 px-4\">\r\n                        <p className=\"mb-4 text-lg leading-relaxed text-blueGray-700\">\r\n                          An artist of considerable range, Jenna the name taken\r\n                          by Melbourne-raised, Brooklyn-based Nick Murphy\r\n                          writes, performs and records all of his own music,\r\n                          giving it a warm, intimate feel with a solid groove\r\n                          structure. An artist of considerable range.\r\n                        </p>\r\n                        <a\r\n                          href=\"#pablo\"\r\n                          className=\"font-normal text-lightBlue-500\"\r\n                          onClick={(e) => e.preventDefault()}\r\n                        >\r\n                          Show more\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n\r\n        <Footer />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Test.js",["217"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Search, Edit, Trash, Plus, X, Check, Filter } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\n// CSS encapsulé avec préfixe \"gp-\" (cohérent avec Gestion Personnel)\r\nconst encapsulatedStyles = `\r\n  .gp-department-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .gp-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .gp-search-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-search-input {\r\n    flex: 1;\r\n    position: relative;\r\n  }\r\n  \r\n  .gp-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .gp-tab-button {\r\n    padding: 0.5rem 1rem;\r\n    border-bottom: 2px solid transparent;\r\n    color: #6b7280;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-tab-button.gp-active {\r\n    border-bottom-color: #14b8a6;\r\n    color: #14b8a6;\r\n  }\r\n  \r\n  .gp-tab-button:hover:not(.gp-active) {\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-table-container {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .gp-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .gp-th {\r\n    text-align: left;\r\n    padding: 0.75rem 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #6b7280;\r\n    background-color: #f9fafb;\r\n    border-bottom: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gp-td {\r\n    padding: 1rem;\r\n    vertical-align: middle;\r\n    color: #374151;\r\n    border-bottom: 1px solid #f3f4f6;\r\n  }\r\n  \r\n  .gp-tr:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gp-department-badge {\r\n    background-color: #e6fffa;\r\n    color: #047857;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gp-action-button {\r\n    padding: 0.375rem;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-edit-button {\r\n    background-color: #dbeafe;\r\n    color: #3b82f6;\r\n  }\r\n  \r\n  .gp-edit-button:hover {\r\n    background-color: #bfdbfe;\r\n  }\r\n  \r\n  .gp-delete-button {\r\n    background-color: #fee2e2;\r\n    color: #ef4444;\r\n  }\r\n  \r\n  .gp-delete-button:hover {\r\n    background-color: #fecaca;\r\n  }\r\n  \r\n  .gp-add-button {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-add-button:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .gp-pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1.5rem;\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .gp-modal-overlay {\r\n    position: fixed;\r\n    inset: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .gp-modal-container {\r\n    background-color: white;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    padding: 1.5rem;\r\n    width: 100%;\r\n    max-width: 28rem;\r\n  }\r\n  \r\n  .gp-modal-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-modal-close {\r\n    color: #6b7280;\r\n    transition: color 0.2s ease;\r\n  }\r\n  \r\n  .gp-modal-close:hover {\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-form-group {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .gp-form-label {\r\n    display: block;\r\n    margin-bottom: 0.25rem;\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-form-input {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-form-input:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gp-form-select {\r\n    width: 100%;\r\n    padding: 1 rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-form-select:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gp-modal-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n    margin-top: 1.5rem;\r\n  }\r\n  \r\n  .gp-btn {\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-btn-cancel {\r\n    background-color: #f3f4f6;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-btn-cancel:hover {\r\n    background-color: #e5e7eb;\r\n  }\r\n  \r\n  .gp-btn-save {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n  }\r\n  \r\n  .gp-btn-save:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .gp-toast {\r\n    position: fixed;\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    padding: 1rem;\r\n    border-radius: 0.375rem;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: white;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .gp-toast-success {\r\n    background-color: #10b981;\r\n  }\r\n  \r\n  .gp-toast-error {\r\n    background-color: #ef4444;\r\n  }\r\n`;\r\n// Toast component for notifications\r\nconst Toast = ({ message, type, onClose }) => {\r\n  const toastClass =\r\n    type === \"success\"\r\n      ? \"gp-toast-success\"\r\n      : type === \"error\"\r\n      ? \"gp-toast-error\"\r\n      : \"gp-toast-info\";\r\n\r\n  React.useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onClose();\r\n    }, 3000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [onClose]);\r\n\r\n  return (\r\n    <div className={`gp-toast ${toastClass}`}>\r\n      {type === \"success\" && <Check size={20} />}\r\n      {type === \"error\" && <X size={20} />}\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function CardDepartment({ color = \"light\" }) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortOption, setSortOption] = useState(\"\");\r\n  const [departments, setDepartments] = useState([]);\r\n  const [modalOuvert, setModalOuvert] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [selectedDepartmentId, setSelectedDepartmentId] = useState(null);\r\n  const [selectedDepartmentName, setSelectedDepartmentName] = useState(\"\");\r\n  const [newDepartment, setNewDepartment] = useState({\r\n    nom: \"\",\r\n  });\r\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [toast, setToast] = useState({ affiche: false, message: \"\", type: \"\" });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fetch departments on component mount\r\n  useEffect(() => {\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n\r\n\r\n  // Fetch all departments\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.get(`/allusers`);\r\n      setDepartments(response.data);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error);\r\n      afficherToast(\"Erreur lors du chargement des départements\", \"error\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredDepartments = departments\r\n    .filter((department) => {\r\n      if (!isNaN(searchTerm) && searchTerm !== \"\") {\r\n        return department._id.toString().includes(searchTerm);\r\n      }\r\n      return department.nom.toLowerCase().includes(searchTerm.toLowerCase());\r\n    })\r\n    .sort((a, b) => {\r\n      if (!sortOption) return 0;\r\n      if (sortOption === \"id-asc\") return a._id.localeCompare(b._id);\r\n      if (sortOption === \"id-desc\") return b._id.localeCompare(a._id);\r\n      if (sortOption === \"departement\") return a.nom.localeCompare(b.nom);\r\n      return 0;\r\n    });\r\n\r\n  // Display a toast notification\r\n  const afficherToast = (message, type) => {\r\n    setToast({ affiche: true, message, type });\r\n  };\r\n\r\n  // Close toast\r\n  const fermerToast = () => {\r\n    setToast({ ...toast, affiche: false });\r\n  };\r\n\r\n  const handleAction = (action, id, nom) => {\r\n    switch (action) {\r\n      case \"modifier\":\r\n        const departmentToEdit = departments.find(\r\n          (department) => department._id === id\r\n        );\r\n        setSelectedDepartment(departmentToEdit);\r\n        setIsEditModalOpen(true);\r\n        break;\r\n      case \"supprimer\":\r\n        setSelectedDepartmentId(id);\r\n        setSelectedDepartmentName(nom);\r\n        setModalOuvert(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    try {\r\n      await axios.delete(\r\n        `/deletedepartment/${selectedDepartmentId}`\r\n      );\r\n      setDepartments(\r\n        departments.filter(\r\n          (department) => department._id !== selectedDepartmentId\r\n        )\r\n      );\r\n      setModalOuvert(false);\r\n      setSelectedDepartmentName(\"\");\r\n      afficherToast(\"Département supprimé avec succès\", \"success\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting department:\", error);\r\n      afficherToast(\"Erreur lors de la suppression du département\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setModalOuvert(false);\r\n    setSelectedDepartmentName(\"\");\r\n  };\r\n\r\n  const handleAddDepartment = () => {\r\n    setNewDepartment({ nom: \"\" });\r\n    setSelectedDepartmentId(null);\r\n    setIsEditModalOpen(false);\r\n    setModalOuvert(true);\r\n  };\r\n\r\n  const validateForm = (department) => {\r\n    const newErrors = {};\r\n    if (!department.nom)\r\n      newErrors.nom = \"Le nom du département est obligatoire.\";\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleModalSubmit = async () => {\r\n    if (!validateForm(newDepartment)) return;\r\n\r\n    try {\r\n      const response = await axios.post(`/adddepartment`, {\r\n        nom: newDepartment.nom,\r\n      });\r\n\r\n      setDepartments([...departments, response.data]);\r\n      setModalOuvert(false);\r\n      setNewDepartment({\r\n        nom: \"\",\r\n      });\r\n      setErrors({});\r\n      afficherToast(\"Département ajouté avec succès\", \"success\");\r\n    } catch (error) {\r\n      console.error(\"Error adding department:\", error);\r\n      afficherToast(\"Erreur lors de l'ajout du département\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handleModalCancel = () => {\r\n    setModalOuvert(false);\r\n    setNewDepartment({\r\n      nom: \"\",\r\n    });\r\n    setErrors({});\r\n  };\r\n\r\n  const handleEditSubmit = async () => {\r\n    if (!validateForm(selectedDepartment)) return;\r\n\r\n    try {\r\n      await axios.put(\r\n        `/updatedepartment/${selectedDepartment._id}`,\r\n        {\r\n          nom: selectedDepartment.nom,\r\n        }\r\n      );\r\n\r\n      const updatedDepartments = departments.map((department) =>\r\n        department._id === selectedDepartment._id\r\n          ? { ...selectedDepartment }\r\n          : department\r\n      );\r\n\r\n      setDepartments(updatedDepartments);\r\n      setIsEditModalOpen(false);\r\n      afficherToast(\"Département modifié avec succès\", \"success\");\r\n    } catch (error) {\r\n      console.error(\"Error updating department:\", error);\r\n      afficherToast(\"Erreur lors de la modification du département\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setIsEditModalOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isEditModalOpen) {\r\n      setSelectedDepartment((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setNewDepartment((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>{encapsulatedStyles}</style>\r\n      <div\r\n        className={\r\n          \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded\"\r\n        }\r\n      >\r\n        <div className=\"gp-department-container\">\r\n          <div className=\"gp-header-section\">\r\n            <h1\r\n              className=\"gp-modal-title\"\r\n              style={{ fontSize: \"1.5rem\", marginBottom: \"1.5rem\" }}\r\n            >\r\n              Gestion des Départements\r\n            </h1>\r\n\r\n            {/* Search and filter section */}\r\n            <div className=\"gp-search-container\">\r\n              <div className=\"gp-search-input\">\r\n                <div className=\"gp-search-icon\">\r\n                  <Search size={20} />\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher par nom ou ID\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"gp-form-input\"\r\n                  style={{ paddingLeft: \"2.5rem\" }}\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}\r\n              >\r\n                <Filter size={20} style={{ color: \"#9ca3af\" }} />\r\n                <select\r\n                  value={sortOption}\r\n                  onChange={(e) => setSortOption(e.target.value)}\r\n                  className=\"gp-form-select\"\r\n                >\r\n                  <option value=\"\">Filtrer par</option>\r\n                  <option value=\"id-asc\">ID Ascendant</option>\r\n                  <option value=\"id-desc\">ID Descendant</option>\r\n                  <option value=\"departement\">Par Département</option>\r\n                </select>\r\n              </div>\r\n\r\n              <button onClick={handleAddDepartment} className=\"gp-add-button\">\r\n                <Plus size={20} />\r\n                Ajouter\r\n              </button>\r\n            </div>\r\n\r\n            {/* Departments table */}\r\n            <div className=\"gp-table-container\">\r\n              <table className=\"gp-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"gp-th\">ID</th>\r\n                    <th className=\"gp-th\">Département</th>\r\n                    <th className=\"gp-th\" style={{ textAlign: \"center\" }}>\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {isLoading ? (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"3\"\r\n                        className=\"gp-td\"\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"#6b7280\",\r\n                          padding: \"1.5rem 0\",\r\n                        }}\r\n                      >\r\n                        Chargement des départements...\r\n                      </td>\r\n                    </tr>\r\n                  ) : filteredDepartments.length > 0 ? (\r\n                    filteredDepartments.map((department) => (\r\n                      <tr className=\"gp-tr\" key={department._id}>\r\n                        <td className=\"gp-td\">\r\n                          {department._id.substring(0, 8)}...\r\n                        </td>\r\n                        <td className=\"gp-td\">\r\n                          <span className=\"gp-department-badge\">\r\n                            {department.nom}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"gp-td\">\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              gap: \"0.5rem\",\r\n                            }}\r\n                          >\r\n                            <button\r\n                              onClick={() =>\r\n                                handleAction(\r\n                                  \"modifier\",\r\n                                  department._id,\r\n                                  department.nom\r\n                                )\r\n                              }\r\n                              className=\"gp-action-button gp-edit-button\"\r\n                              title=\"Modifier\"\r\n                            >\r\n                              <Edit size={16} />\r\n                            </button>\r\n                            <button\r\n                              onClick={() =>\r\n                                handleAction(\r\n                                  \"supprimer\",\r\n                                  department._id,\r\n                                  department.nom\r\n                                )\r\n                              }\r\n                              className=\"gp-action-button gp-delete-button\"\r\n                              title=\"Supprimer\"\r\n                            >\r\n                              <Trash size={16} />\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"3\"\r\n                        className=\"gp-td\"\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"#6b7280\",\r\n                          padding: \"1.5rem 0\",\r\n                        }}\r\n                      >\r\n                        Aucun département trouvé\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"gp-pagination\">\r\n              <div style={{ fontSize: \"0.875rem\", color: \"#6b7280\" }}>\r\n                Affichage de {filteredDepartments.length} sur{\" \"}\r\n                {departments.length} départements\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Delete department modal */}\r\n        {modalOuvert && selectedDepartmentId && (\r\n          <div className=\"gp-modal-overlay\">\r\n            <div className=\"gp-modal-container\">\r\n              <div className=\"gp-modal-header\">\r\n                <h2 className=\"gp-modal-title\">Confirmation de suppression</h2>\r\n                <button onClick={handleCancelDelete} className=\"gp-modal-close\">\r\n                  <X size={24} />\r\n                </button>\r\n              </div>\r\n\r\n              <div>\r\n                <p style={{ marginBottom: \"1.5rem\", color: \"#4b5563\" }}>\r\n                  Êtes-vous sûr de vouloir supprimer le département{\" \"}\r\n                  <strong>{selectedDepartmentName}</strong> ?\r\n                </p>\r\n\r\n                <div className=\"gp-modal-footer\">\r\n                  <button\r\n                    onClick={handleCancelDelete}\r\n                    className=\"gp-btn gp-btn-cancel\"\r\n                  >\r\n                    Annuler\r\n                  </button>\r\n                  <button\r\n                    onClick={handleConfirmDelete}\r\n                    className=\"gp-btn gp-btn-save\"\r\n                    style={{\r\n                      backgroundColor: \"#ef4444\",\r\n                      borderColor: \"#ef4444\",\r\n                    }}\r\n                  >\r\n                    Supprimer\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add department modal */}\r\n        {modalOuvert && !selectedDepartmentId && (\r\n          <div className=\"gp-modal-overlay\">\r\n            <div className=\"gp-modal-container\">\r\n              <div className=\"gp-modal-header\">\r\n                <h2 className=\"gp-modal-title\">Ajouter un département</h2>\r\n                <button onClick={handleModalCancel} className=\"gp-modal-close\">\r\n                  <X size={24} />\r\n                </button>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"gp-form-group\">\r\n                  <label className=\"gp-form-label\">Nom du département</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"nom\"\r\n                    value={newDepartment.nom}\r\n                    onChange={handleChange}\r\n                    className=\"gp-form-input\"\r\n                  />\r\n                  {errors.nom && (\r\n                    <p\r\n                      style={{\r\n                        color: \"#ef4444\",\r\n                        fontSize: \"0.75rem\",\r\n                        marginTop: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      {errors.nom}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"gp-modal-footer\">\r\n                  <button\r\n                    onClick={handleModalCancel}\r\n                    className=\"gp-btn gp-btn-cancel\"\r\n                  >\r\n                    Annuler\r\n                  </button>\r\n                  <button\r\n                    onClick={handleModalSubmit}\r\n                    className=\"gp-btn gp-btn-save\"\r\n                  >\r\n                    Ajouter\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Edit department modal */}\r\n        {isEditModalOpen && selectedDepartment && (\r\n          <div className=\"gp-modal-overlay\">\r\n            <div className=\"gp-modal-container\">\r\n              <div className=\"gp-modal-header\">\r\n                <h2 className=\"gp-modal-title\">Modifier le département</h2>\r\n                <button onClick={handleEditCancel} className=\"gp-modal-close\">\r\n                  <X size={24} />\r\n                </button>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"gp-form-group\">\r\n                  <label className=\"gp-form-label\">ID</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={selectedDepartment._id}\r\n                    disabled\r\n                    className=\"gp-form-input\"\r\n                    style={{ backgroundColor: \"#f3f4f6\" }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"gp-form-group\">\r\n                  <label className=\"gp-form-label\">Nom du département</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"nom\"\r\n                    value={selectedDepartment.nom}\r\n                    onChange={handleChange}\r\n                    className=\"gp-form-input\"\r\n                  />\r\n                  {errors.nom && (\r\n                    <p\r\n                      style={{\r\n                        color: \"#ef4444\",\r\n                        fontSize: \"0.75rem\",\r\n                        marginTop: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      {errors.nom}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"gp-modal-footer\">\r\n                  <button\r\n                    onClick={handleEditCancel}\r\n                    className=\"gp-btn gp-btn-cancel\"\r\n                  >\r\n                    Annuler\r\n                  </button>\r\n                  <button\r\n                    onClick={handleEditSubmit}\r\n                    className=\"gp-btn gp-btn-save\"\r\n                  >\r\n                    Enregistrer\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Toast notifications */}\r\n        {toast.affiche && (\r\n          <Toast\r\n            message={toast.message}\r\n            type={toast.type}\r\n            onClose={fermerToast}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nCardDepartment.propTypes = {\r\n  color: PropTypes.string,\r\n};","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Ticket.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Dashboard.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Settings.js",["218"],"import React from \"react\";\r\n\r\n// components\r\n\r\nimport CardSettings from \"components/Cards/CardSettings.js\";\r\nimport CardProfile from \"components/Cards/CardProfile.js\";\r\n\r\nexport default function Settings() {\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"w-full lg:w-8/12 px-4\">\r\n          <CardSettings />\r\n        </div>\r\n        {/*\r\n        <div className=\"w-full lg:w-4/12 px-4\">\r\n          <CardProfile />\r\n        </div>\r\n        */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Maps.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Tables.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\Register.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\Login.js",["219"],"import { useState } from \"react\";\r\nimport { FaGoogle } from \"react-icons/fa\";\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  \r\n\r\n  return (\r\n    <div style={{ \r\n      display: \"flex\", \r\n      height: \"100vh\", \r\n      alignItems: \"center\", \r\n      justifyContent: \"center\", \r\n      backgroundImage: \"url('https://img.freepik.com/premium-vector/abstract-geometric-white-gray-color-background-vector_665257-159.jpg?semt=ais_hybrid')\", \r\n      backgroundSize: \"cover\", \r\n      backgroundPosition: \"center\", \r\n      padding: \"16px\" \r\n    }}>\r\n      <div style={{ \r\n        display: \"grid\", \r\n        gridTemplateColumns: \"1fr 1fr\", \r\n        boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\", \r\n        borderRadius: \"12px\", \r\n        overflow: \"hidden\", \r\n        maxWidth: \"1000px\", \r\n        width: \"100%\", \r\n        position: \"relative\" \r\n      }}>\r\n        \r\n        <img \r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/Logo_STB.png\" \r\n          alt=\"STB Logo\" \r\n          style={{ \r\n            position: \"absolute\", \r\n            top: \"12px\", \r\n            left: \"12px\", \r\n            width: \"120px\", \r\n            height: \"auto\" \r\n          }} \r\n        />\r\n\r\n        <div style={{ padding: \"32px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", background: \"white\" }}>\r\n          <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", color: \"#1f2937\", textAlign: \"center\" }}>Log In</h2>\r\n          <div style={{ marginTop: \"16px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Email</label>\r\n            <input type=\"email\" placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)} style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #d1d5db\", borderRadius: \"6px\", marginTop: \"4px\" }} />\r\n          </div>\r\n          <div style={{ marginTop: \"12px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Password</label>\r\n            <input type=\"password\" placeholder=\"Enter your password\" value={password} onChange={(e) => setPassword(e.target.value)} style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #d1d5db\", borderRadius: \"6px\", marginTop: \"4px\" }} />\r\n          </div>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"12px\" }}>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <input type=\"checkbox\" id=\"remember\" />\r\n              <label htmlFor=\"remember\" style={{ marginLeft: \"6px\", fontSize: \"14px\", color: \"#4b5563\" }}>Remember me</label>\r\n            </div>\r\n            <a href=\"#\" style={{ fontSize: \"14px\", color: \"#3b82f6\", textDecoration: \"none\" }}>Forgot password?</a>\r\n          </div>\r\n          <button style={{ width: \"100%\", background: \"#3b82f6\", color: \"white\", padding: \"10px\", marginTop: \"16px\", borderRadius: \"6px\", fontWeight: \"bold\", cursor: \"pointer\" }}>LOG IN</button>\r\n          <div style={{ display: \"flex\", alignItems: \"center\", margin: \"16px 0\" }}>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n            <span style={{ margin: \"0 8px\", fontSize: \"14px\", color: \"#6b7280\" }}>OR</span>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n          </div>\r\n          <button style={{ width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"8px\", border: \"1px solid #d1d5db\", padding: \"10px\", borderRadius: \"6px\", fontWeight: \"bold\", cursor: \"pointer\", background: \"white\" }}>\r\n            <FaGoogle style={{ color: \"#3b82f6\" }} /> Continue with Google\r\n          </button>\r\n          <p style={{ fontSize: \"14px\", textAlign: \"center\", color: \"#6b7280\", marginTop: \"12px\" }}>\r\n            Don't have an account? <a href=\"Register\" style={{ color: \"#3b82f6\", textDecoration: \"none\" }}>Sign Up</a>\r\n         \r\n          </p>\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", backgroundImage: \"url('https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrxCZS8RUx52KhkLFeYR19uXX3GnbF9-sH75brySGs70DJ1EINGwkFnr6K5LqopCqGHTVK79x_gscCHE_cR1wmpIADhJXkTZIJhDz_VtYuxwekNibQUVl6VKNuq3uOlTsfnFW2F_ZVXsm2m7DU2IGJREbwsM16cR45D3-4iI5AwRArtjCnR713SvfIJpg/s1934/stb%20%20thebanker.jpg')\", backgroundSize: \"cover\", backgroundPosition: \"center\", color: \"white\", padding: \"32px\", textAlign: \"center\" }}>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\FooterAdmin.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\FooterSmall.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\Footer.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Headers\\HeaderStats.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Navbars\\IndexNavbar.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\Calender.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\auth\\forget.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\admin\\CardTech.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardLineChart.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Ticket\\NewTicket.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardPageVisits.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardSocialTraffic.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardSettings.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardStats.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardBarChart.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardTable.js",["220"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function CardTable({ color }) {\r\n  const [users, setUsers] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [newUser, setNewUser] = useState({\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    email: \"\",\r\n    _id: \"\",\r\n    role: \"\",\r\n    tel: \"\",\r\n    password: \"\"\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const res = await axios.get(\"/allusers\");\r\n      if (res.data) {\r\n        setUsers(res.data);\r\n        console.log(\"Users data:\", res.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des utilisateurs :\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmitUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isEditing) {\r\n      try {\r\n        const res = await axios.put(`/updateuser/${newUser._id}`, newUser);\r\n        const updatedUsers = [...users];\r\n        updatedUsers[editIndex] = res.data;\r\n        setUsers(updatedUsers);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la mise à jour:\", error);\r\n        alert(\"Échec de la mise à jour de l'utilisateur.\");\r\n      }\r\n    } else {\r\n      try {\r\n        const res = await axios.post(\"/adduser\", newUser);\r\n        setUsers([...users, res.data]);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de l'ajout:\", error);\r\n        alert(\"Échec de l'ajout de l'utilisateur.\");\r\n      }\r\n    }\r\n\r\n    setShowForm(false);\r\n    setIsEditing(false);\r\n    setNewUser({\r\n      nom: \"\",\r\n      prenom: \"\",\r\n      email: \"\",\r\n      _id: \"\",\r\n      role: \"\",\r\n      tel: \"\",\r\n      password: \"\"\r\n    });\r\n  };\r\n\r\n  const handleDeleteUser = async (index) => {\r\n    const confirmDelete = window.confirm(\"Êtes-vous sûr de vouloir supprimer cet utilisateur ?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        const userId = users[index]._id;\r\n        await axios.delete(`/deleteuser/${userId}`);\r\n        const updatedUsers = users.filter((_, i) => i !== index);\r\n        setUsers(updatedUsers);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression:\", error);\r\n        alert(\"Échec de la suppression de l'utilisateur.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (index) => {\r\n    setNewUser({\r\n      ...users[index],\r\n      password: \"\"\r\n    });\r\n    setIsEditing(true);\r\n    setEditIndex(index);\r\n    setShowForm(true);\r\n  };\r\n\r\n  return (\r\n    <div className={\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg \" + (color === \"light\" ? \"bg-white\" : \"bg-lightBlue-900 text-white\")}>\r\n      <div className=\"flex justify-between items-center px-6 py-4 border-b border-gray-200\">\r\n        <h3 className={\"font-bold text-xl \" + (color === \"light\" ? \"text-blueGray-700\" : \"text-white\")}>Liste des utilisateurs</h3>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto p-4\">\r\n        <div className=\"flex justify-end mb-4\">\r\n          <button\r\n            onClick={() => {\r\n              setShowForm(true);\r\n              setIsEditing(false);\r\n              setNewUser({\r\n                nom: \"\",\r\n                prenom: \"\",\r\n                email: \"\",\r\n                _id: \"\",\r\n                role: \"\",\r\n                tel: \"\",\r\n                password: \"\"\r\n              });\r\n            }}\r\n            className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow text-sm\"\r\n          >\r\n            + Ajouter un utilisateur\r\n          </button>\r\n        </div>\r\n\r\n        <table className=\"w-full text-sm text-left text-white\">\r\n          <thead className=\"text-xs uppercase bg-lightBlue-800 text-blueGray-100\">\r\n            <tr>\r\n              <th className=\"px-6 py-3\">ID</th>\r\n              <th className=\"px-6 py-3\">Nom</th>\r\n              <th className=\"px-6 py-3\">Prénom</th>\r\n              <th className=\"px-6 py-3\">Email</th>\r\n              <th className=\"px-6 py-3\">Rôle</th>\r\n              <th className=\"px-6 py-3\">Téléphone</th>\r\n              <th className=\"px-6 py-3 text-right\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-lightBlue-900 divide-y divide-blueGray-700\">\r\n            {users.map((user, index) => (\r\n              <tr key={user._id} className=\"hover:bg-lightBlue-800\">\r\n                <td className=\"px-6 py-4\">{user._id}</td>\r\n                <td className=\"px-6 py-4\">{user.nom}</td>\r\n                <td className=\"px-6 py-4\">{user.prenom}</td>\r\n                <td className=\"px-6 py-4\">{user.email}</td>\r\n                <td className=\"px-6 py-4\">{user.role}</td>\r\n                <td className=\"px-6 py-4\">{user.tel}</td>\r\n                <td className=\"px-6 py-4 text-right\">\r\n                  <button\r\n                    onClick={() => handleDeleteUser(index)}\r\n                    className=\"bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded mr-2 text-xs shadow\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleEditUser(index)}\r\n                    className=\"bg-lightBlue-500 hover:bg-lightBlue-600 text-white px-3 py-1 rounded text-xs shadow\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faPen} />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        {showForm && (\r\n          <form onSubmit={handleSubmitUser} className=\"mt-6 bg-lightBlue-900 text-white p-6 rounded shadow-md\">\r\n            <h4 className=\"text-lg font-semibold mb-4 text-white\">\r\n              {isEditing ? \"Modifier l'utilisateur\" : \"Ajouter un nouvel utilisateur\"}\r\n            </h4>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\">\r\n              {isEditing && (\r\n                <div>\r\n                  <label className=\"block text-sm mb-1\" htmlFor=\"_id\">ID</label>\r\n                  <input\r\n                    id=\"_id\"\r\n                    type=\"text\"\r\n                    name=\"_id\"\r\n                    value={newUser._id}\r\n                    className=\"w-full p-2 bg-lightBlue-800 border border-lightBlue-700 text-white rounded cursor-not-allowed\"\r\n                    disabled\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              )}\r\n              <div>\r\n                <label className=\"block text-sm mb-1\" htmlFor=\"nom\">Nom</label>\r\n                <input\r\n                  id=\"nom\"\r\n                  type=\"text\"\r\n                  name=\"nom\"\r\n                  value={newUser.nom}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 bg-lightBlue-800 border border-lightBlue-700 text-white rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm mb-1\" htmlFor=\"prenom\">Prénom</label>\r\n                <input\r\n                  id=\"prenom\"\r\n                  type=\"text\"\r\n                  name=\"prenom\"\r\n                  value={newUser.prenom}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 bg-lightBlue-800 border border-lightBlue-700 text-white rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm mb-1\" htmlFor=\"email\">Email</label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={newUser.email}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 bg-lightBlue-800 border border-lightBlue-700 text-white rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm mb-1\" htmlFor=\"role\">Rôle</label>\r\n                <input\r\n                  id=\"role\"\r\n                  type=\"text\"\r\n                  name=\"role\"\r\n                  value={newUser.role}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 bg-lightBlue-800 border border-lightBlue-700 text-white rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm mb-1\" htmlFor=\"tel\">Téléphone</label>\r\n                <input\r\n                  id=\"tel\"\r\n                  type=\"text\"\r\n                  name=\"tel\"\r\n                  value={newUser.tel}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 bg-lightBlue-800 border border-lightBlue-700 text-white rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n              {isEditing && (\r\n                <div>\r\n                  <label className=\"block text-sm mb-1\" htmlFor=\"password\">Nouveau mot de passe</label>\r\n                  <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Laisser vide pour inchangé\"\r\n                    value={newUser.password}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-2 bg-lightBlue-800 border border-lightBlue-700 text-white rounded\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowForm(false)}\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white text-sm font-semibold px-6 py-2 rounded shadow\"\r\n              >\r\n                Annuler\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-emerald-500 hover:bg-emerald-600 text-white text-sm font-semibold px-6 py-2 rounded shadow\"\r\n              >\r\n                {isEditing ? \"Modifier\" : \"Ajouter\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\CardProfile.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Maps\\MapExample.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\IndexDropdown.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\PagesDropdown.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\UserDropdown.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\NotificationDropdown.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\departement\\CardDepartment.js",["221","222","223"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MdDelete, MdEdit } from \"react-icons/md\";\r\n\r\n// Styles CSS pour les dialogs et modals\r\nconst styles = `\r\n\r\n\r\n  .fixed-dialog-container {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n    z-index: 50;\r\n    padding-top: 2rem;\r\n  }\r\n\r\n  .dialog-content {\r\n    background-color: #f7fafc;\r\n    padding: 2rem;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    width: 100%;\r\n    max-width: 30rem;\r\n  }\r\n\r\n  .modal-container {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 50;\r\n  }\r\n\r\n  .modal-content {\r\n    background-color: white;\r\n    padding: 2rem;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    width: 100%;\r\n    max-width: 30rem;\r\n  }\r\n\r\n  .modal-content input,\r\n  .modal-content select {\r\n    width: 100%;\r\n    padding: 0.75rem;\r\n    margin-bottom: 1rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 0.25rem;\r\n    transition: all 0.3s;\r\n  }\r\n\r\n  .modal-content input:focus,\r\n  .modal-content select:focus {\r\n    border-color: #3182ce;\r\n    outline: none;\r\n    box-shadow: 0 0 5px rgba(0, 122, 255, 0.5);\r\n  }\r\n\r\n  .modal-content button {\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 0.25rem;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n  }\r\n\r\n  .modal-content button.cancel {\r\n    background-color: #e2e8f0;\r\n    margin-right: 1rem;\r\n    color: #4a5568;\r\n  }\r\n\r\n  .modal-content button.cancel:hover {\r\n    background-color: #cbd5e0;\r\n  }\r\n\r\n  .modal-content button.submit {\r\n    background-color: #38a169;\r\n    color: white;\r\n  }\r\n\r\n  .modal-content button.submit:hover {\r\n    background-color: #2f855a;\r\n  }\r\n\r\n  .error-message {\r\n    color: red;\r\n    font-size: 0.875rem;\r\n    margin-bottom: 1rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .table-container {\r\n    overflow-x: auto;\r\n    padding: 1.5rem;\r\n    background-color: #f7fafc;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    background-color: #ffffff;\r\n    border-radius: 0.5rem;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 1rem;\r\n    text-align: left;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n\r\n  th {\r\n    background-color: #edf2f7;\r\n    font-weight: 600;\r\n    color: #4a5568;\r\n  }\r\n\r\n  td {\r\n    font-size: 0.9rem;\r\n    color: #2d3748;\r\n  }\r\n\r\n  td button {\r\n    padding: 0.5rem;\r\n    border-radius: 0.25rem;\r\n    margin-right: 0.5rem;\r\n    cursor: pointer;\r\n    transition: all 0.3s;\r\n  }\r\n\r\n  td button:hover {\r\n    opacity: 0.85;\r\n  }\r\n\r\n  .btn-edit {\r\n    background-color: #fbbf24;\r\n    color: white;\r\n  }\r\n\r\n  .btn-delete {\r\n    background-color: #e53e3e;\r\n    color: white;\r\n  }\r\n\r\n  .btn-add {\r\n    background-color: #3182ce;\r\n    color: white;\r\n    padding: 0.75rem 2rem;\r\n    border-radius: 0.25rem;\r\n    font-weight: bold;\r\n    transition: background-color 0.3s;\r\n  }\r\n\r\n  .btn-add:hover {\r\n    background-color: #2b6cb0;\r\n  }\r\n`;\r\n\r\nexport default function CardTechnician({ color = \"light\" }) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortOption, setSortOption] = useState(\"\");\r\n  const [technicians, setTechnicians] = useState([\r\n    { id: 1, technicien: \"Informatique\" },\r\n    { id: 2, technicien: \"Ressources Humaines\" },\r\n    { id: 3, technicien: \"Finance\" },\r\n  ]);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [selectedTechnicianId, setSelectedTechnicianId] = useState(null);\r\n  const [selectedTechnicianName, setSelectedTechnicianName] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [newTechnician, setNewTechnician] = useState({\r\n    technicien: \"\",\r\n  });\r\n  const [selectedTechnician, setSelectedTechnician] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const filteredTechnicians = technicians\r\n    .filter((technician) => {\r\n      if (!isNaN(searchTerm)) {\r\n        return technician.id.toString().includes(searchTerm);\r\n      }\r\n      return technician.technicien.toLowerCase().includes(searchTerm.toLowerCase());\r\n    })\r\n    .sort((a, b) => {\r\n      if (!sortOption) return 0;\r\n      if (sortOption === \"id-asc\") return a.id - b.id;\r\n      if (sortOption === \"id-desc\") return b.id - a.id;\r\n      if (sortOption === \"technicien\") return a.technicien.localeCompare(b.technicien);\r\n      return 0;\r\n    });\r\n\r\n  const handleAction = (action, id, technicien) => {\r\n    switch (action) {\r\n      case \"modifier\":\r\n        const technicianToEdit = technicians.find((technician) => technician.id === id);\r\n        setSelectedTechnician(technicianToEdit);\r\n        setIsEditModalOpen(true);\r\n        break;\r\n      case \"supprimer\":\r\n        setSelectedTechnicianId(id);\r\n        setSelectedTechnicianName(technicien);\r\n        setIsDialogOpen(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    setTechnicians(technicians.filter((technician) => technician.id !== selectedTechnicianId));\r\n    setIsDialogOpen(false);\r\n    setSelectedTechnicianName(\"\");\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setIsDialogOpen(false);\r\n    setSelectedTechnicianName(\"\");\r\n  };\r\n\r\n  const handleAddTechnician = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!newTechnician.technicien) newErrors.technicien = \"Le technicien est obligatoire.\";\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleModalSubmit = () => {\r\n    if (!validateForm()) return;\r\n\r\n    const newTechnicianEntry = {\r\n      id: technicians.length + 1,\r\n      technicien: newTechnician.technicien,\r\n    };\r\n    setTechnicians([...technicians, newTechnicianEntry]);\r\n    setIsModalOpen(false);\r\n    setNewTechnician({\r\n      technicien: \"\",\r\n    });\r\n    setErrors({});\r\n  };\r\n\r\n  const handleModalCancel = () => {\r\n    setIsModalOpen(false);\r\n    setNewTechnician({\r\n      technicien: \"\",\r\n    });\r\n    setErrors({});\r\n  };\r\n\r\n  const handleEditSubmit = () => {\r\n    if (validateForm()) return;\r\n\r\n    const updatedTechnicians = technicians.map((technician) =>\r\n      technician.id === selectedTechnician.id ? { ...selectedTechnician } : technician\r\n    );\r\n\r\n    setTechnicians(updatedTechnicians);\r\n    setIsEditModalOpen(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setIsEditModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Injection des styles CSS */}\r\n      <style>{styles}</style>\r\n\r\n      <div className={\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded \" + (color === \"light\" ? \"bg-white\" : \"bg-lightBlue-900 text-white\")}>\r\n        {/* Confirmation Dialog en Haut de la Page */}\r\n        {isDialogOpen && (\r\n          <div className=\"fixed-dialog-container\">\r\n            <div className=\"dialog-content\">\r\n              <p className=\"text-lg text-gray-700 mb-4\">\r\n                Êtes-vous sûr de vouloir supprimer le technicien <strong>{selectedTechnicianName}</strong> ?\r\n              </p>\r\n              <div className=\"flex justify-end space-x-4\">\r\n                <button\r\n                  onClick={handleCancelDelete}\r\n                  className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400 focus:outline-none\"\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button\r\n                  onClick={handleConfirmDelete}\r\n                  className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 focus:outline-none\"\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Modal pour ajouter un technicien */}\r\n        {isModalOpen && (\r\n          <div className=\"modal-container\">\r\n            <div className=\"modal-content\">\r\n              <h2 className=\"text-lg font-semibold mb-4\">Ajouter un technicien</h2>\r\n              {errors.technicien && <div className=\"error-message\">{errors.technicien}</div>}\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Technicien\"\r\n                value={newTechnician.technicien}\r\n                onChange={(e) => setNewTechnician({ ...newTechnician, technicien: e.target.value })}\r\n              />\r\n              <div className=\"flex justify-end\">\r\n                <button onClick={handleModalCancel} className=\"cancel\">\r\n                  Annuler\r\n                </button>\r\n                <button onClick={handleModalSubmit} className=\"submit\">\r\n                  Ajouter\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Modal pour modifier un technicien */}\r\n        {isEditModalOpen && selectedTechnician && (\r\n          <div className=\"modal-container\">\r\n            <div className=\"modal-content\">\r\n              <h2 className=\"text-lg font-semibold mb-4\">Modifier le technicien</h2>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Technicien\"\r\n                value={selectedTechnician.technicien}\r\n                onChange={(e) => setSelectedTechnician({ ...selectedTechnician, technicien: e.target.value })}\r\n              />\r\n              <div className=\"flex justify-end\">\r\n                <button onClick={handleEditCancel} className=\"cancel\">\r\n                  Annuler\r\n                </button>\r\n                <button onClick={handleEditSubmit} className=\"submit\">\r\n                  Enregistrer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        \r\n        \r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {[\"Id\", \"Technicien\", \"Action\"].map((header, index) => (\r\n                  <th key={index} className=\"px-6 py-3 text-xs uppercase font-semibold text-left bg-blueGray-50 text-blueGray-500 border-blueGray-100\">\r\n                    {header}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredTechnicians.length > 0 ? (\r\n                filteredTechnicians.map((technician) => (\r\n                  <tr key={technician.id}>\r\n                    <td className=\"px-6 py-4 border-b border-gray-200 text-sm\">{technician.id}</td>\r\n                    <td className=\"px-6 py-4 border-b border-gray-200 text-sm\">{technician.technicien}</td>\r\n                    <td className=\"px-6 py-4 border-b border-gray-200 text-sm\">\r\n                      <button onClick={() => handleAction(\"modifier\", technician.id, technician.technicien)} className=\"btn-edit\">\r\n                        <MdEdit />\r\n                      </button>\r\n                      <button onClick={() => handleAction(\"supprimer\", technician.id, technician.technicien)} className=\"btn-delete\">\r\n                        <MdDelete />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"3\" className=\"text-center py-4\">\r\n                    Aucun résultat trouvé\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nCardTechnician.propTypes = {\r\n  color: PropTypes.string,\r\n};\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Calender\\Calenderr.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Dropdowns\\TableDropdown.js",[],["224","225"],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Cards\\TicketTable.js",["226"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport { X } from \"lucide-react\";\r\n\r\nexport default function CardTable({ color }) {\r\n  const [items, setItems] = useState([\r\n    {\r\n      id: 1,\r\n      subject: \"Problème d'accès à l'internet\",\r\n      type: \"Technique\",\r\n      urgency: \"Urgent\",\r\n      status: \"En attente\",\r\n      date: \"2025-03-29\",\r\n      description: \"Le site intranet était inaccessible depuis plusieurs jours.\",\r\n    },\r\n    {\r\n      id: 2,\r\n      subject: \"Mise à jour logiciel\",\r\n      type: \"Fonctionnel\",\r\n      urgency: \"Normal\",\r\n      status: \"Terminé\",\r\n      date: \"2025-04-15\",\r\n      description: \"Mise à jour du logiciel de gestion RH.\",\r\n    },\r\n  ]);\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filterType, setFilterType] = useState(\"\");\r\n  const [filterId, setFilterId] = useState(\"\");\r\n\r\n  const [modalOuvert, setModalOuvert] = useState(false);\r\n  const [newTicket, setNewTicket] = useState({\r\n    subject: \"\",\r\n    type: \"\",\r\n    urgency: \"\",\r\n    description: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    setNewTicket({ ...newTicket, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleModalCancel = () => {\r\n    setModalOuvert(false);\r\n    setNewTicket({ subject: \"\", type: \"\", urgency: \"\", description: \"\" });\r\n    setErrors({});\r\n  };\r\n\r\n  const handleModalSubmit = () => {\r\n    const newErrors = {};\r\n    if (!newTicket.subject.trim()) newErrors.subject = \"Le sujet est requis.\";\r\n    if (!newTicket.type) newErrors.type = \"Le type est requis.\";\r\n    if (!newTicket.urgency) newErrors.urgency = \"L'urgence est requise.\";\r\n    if (!newTicket.description.trim()) newErrors.description = \"La description est requise.\";\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n    } else {\r\n      const newItem = {\r\n        ...newTicket,\r\n        id: items.length + 1,\r\n        status: \"En attente\",\r\n        date: new Date().toISOString().split(\"T\")[0],\r\n      };\r\n      setItems([...items, newItem]);\r\n      handleModalCancel();\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const confirmDelete = window.confirm(\"Voulez-vous vraiment supprimer ce ticket ?\");\r\n    if (confirmDelete) {\r\n      setItems(items.filter((item) => item.id !== id));\r\n    }\r\n  };\r\n\r\n  const filteredItems = items.filter((item) => {\r\n    const matchesId = filterId ? item.id.toString().includes(filterId) : true;\r\n    const matchesSearch = searchQuery\r\n      ? item.subject.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        item.description.toLowerCase().includes(searchQuery.toLowerCase())\r\n      : true;\r\n    const matchesType = filterType ? item.urgency === filterType : true;\r\n\r\n    return matchesId && matchesSearch && matchesType;\r\n  });\r\n\r\n  const badgeStyle = {\r\n    backgroundColor: \"#e6fffa\",\r\n    color: \"#047857\",\r\n    padding: \"0.25rem 0.5rem\",\r\n    borderRadius: \"9999px\",\r\n    fontSize: \"0.75rem\",\r\n    fontWeight: \"500\",\r\n  };\r\n\r\n  return (\r\n    <div className={`relative mx-auto max-w-screen-xl flex flex-col min-w-0 rounded-lg shadow-lg mb-10 ${color === \"light\" ? \"bg-white\" : \"bg-slate-800 text-white\"}`}>\r\n      <style jsx>{`\r\n        /* Style de base pour tous les boutons d'action */\r\n        .gp-action-button {\r\n          padding: 0.375rem;\r\n          border-radius: 0.375rem;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        /* Style spécifique pour le bouton Modifier */\r\n        .gp-edit-button {\r\n          background-color: #dbeafe; /* Bleu clair */\r\n          color: #3b82f6; /* Bleu vif */\r\n        }\r\n\r\n        .gp-edit-button:hover {\r\n          background-color: #bfdbfe; /* Bleu clair plus foncé au survol */\r\n        }\r\n\r\n        /* Style spécifique pour le bouton Supprimer */\r\n        .gp-delete-button {\r\n          background-color: #fee2e2; /* Rouge clair */\r\n          color: #ef4444; /* Rouge vif */\r\n        }\r\n\r\n        .gp-delete-button:hover {\r\n          background-color: #fecaca; /* Rouge clair plus foncé au survol */\r\n        }\r\n\r\n        .gp-add-button {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 0.5rem;\r\n          background-color: #0ea5e9;\r\n          color: white;\r\n          padding: 0.55rem 2.5rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 500;\r\n          transition: all 0.2s ease;\r\n        }\r\n        .gp-add-button:hover {\r\n          background-color: #0284c7;\r\n        }\r\n        .gp-modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100vw;\r\n          height: 100vh;\r\n          background-color: rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 50;\r\n        }\r\n        .gp-modal-container {\r\n          background-color: white;\r\n          border-radius: 0.75rem;\r\n          padding: 2rem;\r\n          width: 90%;\r\n          max-width: 500px;\r\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n        }\r\n        .gp-modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 1rem;\r\n        }\r\n        .gp-form-group {\r\n          margin-bottom: 1.5rem;\r\n        }\r\n        .gp-form-input {\r\n          width: 100%;\r\n          padding: 0.5rem;\r\n          border: 1px solid #ccc;\r\n          border-radius: 0.375rem;\r\n        }\r\n        .gp-btn {\r\n          padding: 0.5rem 1.25rem;\r\n          border-radius: 0.375rem;\r\n          font-weight: 600;\r\n        }\r\n        .gp-btn-save {\r\n          background-color: #0ea5e9;\r\n          color: white;\r\n          margin-left: 1rem;\r\n        }\r\n        .gp-btn-cancel {\r\n          background-color: #f3f4f6;\r\n          color: #374151;\r\n        }\r\n      `}</style>\r\n\r\n      <div className=\"px-6 pt-6 border-b-2 border-gray-300\">\r\n        <h1 className={`text-2xl font-bold text-center ${color === \"light\" ? \"text-gray-800\" : \"text-white\"}`}>\r\n          Liste des tickets\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"flex justify-between px-6 pt-6 pb-4 items-center gap-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"🔍 Rechercher par ID...\"\r\n          value={filterId}\r\n          onChange={(e) => setFilterId(e.target.value)}\r\n          className=\"w-full sm:w-64 px-4 py-2 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n        />\r\n\r\n        <div className=\"flex gap-4 items-center\">\r\n          <FaFilter className=\"text-gray-700 text-xl mr-2\" />\r\n\r\n          <select\r\n            value={filterType}\r\n            onChange={(e) => setFilterType(e.target.value)}\r\n            className=\"w-50 sm:w-64 border rounded-lg shadow-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mr-4\"\r\n          >\r\n            <option value=\"\">Filtrer par urgence</option>\r\n            <option value=\"Urgent\">Urgent</option>\r\n            <option value=\"Normal\">Normal</option>\r\n          </select>\r\n\r\n          <button className=\"gp-add-button\" onClick={() => setModalOuvert(true)}>\r\n            <span>+</span>\r\n            <span>Créer</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto px-6 pt-4 pb-14\">\r\n        <table className=\"w-full border-collapse\">\r\n          <thead>\r\n            <tr className={`text-left ${color === \"light\" ? \"bg-gray-50 text-gray-500\" : \"bg-slate-700 text-slate-200\"}`}>\r\n              <th className=\"px-6 py-4 font-medium\">ID</th>\r\n              <th className=\"px-6 py-4 font-medium\">Sujet</th>\r\n              <th className=\"px-6 py-4 font-medium\">Type</th>\r\n              <th className=\"px-6 py-4 font-medium\">Urgence</th>\r\n              <th className=\"px-6 py-4 font-medium\">Statut</th>\r\n              <th className=\"px-6 py-4 font-medium\">Date</th>\r\n              <th className=\"px-6 py-4 font-medium\">Description</th>\r\n              <th className=\"px-6 py-4 font-medium\">Actions</th> {/* Nouvelle colonne Actions */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredItems.map((item) => (\r\n              <tr key={item.id} className={`border-t ${color === \"light\" ? \"hover:bg-gray-50\" : \"hover:bg-slate-700\"} transition-colors`}>\r\n                <td className=\"px-6 py-4\">{item.id}</td>\r\n                <td className=\"px-6 py-4\">{item.subject}</td>\r\n                <td className=\"px-6 py-4\">{item.type}</td>\r\n                <td className=\"px-6 py-4 font-semibold text-red-600\">{item.urgency}</td>\r\n                <td className=\"px-6 py-4\">\r\n                  <span\r\n                    style={{\r\n                      ...badgeStyle,\r\n                      backgroundColor: item.status === \"En attente\" ? \"#e6fffa\" : \"#ffe6e6\",\r\n                      color: item.status === \"En attente\" ? \"#047857\" : \"#d32f2f\",\r\n                    }}\r\n                  >\r\n                    {item.status}\r\n                  </span>\r\n                </td>\r\n                <td className=\"px-6 py-4\">{item.date}</td>\r\n                <td className={`px-6 py-4 truncate max-w-[300px] ${color === \"light\" ? \"text-gray-600\" : \"text-slate-300\"}`}>\r\n                  {item.description}\r\n                </td>\r\n                <td className=\"px-6 py-4\">\r\n  <div className=\"flex\">\r\n    <button\r\n      onClick={() => alert(`Modifier ticket ID: ${item.id}`)} // À remplacer par ta fonction de modification\r\n      className=\"gp-edit-button mr-4\" // Ajout de margin-right\r\n    >\r\n      🖊 \r\n    </button>\r\n    <button\r\n      onClick={() => handleDelete(item.id)}\r\n      className=\"gp-delete-button\"\r\n    >\r\n      🗑 \r\n    </button>\r\n  </div>\r\n</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {modalOuvert && (\r\n        <div className=\"gp-modal-overlay\">\r\n          <div className=\"gp-modal-container\">\r\n            <div className=\"gp-modal-header\">\r\n              <h2 className=\"text-xl font-bold\">Créer un ticket</h2>\r\n              <button onClick={handleModalCancel}><X size={24} /></button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Sujet</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"subject\"\r\n                  value={newTicket.subject}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.subject && <p className=\"text-red-500 text-sm\">{errors.subject}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Type</label>\r\n                <select\r\n                  name=\"type\"\r\n                  value={newTicket.type}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                >\r\n                  <option value=\"\">-- Sélectionner --</option>\r\n                  <option value=\"Technique\">Technique</option>\r\n                  <option value=\"Fonctionnel\">Fonctionnel</option>\r\n                </select>\r\n                {errors.type && <p className=\"text-red-500 text-sm\">{errors.type}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Urgence</label>\r\n                <select\r\n                  name=\"urgency\"\r\n                  value={newTicket.urgency}\r\n                  onChange={handleChange}\r\n                  className=\"gp-form-input\"\r\n                >\r\n                  <option value=\"\">-- Sélectionner --</option>\r\n                  <option value=\"Urgent\">Urgent</option>\r\n                  <option value=\"Normal\">Normal</option>\r\n                </select>\r\n                {errors.urgency && <p className=\"text-red-500 text-sm\">{errors.urgency}</p>}\r\n              </div>\r\n\r\n              <div className=\"gp-form-group\">\r\n                <label className=\"block font-semibold mb-1\">Description</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={newTicket.description}\r\n                  onChange={handleChange}\r\n                  rows={4}\r\n                  className=\"gp-form-input\"\r\n                />\r\n                {errors.description && <p className=\"text-red-500 text-sm\">{errors.description}</p>}\r\n              </div>\r\n\r\n              <div className=\"flex justify-end mt-4\">\r\n                <button onClick={handleModalCancel} className=\"gp-btn gp-btn-cancel\">Annuler</button>\r\n                <button onClick={handleModalSubmit} className=\"gp-btn gp-btn-save\">Ajouter</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardTable.defaultProps = {\r\n  color: \"light\",\r\n};\r\n\r\nCardTable.propTypes = {\r\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\r\n};\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\services\\ApiUser.js",[],["227","228"],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Login.js",["229"],"import { useState } from \"react\";\r\nimport { FaGoogle } from \"react-icons/fa\";\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  \r\n\r\n  return (\r\n    <div style={{ \r\n      display: \"flex\", \r\n      height: \"100vh\", \r\n      alignItems: \"center\", \r\n      justifyContent: \"center\", \r\n      backgroundImage: \"url('https://img.freepik.com/premium-vector/abstract-geometric-white-gray-color-background-vector_665257-159.jpg?semt=ais_hybrid')\", \r\n      backgroundSize: \"cover\", \r\n      backgroundPosition: \"center\", \r\n      padding: \"16px\" \r\n    }}>\r\n      <div style={{ \r\n        display: \"grid\", \r\n        gridTemplateColumns: \"1fr 1fr\", \r\n        boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\", \r\n        borderRadius: \"12px\", \r\n        overflow: \"hidden\", \r\n        maxWidth: \"1000px\", \r\n        width: \"100%\", \r\n        position: \"relative\" \r\n      }}>\r\n        \r\n        <img \r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/Logo_STB.png\" \r\n          alt=\"STB Logo\" \r\n          style={{ \r\n            position: \"absolute\", \r\n            top: \"12px\", \r\n            left: \"12px\", \r\n            width: \"120px\", \r\n            height: \"auto\" \r\n          }} \r\n        />\r\n\r\n        <div style={{ padding: \"32px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", background: \"white\" }}>\r\n          <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", color: \"#1f2937\", textAlign: \"center\" }}>Log In</h2>\r\n          <div style={{ marginTop: \"16px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Email</label>\r\n            <input type=\"email\" placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)} style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #d1d5db\", borderRadius: \"6px\", marginTop: \"4px\" }} />\r\n          </div>\r\n          <div style={{ marginTop: \"12px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Password</label>\r\n            <input type=\"password\" placeholder=\"Enter your password\" value={password} onChange={(e) => setPassword(e.target.value)} style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #d1d5db\", borderRadius: \"6px\", marginTop: \"4px\" }} />\r\n          </div>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"12px\" }}>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <input type=\"checkbox\" id=\"remember\" />\r\n              <label htmlFor=\"remember\" style={{ marginLeft: \"6px\", fontSize: \"14px\", color: \"#4b5563\" }}>Remember me</label>\r\n            </div>\r\n            <a href=\"#\" style={{ fontSize: \"14px\", color: \"#3b82f6\", textDecoration: \"none\" }}>Forgot password?</a>\r\n          </div>\r\n          <button style={{ width: \"100%\", background: \"#3b82f6\", color: \"white\", padding: \"10px\", marginTop: \"16px\", borderRadius: \"6px\", fontWeight: \"bold\", cursor: \"pointer\" }}>LOG IN</button>\r\n          <div style={{ display: \"flex\", alignItems: \"center\", margin: \"16px 0\" }}>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n            <span style={{ margin: \"0 8px\", fontSize: \"14px\", color: \"#6b7280\" }}>OR</span>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n          </div>\r\n          <button style={{ width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"8px\", border: \"1px solid #d1d5db\", padding: \"10px\", borderRadius: \"6px\", fontWeight: \"bold\", cursor: \"pointer\", background: \"white\" }}>\r\n            <FaGoogle style={{ color: \"#3b82f6\" }} /> Continue with Google\r\n          </button>\r\n          <p style={{ fontSize: \"14px\", textAlign: \"center\", color: \"#6b7280\", marginTop: \"12px\" }}>\r\n            Don't have an account? <a href=\"Register\" style={{ color: \"#3b82f6\", textDecoration: \"none\" }}>Sign Up</a>\r\n         \r\n          </p>\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", backgroundImage: \"url('https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrxCZS8RUx52KhkLFeYR19uXX3GnbF9-sH75brySGs70DJ1EINGwkFnr6K5LqopCqGHTVK79x_gscCHE_cR1wmpIADhJXkTZIJhDz_VtYuxwekNibQUVl6VKNuq3uOlTsfnFW2F_ZVXsm2m7DU2IGJREbwsM16cR45D3-4iI5AwRArtjCnR713SvfIJpg/s1934/stb%20%20thebanker.jpg')\", backgroundSize: \"cover\", backgroundPosition: \"center\", color: \"white\", padding: \"32px\", textAlign: \"center\" }}>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Register.js",["230","231","232","233","234","235","236","237","238","239"],"import { useState } from \"react\";\r\nimport { FaGoogle } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\n\r\nexport default function Register() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      nom: firstName,\r\n      prenom: lastName,\r\n      email: email,\r\n      tel: phoneNumber,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"/adduser\", userData);\r\n      console.log(\"Utilisateur ajouté:\", response.data);\r\n      alert(\"Utilisateur ajouté avec succès!\");\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'ajout de l'utilisateur:\", error);\r\n      alert(\"Erreur lors de l'ajout de l'utilisateur!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundImage: \"url('https://img.freepik.com/premium-vector/abstract-geometric-white-gray-color-background-vector_665257-159.jpg?semt=ais_hybrid')\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        padding: \"16px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1fr 1fr\",\r\n          boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\r\n          borderRadius: \"12px\",\r\n          overflow: \"hidden\",\r\n          maxWidth: \"1000px\",\r\n          width: \"100%\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {/* Logo STB */}\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/Logo_STB.png\"\r\n          alt=\"STB Logo\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"12px\",\r\n            left: \"12px\",\r\n            width: \"120px\",\r\n            height: \"auto\",\r\n          }}\r\n        />\r\n\r\n        {/* Partie Gauche - Formulaire */}\r\n        <div\r\n          style={{\r\n            padding: \"32px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            background: \"white\",\r\n          }}\r\n        >\r\n          <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", color: \"#1f2937\", textAlign: \"center\" }}>\r\n            Sign Up\r\n          </h2>\r\n\r\n          <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: \"12px\", marginTop: \"16px\" }}>\r\n            <div>\r\n              <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Nom</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your first name\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"8px\",\r\n                  border: \"1px solid #d1d5db\",\r\n                  borderRadius: \"6px\",\r\n                  marginTop: \"4px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Prenom</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your last name\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"8px\",\r\n                  border: \"1px solid #d1d5db\",\r\n                  borderRadius: \"6px\",\r\n                  marginTop: \"4px\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ marginTop: \"12px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"8px\",\r\n                border: \"1px solid #d1d5db\",\r\n                borderRadius: \"6px\",\r\n                marginTop: \"4px\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: \"12px\" }}>\r\n            <label style={{ display: \"block\", fontSize: \"14px\", fontWeight: \"500\", color: \"#4b5563\" }}>Num tel</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your phone number\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"8px\",\r\n                border: \"1px solid #d1d5db\",\r\n                borderRadius: \"6px\",\r\n                marginTop: \"4px\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleSubmit}\r\n            style={{\r\n              width: \"100%\",\r\n              background: \"#3b82f6\",\r\n              color: \"white\",\r\n              padding: \"10px\",\r\n              marginTop: \"16px\",\r\n              borderRadius: \"6px\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            REGISTER\r\n          </button>\r\n\r\n          <div style={{ display: \"flex\", alignItems: \"center\", margin: \"16px 0\" }}>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n            <span style={{ margin: \"0 8px\", fontSize: \"14px\", color: \"#6b7280\" }}>OR</span>\r\n            <div style={{ flex: \"1\", height: \"1px\", background: \"#d1d5db\" }}></div>\r\n          </div>\r\n\r\n          <button\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              gap: \"8px\",\r\n              border: \"1px solid #d1d5db\",\r\n              padding: \"10px\",\r\n              borderRadius: \"6px\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n              background: \"white\",\r\n            }}\r\n          >\r\n            <FaGoogle style={{ color: \"#3b82f6\" }} /> Continue with Google\r\n          </button>\r\n\r\n          <p style={{ fontSize: \"14px\", textAlign: \"center\", color: \"#6b7280\", marginTop: \"12px\" }}>\r\n            Already have an account?{\" \"}\r\n            <a href=\"./\" style={{ color: \"#3b82f6\", textDecoration: \"none\" }}>Log in</a>\r\n          </p>\r\n        </div>\r\n\r\n        {/* Partie Droite - Image */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundImage: \"url('https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrxCZS8RUx52KhkLFeYR19uXX3GnbF9-sH75brySGs70DJ1EINGwkFnr6K5LqopCqGHTVK79x_gscCHE_cR1wmpIADhJXkTZIJhDz_VtYuxwekNibQUVl6VKNuq3uOlTsfnFW2F_ZVXsm2m7DU2IGJREbwsM16cR45D3-4iI5AwRArtjCnR713SvfIJpg/s1934/stb%20%20thebanker.jpg')\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            color: \"white\",\r\n            padding: \"32px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\Ticket.js",[],"C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\components\\Footers\\Footerr.js",["240","241","242","243"],"import React from \"react\";\r\nimport {\r\n  FaFacebookF,\r\n  FaInstagram,\r\n  FaTwitter,\r\n  FaLinkedinIn,\r\n} from \"react-icons/fa\";\r\nimport logo from \"assets/img/logo stb.png\"; // Assure-toi que ce chemin est correct\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer style={styles.footer}>\r\n      <div style={styles.container}>\r\n        <img src={logo} alt=\"STB Logo\" style={styles.logo} />\r\n        <p style={styles.copy}>\r\n          © {new Date().getFullYear()} Stb Banque\r\n        </p>\r\n        <div style={styles.socialIcons}>\r\n          <a href=\"#\" style={styles.icon}><FaFacebookF /></a>\r\n          <a href=\"#\" style={styles.icon}><FaInstagram /></a>\r\n          <a href=\"#\" style={styles.icon}><FaTwitter /></a>\r\n          <a href=\"#\" style={styles.icon}><FaLinkedinIn /></a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\n// Styles mini-mini\r\nconst styles = {\r\n  footer: {\r\n    backgroundColor: \"#f3f4f6\",\r\n    padding: \"1rem 0.5rem\", // ↘️ Très petit padding\r\n    borderTop: \"2px solid #0d47a1\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n  container: {\r\n    maxWidth: \"900px\",\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    gap: \"0.4rem\",\r\n  },\r\n  logo: {\r\n    width: \"40px\", // ↘️ Logo réduit au minimum\r\n    height: \"auto\",\r\n  },\r\n  copy: {\r\n    color: \"#475569\",\r\n    margin: \"0.2rem 0\",\r\n  },\r\n  socialIcons: {\r\n    display: \"flex\",\r\n    gap: \"0.5rem\",\r\n    justifyContent: \"center\",\r\n  },\r\n  icon: {\r\n    backgroundColor: \"#e0e7ff\",\r\n    color: \"#0d47a1\",\r\n    borderRadius: \"50%\",\r\n    width: \"28px\", // ↘️ Très petite icône\r\n    height: \"28px\",\r\n    fontSize: \"0.9rem\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n","C:\\Users\\Toumi\\Desktop\\projet pfe\\prpfe\\src\\views\\MyTickets.js",[],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":19},{"ruleId":"248","severity":1,"message":"252","line":5,"column":21,"nodeType":"250","messageId":"251","endLine":5,"endColumn":24},{"ruleId":"248","severity":1,"message":"253","line":5,"column":26,"nodeType":"250","messageId":"251","endLine":5,"endColumn":29},{"ruleId":"248","severity":1,"message":"254","line":5,"column":31,"nodeType":"250","messageId":"251","endLine":5,"endColumn":37},{"ruleId":"255","severity":1,"message":"256","line":327,"column":6,"nodeType":"257","endLine":327,"endColumn":8,"suggestions":"258"},{"ruleId":"248","severity":1,"message":"259","line":6,"column":8,"nodeType":"250","messageId":"251","endLine":6,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":59,"column":13,"nodeType":"262","endLine":59,"endColumn":96},{"ruleId":"248","severity":1,"message":"263","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":17},{"ruleId":"248","severity":1,"message":"264","line":174,"column":22,"nodeType":"250","messageId":"251","endLine":174,"endColumn":35},{"ruleId":"248","severity":1,"message":"265","line":175,"column":22,"nodeType":"250","messageId":"251","endLine":175,"endColumn":35},{"ruleId":"248","severity":1,"message":"266","line":235,"column":9,"nodeType":"250","messageId":"251","endLine":235,"endColumn":28},{"ruleId":"244","replacedBy":"267"},{"ruleId":"246","replacedBy":"268"},{"ruleId":"248","severity":1,"message":"269","line":28,"column":23,"nodeType":"250","messageId":"251","endLine":28,"endColumn":37},{"ruleId":"244","replacedBy":"270"},{"ruleId":"246","replacedBy":"271"},{"ruleId":"260","severity":1,"message":"261","line":59,"column":13,"nodeType":"262","endLine":59,"endColumn":96},{"ruleId":"248","severity":1,"message":"272","line":9,"column":10,"nodeType":"250","messageId":"251","endLine":9,"endColumn":18},{"ruleId":"248","severity":1,"message":"273","line":9,"column":20,"nodeType":"250","messageId":"251","endLine":9,"endColumn":31},{"ruleId":"248","severity":1,"message":"274","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":17},{"ruleId":"248","severity":1,"message":"275","line":11,"column":19,"nodeType":"250","messageId":"251","endLine":11,"endColumn":29},{"ruleId":"248","severity":1,"message":"276","line":12,"column":10,"nodeType":"250","messageId":"251","endLine":12,"endColumn":14},{"ruleId":"248","severity":1,"message":"277","line":12,"column":16,"nodeType":"250","messageId":"251","endLine":12,"endColumn":23},{"ruleId":"248","severity":1,"message":"278","line":13,"column":10,"nodeType":"250","messageId":"251","endLine":13,"endColumn":20},{"ruleId":"248","severity":1,"message":"279","line":13,"column":22,"nodeType":"250","messageId":"251","endLine":13,"endColumn":35},{"ruleId":"248","severity":1,"message":"280","line":14,"column":10,"nodeType":"250","messageId":"251","endLine":14,"endColumn":18},{"ruleId":"248","severity":1,"message":"281","line":14,"column":20,"nodeType":"250","messageId":"251","endLine":14,"endColumn":31},{"ruleId":"260","severity":1,"message":"261","line":19,"column":11,"nodeType":"262","endLine":19,"endColumn":43},{"ruleId":"260","severity":1,"message":"261","line":20,"column":11,"nodeType":"262","endLine":20,"endColumn":43},{"ruleId":"260","severity":1,"message":"261","line":21,"column":11,"nodeType":"262","endLine":21,"endColumn":43},{"ruleId":"260","severity":1,"message":"261","line":22,"column":11,"nodeType":"262","endLine":22,"endColumn":43},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDepartments'. Either include it or remove the dependency array.","ArrayExpression",["284"],"'CardProfile' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PropTypes' is defined but never used.","'setSearchTerm' is assigned a value but never used.","'setSortOption' is assigned a value but never used.","'handleAddTechnician' is assigned a value but never used.",["282"],["283"],"'setSearchQuery' is assigned a value but never used.",["282"],["283"],"'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'postalCode' is assigned a value but never used.","'setPostalCode' is assigned a value but never used.","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},"Update the dependencies array to be: [fetchDepartments]",{"range":"287","text":"288"},[7091,7093],"[fetchDepartments]"]